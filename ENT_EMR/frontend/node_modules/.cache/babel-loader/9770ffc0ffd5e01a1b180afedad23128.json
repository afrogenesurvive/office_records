{"ast":null,"code":"import _extends from \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdateUserAttachmentForm.js\";\nimport React from 'react';\nimport GooglePicker from 'react-google-picker';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport AuthContext from '../../context/auth-context';\nimport './CreateUserForm.css';\n\nconst UpdateUserAttachmentForm = props => {\n  const user = _extends({}, props.user);\n\n  const gdriveCreds = AuthContext._currentValue.creds.gdrive;\n  return React.createElement(\"div\", {\n    className: \"UpdateFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: props.onConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridAttachmentFormat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Format\"), React.createElement(Form.Control, {\n    type: \"string\",\n    placeholder: \"File format\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridAttachmentFile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"File\"), React.createElement(Form.Control, {\n    type: \"file\",\n    placeholder: \"File\",\n    onChange: e => {\n      console.log(e.target.files[0]);\n      AuthContext._currentValue.file = e.target.files[0];\n      console.log(AuthContext._currentValue.file);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(GooglePicker, {\n    clientId: 'gdriveCreds.clientId',\n    developerKey: 'gdriveCreds.developerKey',\n    scope: ['https://www.googleapis.com/auth/drive.readonly'],\n    onChange: data => console.log('on change:', data),\n    onAuthenticate: token => console.log('oauth token:', token),\n    onAuthFailed: data => console.log('on auth failed:', data),\n    multiselect: true,\n    navHidden: true,\n    authImmediate: false,\n    mimeTypes: ['image/png', 'image/jpeg', 'image/jpg'],\n    viewId: 'DOCS',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"primary\",\n    className: \"formButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Google Picker\"))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, props.canCancel && React.createElement(Button, {\n    variant: \"danger\",\n    className: \"formButton\",\n    onClick: props.onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Cancel\"), props.canCancelProfile && React.createElement(Button, {\n    variant: \"danger\",\n    className: \"formButton\",\n    onClick: props.onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Cancel\"), props.canConfirm && React.createElement(Button, {\n    variant: \"primary\",\n    className: \"formButton\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nexport default UpdateUserAttachmentForm;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdateUserAttachmentForm.js"],"names":["React","GooglePicker","Form","Button","Col","Accordion","AuthContext","UpdateUserAttachmentForm","props","user","gdriveCreds","_currentValue","creds","gdrive","onConfirm","e","console","log","target","files","file","data","token","canCancel","onCancel","canCancelProfile","canConfirm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport GooglePicker from 'react-google-picker';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport AuthContext from '../../context/auth-context';\nimport './CreateUserForm.css';\n\nconst UpdateUserAttachmentForm = (props) => {\nconst {...user} = props.user;\nconst gdriveCreds = AuthContext._currentValue.creds.gdrive;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n\n  <Form.Group as={Col} controlId=\"formGridAttachmentFormat\">\n    <Form.Label>Format</Form.Label>\n    <Form.Control type=\"string\" placeholder=\"File format\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridAttachmentFile\">\n    <Form.Label>File</Form.Label>\n    <Form.Control type=\"file\" placeholder=\"File\" onChange={(e) => {console.log(e.target.files[0]);AuthContext._currentValue.file = e.target.files[0];console.log(AuthContext._currentValue.file);}}/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n<GooglePicker clientId={'gdriveCreds.clientId'}\n            developerKey={'gdriveCreds.developerKey'}\n            scope={['https://www.googleapis.com/auth/drive.readonly']}\n              onChange={data => console.log('on change:', data)}\n              onAuthenticate={token => console.log('oauth token:', token)}\n              onAuthFailed={data => console.log('on auth failed:', data)}\n              multiselect={true}\n              navHidden={true}\n              authImmediate={false}\n              mimeTypes={['image/png', 'image/jpeg', 'image/jpg']}\n              viewId={'DOCS'}>\n            <Button variant=\"primary\" className=\"formButton\">\n            Google Picker\n            </Button>\n</GooglePicker>\n</Form.Row>\n\n{\n// <Form.Row>\n// <GooglePicker clientId={'gdriveCreds.clientId'}\n//             developerKey={'gdriveCreds.developerKey'}\n//             scope={['https://www.googleapis.com/auth/drive.readonly']}\n//               onChange={data => console.log('on change:', data)}\n//               onAuthFailed={data => console.log('on auth failed:', data)}\n//               multiselect={true}\n//               navHidden={true}\n//               authImmediate={false}\n//               mimeTypes={['image/png', 'image/jpeg', 'image/jpg']}\n//               query={'10'}\n//               viewId={'DOCS'}>\n//             <Button variant=\"primary\" className=\"formButton\">\n//             Google Picker\n//             </Button>\n// </GooglePicker>\n// </Form.Row>\n}\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateUserAttachmentForm;\n"]},"metadata":{},"sourceType":"module"}