{"ast":null,"code":"var _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport AuthPage from './pages/Auth';\nimport SignupPage from './pages/Signup';\nimport UsersPage from './pages/Users';\nimport PatientsPage from './pages/Patients';\nimport AppointmentsPage from './pages/Appointments';\nimport ThisUserPage from './pages/thisUser';\nimport SidebarPage from './pages/Sidebar';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null,\n      userId: null,\n      context: this.context,\n      sessionCookiePresent: false\n    };\n\n    this.login = (token, userId, tokenExpiration) => {\n      this.setState({\n        token: token,\n        userId: userId\n      });\n    };\n\n    this.logout = () => {\n      this.setState({\n        token: null,\n        userId: null,\n        sessionCookiePresent: false\n      });\n      sessionStorage.clear();\n      this.context = {\n        token: null,\n        userId: null,\n        user: {},\n        users: [],\n        selectedUser: {},\n        selectedPatient: {},\n        selectedAppointment: {},\n        patient: {},\n        appointment: {},\n        appointmentPatientId: null,\n        userUpdateField: null,\n        patientUpdateField: null,\n        appointmentUpdateField: null,\n        appointmentsToday: null,\n        appointmentsWeekImportant: null,\n        appointmentsInProgress: null,\n        userAlert: \"\",\n        visit: null,\n        file: null,\n        fancyDate: null,\n        login: this.login,\n        logout: this.logout,\n        creds: null\n      };\n    };\n\n    this.sessionStorageAuth = null;\n  }\n\n  componentDidMount() {\n    console.log(\"here\");\n\n    if (sessionStorage.getItem('login info')) {\n      let seshStore = sessionStorage.getItem('login info');\n      this.context.token = seshStore.token;\n      this.context.userId = seshStore.userId;\n      this.setState({\n        sessionCookiePresent: true,\n        userId: seshStore.userId,\n        token: seshStore.token\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(AuthContext.Provider, {\n      value: {\n        token: this.state.token,\n        userId: this.state.userId,\n        user: {},\n        users: [],\n        selectedUser: {},\n        selectedPatient: {},\n        selectedAppointment: {},\n        patient: {},\n        appointment: {},\n        appointmentPatientId: null,\n        userUpdateField: null,\n        patientUpdateField: null,\n        appointmentUpdateField: null,\n        appointmentsToday: null,\n        appointmentsWeekImportant: null,\n        appointmentsInProgress: null,\n        userAlert: \"\",\n        visit: null,\n        file: null,\n        fancyDate: null,\n        login: this.login,\n        logout: this.logout,\n        creds: null\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(MainNavigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: \"main-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, // logged in -> pages\n    this.state.token || this.state.sessionCookiePresent === true && React.createElement(Redirect, {\n      from: \"/\",\n      to: \"/users\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), this.state.token || this.state.sessionCookiePresent === true && React.createElement(Route, {\n      path: \"/users\",\n      component: UsersPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), this.state.token || this.state.sessionCookiePresent === true && React.createElement(Route, {\n      path: \"/patients\",\n      component: PatientsPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), this.state.token || this.state.sessionCookiePresent === true && React.createElement(Route, {\n      path: \"/appointments\",\n      component: AppointmentsPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), this.state.token || this.state.sessionCookiePresent === true && React.createElement(Route, {\n      path: \"/profile\",\n      component: ThisUserPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), // logged in -> users page from login page\n    this.state.token || this.state.sessionCookiePresent === true && React.createElement(Redirect, {\n      from: \"/auth\",\n      to: \"/profile\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), //if not logged in -> go to login page\n    !this.state.token && React.createElement(Route, {\n      path: \"/auth\",\n      component: AuthPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), !this.state.token && React.createElement(Route, {\n      path: \"/signup\",\n      component: SignupPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), !this.state.token && React.createElement(Redirect, {\n      to: \"/auth\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nApp.contextType = AuthContext;\nexport default App;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/App.js"],"names":["React","Component","BrowserRouter","Route","Redirect","Switch","AuthPage","SignupPage","UsersPage","PatientsPage","AppointmentsPage","ThisUserPage","SidebarPage","MainNavigation","AuthContext","App","constructor","props","state","token","userId","context","sessionCookiePresent","login","tokenExpiration","setState","logout","sessionStorage","clear","user","users","selectedUser","selectedPatient","selectedAppointment","patient","appointment","appointmentPatientId","userUpdateField","patientUpdateField","appointmentUpdateField","appointmentsToday","appointmentsWeekImportant","appointmentsInProgress","userAlert","visit","file","fancyDate","creds","sessionStorageAuth","componentDidMount","console","log","getItem","seshStore","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport AuthPage from './pages/Auth';\nimport SignupPage from './pages/Signup';\nimport UsersPage from './pages/Users';\nimport PatientsPage from './pages/Patients';\nimport AppointmentsPage from './pages/Appointments';\nimport ThisUserPage from './pages/thisUser';\nimport SidebarPage from './pages/Sidebar';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    userId: null,\n    context: this.context,\n    sessionCookiePresent: false,\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.sessionStorageAuth = null;\n  }\n\n  login = (token, userId, tokenExpiration) => {\n    this.setState({ token: token, userId: userId });\n  };\n\n  logout = () => {\n    this.setState({\n       token: null,\n       userId: null,\n       sessionCookiePresent: false\n      });\n    sessionStorage.clear();\n    this.context = {\n      token: null,\n      userId: null,\n      user: {},\n      users:[],\n      selectedUser: {},\n      selectedPatient: {},\n      selectedAppointment: {},\n      patient: {},\n      appointment: {},\n      appointmentPatientId: null,\n      userUpdateField: null,\n      patientUpdateField: null,\n      appointmentUpdateField: null,\n      appointmentsToday: null,\n      appointmentsWeekImportant: null,\n      appointmentsInProgress: null,\n      userAlert: \"\",\n      visit: null,\n      file: null,\n      fancyDate: null,\n      login: this.login,\n      logout: this.logout,\n      creds: null,\n    }\n  };\n\n\n  componentDidMount() {\n    console.log(\"here\");\n    if (sessionStorage.getItem('login info')) {\n\n      let seshStore = sessionStorage.getItem('login info');\n      this.context.token = seshStore.token;\n      this.context.userId = seshStore.userId;\n      this.setState({\n        sessionCookiePresent: true,\n        userId: seshStore.userId,\n        token: seshStore.token,\n        });\n\n    }\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              userId: this.state.userId,\n              user: {},\n              users:[],\n              selectedUser: {},\n              selectedPatient: {},\n              selectedAppointment: {},\n              patient: {},\n              appointment: {},\n              appointmentPatientId: null,\n              userUpdateField: null,\n              patientUpdateField: null,\n              appointmentUpdateField: null,\n              appointmentsToday: null,\n              appointmentsWeekImportant: null,\n              appointmentsInProgress: null,\n              userAlert: \"\",\n              visit: null,\n              file: null,\n              fancyDate: null,\n              login: this.login,\n              logout: this.logout,\n              creds: null,\n            }}\n          >\n            <MainNavigation />\n            <main className=\"main-content\">\n              <Switch>\n\n                { // logged in -> pages\n                this.state.token ||\n                this.state.sessionCookiePresent === true\n                 && <Redirect from=\"/\" to=\"/users\" exact />}\n                {this.state.token ||\n                  this.state.sessionCookiePresent === true\n                   && (<Route path=\"/users\" component={UsersPage} />)}\n                {this.state.token ||\n                  this.state.sessionCookiePresent === true\n                   && (<Route path=\"/patients\" component={PatientsPage} />)}\n                {this.state.token ||\n                  this.state.sessionCookiePresent === true\n                   && (<Route path=\"/appointments\" component={AppointmentsPage} />)}\n                {this.state.token ||\n                  this.state.sessionCookiePresent === true\n                   && (<Route path=\"/profile\" component={ThisUserPage} />)}\n\n                { // logged in -> users page from login page\n                  this.state.token ||\n                  this.state.sessionCookiePresent === true\n                   && (<Redirect from=\"/auth\" to=\"/profile\" exact />)}\n\n                { //if not logged in -> go to login page\n                  !this.state.token && (<Route path=\"/auth\" component={AuthPage} />)}\n                  {!this.state.token && (<Route path=\"/signup\" component={SignupPage} />)}\n                {!this.state.token && <Redirect to=\"/auth\" exact />}\n              </Switch>\n            </main>\n\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}