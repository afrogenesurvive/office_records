{"ast":null,"code":"import _extends from \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdatePatientArrayForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport FormCheck from 'react-bootstrap/FormCheck'; // import AuthContext from '../../context/auth-context';\n\nimport './CreateUserForm.css';\n\nconst UpdatePatientArrayForm = props => {\n  console.log(\"UpdatePatientForm.props:  \", _objectSpread({}, props));\n\n  const patient = _extends({}, props.patient);\n\n  console.log(\"UpdatePatientForm.props.patient:  \", _objectSpread({}, patient));\n  return React.createElement(\"div\", {\n    className: \"UpdateFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: props.onConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridNextOfKinName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, // <Form.Label>formGridNextOfKinName</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"formGridNextOfKinName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridAddress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, // <Form.Label>Address</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridDob\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, // <Form.Label>D.O.B</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"date\",\n    placeholder: \"D.O.B\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))), \"formGridNextOfKinPhone formGridNextOfKinEmail formGridComplaintDate formGridComplaintTitle formGridComplaintDescription formGridHistoryTitle formGridHistoryType formGridHistoryDate formGridHistoryDescription formGridAllergiesTitle formGridAllergiesDescription formGridMedicationTitle formGridMedicationDescription formGridInvestigationDate formGridInvestigationTitle formGridInvestigationDescription formGridDiagnosisDate formGridDiagnosisTitle formGridDiagnosisDescription formGridTreatmentDate formGridTreatmentTitle formGridTreatmentType formGridTreatmentDescription formGridTreatmentDose formGridTreatmentFrequency formGridBillingDate formGridBillingTitle formGridBillingType formGridBillingDescription formGridBillingAmount formGridBillingPaid formGridBillingNotes\", props.canCancel && React.createElement(Button, {\n    variant: \"primary\",\n    onClick: props.onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Cancel\"), props.canConfirm && React.createElement(Button, {\n    variant: \"secondary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default UpdatePatientArrayForm;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdatePatientArrayForm.js"],"names":["React","Form","Button","Col","FormCheck","UpdatePatientArrayForm","props","console","log","patient","onConfirm","canCancel","onCancel","canConfirm"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB,C,CACA;;AACA,OAAO,sBAAP;;AAEA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;AAE1CC,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,oBAA8CF,KAA9C;;AAF0C,QAGhCG,OAHgC,gBAGrBH,KAAK,CAACG,OAHe;;AAI1CF,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,oBAAsDC,OAAtD;AAGA,SACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEH,KAAK,CAACI,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEP,GAAhB;AAAqB,IAAA,SAAS,EAAC,uBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AACA,sBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,uBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EAQE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAC,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AACA,sBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CARF,EAeA,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AACA,sBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAfA,CADA,uwBA6DCG,KAAK,CAACK,SAAN,IACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEL,KAAK,CAACM,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9DF,EAmECN,KAAK,CAACO,UAAN,IACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApEF,CADA,CADF;AAiFE,CAxFF;;AA0FA,eAAeR,sBAAf","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport FormCheck from 'react-bootstrap/FormCheck'\n// import AuthContext from '../../context/auth-context';\nimport './CreateUserForm.css';\n\nconst UpdatePatientArrayForm = (props) => {\n\nconsole.log(\"UpdatePatientForm.props:  \", {...props});\nconst {...patient} = props.patient;\nconsole.log(\"UpdatePatientForm.props.patient:  \", {...patient});\n\n\nreturn (\n  <div className=\"UpdateFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridNextOfKinName\">\n    {\n      // <Form.Label>formGridNextOfKinName</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"formGridNextOfKinName\"/>\n    }\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"formGridAddress\">\n    {\n      // <Form.Label>Address</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"Address\"/>\n    }\n    </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridDob\">\n    {\n    // <Form.Label>D.O.B</Form.Label>\n    <Form.Control type=\"date\" placeholder=\"D.O.B\" />\n  }\n  </Form.Group>\n  </Form.Row>\n\n\n\n  formGridNextOfKinPhone\n  formGridNextOfKinEmail\n  formGridComplaintDate\n  formGridComplaintTitle\n  formGridComplaintDescription\n  formGridHistoryTitle\n  formGridHistoryType\n  formGridHistoryDate\n  formGridHistoryDescription\n  formGridAllergiesTitle\n  formGridAllergiesDescription\n  formGridMedicationTitle\n  formGridMedicationDescription\n  formGridInvestigationDate\n  formGridInvestigationTitle\n  formGridInvestigationDescription\n  formGridDiagnosisDate\n  formGridDiagnosisTitle\n  formGridDiagnosisDescription\n  formGridTreatmentDate\n  formGridTreatmentTitle\n  formGridTreatmentType\n  formGridTreatmentDescription\n  formGridTreatmentDose\n  formGridTreatmentFrequency\n  formGridBillingDate\n  formGridBillingTitle\n  formGridBillingType\n  formGridBillingDescription\n  formGridBillingAmount\n  formGridBillingPaid\n  formGridBillingNotes\n\n\n\n  {props.canCancel && (\n    <Button variant=\"primary\" onClick={props.onCancel}>\n    Cancel\n    </Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"secondary\" type=\"submit\" >\n    Submit\n    </Button>\n  )}\n\n  </Form>\n  {\n    // <AuthContext.Consumer>\n  // </AuthContext.Consumer>\n  }\n  </div>\n)};\n\nexport default UpdatePatientArrayForm;\n"]},"metadata":{},"sourceType":"module"}