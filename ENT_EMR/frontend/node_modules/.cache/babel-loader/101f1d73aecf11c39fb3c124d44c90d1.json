{"ast":null,"code":"import _extends from \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdatePatientSurveyForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion'; // import FormCheck from 'react-bootstrap/FormCheck'\n// import AuthContext from '../../context/auth-context';\n\nimport './CreateUserForm.css';\n\nconst UpdatePatientSurveyForm = props => {\n  console.log(\"UpdatePatientSurveyForm.props:  \", _objectSpread({}, props));\n\n  const patient = _extends({}, props.patient);\n\n  console.log(\"UpdatePatientSurveyForm.props.patient:  \", _objectSpread({}, patient));\n  return React.createElement(\"div\", {\n    className: \"UpdateFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: props.onConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridSurveyDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"SurveyDate\"), React.createElement(Form.Control, {\n    type: \"date\",\n    placeholder: \"SurveyDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridComplaintTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"ComplaintTitle\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"ComplaintTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridComplaintDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"ComplaintDescription\"), React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    placeholder: \"ComplaintDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridSurveyAttachmentName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"SurveyAttachmentName\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"SurveyAttachmentName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridSurveyAttachmentFormat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"SurveyAttachmentFormat\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"SurveyAttachmentFormat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridSurveyAttachmentPath\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"SurveyAttachmentPath\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"SurveyAttachmentPath\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))), props.canCancel && React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"danger\",\n    eventKey: \"9\",\n    className: \"btn\",\n    onClick: props.onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Cancel\"), props.canConfirm && React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"success\",\n    eventKey: \"9\",\n    className: \"btn\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default UpdatePatientSurveyForm;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdatePatientSurveyForm.js"],"names":["React","Form","Button","Col","Accordion","UpdatePatientSurveyForm","props","console","log","patient","onConfirm","canCancel","onCancel","canConfirm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion'\n// import FormCheck from 'react-bootstrap/FormCheck'\n// import AuthContext from '../../context/auth-context';\nimport './CreateUserForm.css';\n\nconst UpdatePatientSurveyForm = (props) => {\n\nconsole.log(\"UpdatePatientSurveyForm.props:  \", {...props});\nconst {...patient} = props.patient;\nconsole.log(\"UpdatePatientSurveyForm.props.patient:  \", {...patient});\n\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridSurveyDate\">\n    <Form.Label>SurveyDate</Form.Label>\n    <Form.Control type=\"date\" placeholder=\"SurveyDate\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridComplaintTitle\">\n    <Form.Label>ComplaintTitle</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"ComplaintTitle\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridComplaintDescription\">\n    <Form.Label>ComplaintDescription</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"ComplaintDescription\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridSurveyAttachmentName\">\n    <Form.Label>SurveyAttachmentName</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"SurveyAttachmentName\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridSurveyAttachmentFormat\">\n    <Form.Label>SurveyAttachmentFormat</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"SurveyAttachmentFormat\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridSurveyAttachmentPath\">\n    <Form.Label>SurveyAttachmentPath</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"SurveyAttachmentPath\"/>\n  </Form.Group>\n  </Form.Row>\n\n\n{props.canCancel && (\n  <Accordion.Toggle as={Button} variant=\"danger\" eventKey=\"9\" className=\"btn\" onClick={props.onCancel}>\n  Cancel\n  </Accordion.Toggle>\n)}\n\n{props.canConfirm && (\n  <Accordion.Toggle as={Button} variant=\"success\" eventKey=\"9\" className=\"btn\" type=\"submit\">\n  Submit\n  </Accordion.Toggle>\n)}\n\n</Form>\n{\n  // <AuthContext.Consumer>\n// </AuthContext.Consumer>\n}\n</div>\n\n)};\n\nexport default UpdatePatientSurveyForm;\n"]},"metadata":{},"sourceType":"module"}