{"ast":null,"code":"var _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/blackStarMind_app_dev/black_star_mind/black-star-mind-app/src/pages/thisUser.js\";\nimport React, { Component } from 'react';\nimport Modal from '../components/Modal/Modal';\nimport Backdrop from '../components/Backdrop/Backdrop';\nimport ThisUserProfile from '../components/Users/thisUserProfile';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport './Users.css';\n\nclass UsersPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      isLoading: false\n    };\n    this.isActive = true;\n\n    this.startCreateUserHandler = () => {\n      this.setState({\n        creating: true\n      });\n    };\n\n    this.modalConfirmHandler = () => {\n      this.setState({\n        creating: false\n      });\n      const email = this.emailElRef.current.value;\n      const password = this.passwordElRef.current.value;\n      const name = this.nameElRef.current.value;\n      const username = this.usernameElRef.current.value;\n      const description = this.descriptionElRef.current.value;\n      const avatar = this.avatarElRef.current.value;\n      const dob = this.dobElRef.current.value;\n      const phone = this.phoneElRef.current.value;\n      const address = this.addressElRef.current.value;\n\n      if (email.trim().length === 0 || password.trim().length === 0 || name.trim().length === 0 || username.trim().length === 0 || description.trim().length === 0 || avatar.trim().length === 0 || dob.trim().length === 0 || phone.trim().length === 0 || address.trim().length === 0) {\n        return;\n      }\n\n      const user = {\n        email,\n        password,\n        name,\n        username,\n        description,\n        avatar,\n        dob,\n        phone,\n        address\n      };\n      console.log(\"updating user... \" + JSON.stringify(user));\n      const requestBody = {\n        query: \"\\n          mutation UpdateUser($email: String!, $password: String!, $name: String!, $username: String!, $description: String!, $avatar: String!, $dob: String!, $phone: String!, $address: String!) {\\n            updateUser(userInput: {email: $email, password: $password, name: $name, username: $username, description: $description, avatar: $avatar, dob: $dob, phone: $phone, address: $address}) {\\n              _id\\n              email\\n              password\\n              name\\n              username\\n              description\\n              avatar\\n              dob\\n              phone\\n              address\\n            }\\n          }\\n        \",\n        variables: {\n          email: email,\n          password: password,\n          name: name,\n          username: username,\n          description: description,\n          avatar: avatar,\n          dob: dob,\n          phone: phone,\n          address: address\n        }\n      };\n      const token = this.context.token;\n      fetch('http://localhost:5000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        this.context.action1 = JSON.stringify(requestBody);\n        console.log(\"this context object...\" + JSON.stringify(this.context));\n        console.log(\"this context action1...\" + this.context.action1);\n        this.createAction(this.context.id, \"mutation\", this.context.action1);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.modalCancelHandler = () => {\n      this.setState({\n        creating: false\n      });\n    };\n\n    this.emailElRef = React.createRef();\n    this.passwordElRef = React.createRef();\n    this.nameElRef = React.createRef();\n    this.usernameElRef = React.createRef();\n    this.descriptionElRef = React.createRef();\n    this.avatarElRef = React.createRef();\n    this.dobElRef = React.createRef();\n    this.phoneElRef = React.createRef();\n    this.addressElRef = React.createRef();\n    this.user = null;\n  }\n\n  componentDidMount() {\n    this.getThisUser();\n  }\n\n  createAction(creatorId, type, body) {\n    console.log(\"'create actions function' context object... \" + JSON.stringify(this.context));\n    console.log(\"args.creatorId...\" + creatorId, \"action type...\" + type, \"action body...\" + body);\n    const userId = creatorId;\n    const token = this.context.token;\n    const requestBody = {\n      query: \"\\n          mutation createAction($userId: ID!, $type: String!, $body: String!) {\\n            createAction(userId: $userId, actionInput: {type: $type, body: $body}) {\\n              _id\\n              creator\\n              {_id,username}\\n              body\\n            }\\n          }\\n        \",\n      variables: {\n        userId: userId,\n        type: type,\n        body: body\n      }\n    };\n    fetch('http://localhost:5000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n\n      return res.json();\n    }).then(resData => {\n      console.log(\"response data... \" + JSON.stringify(resData));\n      this.context.action1 = null;\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  getThisUser() {\n    this.setState({\n      isLoading: true\n    });\n    const requestBody = {\n      query: \"\\n          query {\\n            getThisUser {\\n              _id\\n              email\\n              password\\n              name\\n              username\\n              description\\n              avatar\\n              dob\\n              phone\\n              address\\n            }\\n          }\\n        \"\n    };\n    fetch('http://localhost:5000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n\n      return res.json();\n    }).then(resData => {\n      console.log(\"resdata...\" + JSON.stringify(resData));\n      const thisUser = resData.data.getThisUser;\n\n      if (this.isActive) {\n        this.setState({\n          user: thisUser,\n          isLoading: false\n        });\n        this.context.user = thisUser;\n        console.log(\"thisUser context, user object.name ...\" + this.context.user.name);\n        sessionStorage.setItem('thisUser', JSON.stringify(thisUser));\n        this.context.action1 = JSON.stringify(requestBody);\n        console.log(\"this context object...\" + JSON.stringify(this.context));\n        console.log(\"this context action1...\" + this.context.action1);\n        this.createAction(this.context.userId, \"mutation\", this.context.action1);\n      } // this.user = thisUser;\n\n    }).catch(err => {\n      console.log(err);\n\n      if (this.isActive) {\n        this.setState({\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, (this.state.creating || this.state.selectedUser) && React.createElement(Backdrop, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), this.state.creating && React.createElement(Modal, {\n      title: \"Update Profile\",\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmHandler,\n      confirmText: \"Confirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      ref: this.emailElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      ref: this.passwordElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      ref: this.nameElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      ref: this.usernameElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Bio\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      ref: this.descriptionElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Avatar Link\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"avatar\",\n      ref: this.avatarElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"address\",\n      ref: this.addressElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(\"input\", {\n      type: \"number\",\n      id: \"phone\",\n      ref: this.phoneElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Date of Birth\"), React.createElement(\"input\", {\n      type: \"datetime-local\",\n      id: \"date\",\n      ref: this.dobElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    })))), this.context.token && React.createElement(\"div\", {\n      className: \"users-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Update Your Profile!\"), React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.startCreateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"Update\")), this.state.isLoading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }) : React.createElement(ThisUserProfile, {\n      user: this.state.user,\n      authUserId: this.context.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }));\n  }\n\n}\n\nUsersPage.contextType = AuthContext;\nexport default UsersPage;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/blackStarMind_app_dev/black_star_mind/black-star-mind-app/src/pages/thisUser.js"],"names":["React","Component","Modal","Backdrop","ThisUserProfile","Spinner","AuthContext","UsersPage","constructor","props","state","user","isLoading","isActive","startCreateUserHandler","setState","creating","modalConfirmHandler","email","emailElRef","current","value","password","passwordElRef","name","nameElRef","username","usernameElRef","description","descriptionElRef","avatar","avatarElRef","dob","dobElRef","phone","phoneElRef","address","addressElRef","trim","length","console","log","JSON","stringify","requestBody","query","variables","token","context","fetch","method","body","headers","Authorization","then","res","status","Error","json","resData","action1","createAction","id","catch","err","modalCancelHandler","createRef","componentDidMount","getThisUser","creatorId","type","userId","thisUser","data","sessionStorage","setItem","componentWillUnmount","render","selectedUser","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Modal from '../components/Modal/Modal';\nimport Backdrop from '../components/Backdrop/Backdrop';\nimport ThisUserProfile from '../components/Users/thisUserProfile';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport './Users.css';\n\nclass UsersPage extends Component {\n  state = {\n    user: null,\n    isLoading: false\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.emailElRef = React.createRef();\n    this.passwordElRef = React.createRef();\n    this.nameElRef = React.createRef();\n    this.usernameElRef = React.createRef();\n    this.descriptionElRef = React.createRef();\n    this.avatarElRef = React.createRef();\n    this.dobElRef = React.createRef();\n    this.phoneElRef = React.createRef();\n    this.addressElRef =  React.createRef();\n    this.user = null;\n  }\n\n  componentDidMount() {\n    this.getThisUser();\n  }\n\n  createAction(creatorId,type,body) {\n\n    console.log(\"'create actions function' context object... \" + JSON.stringify(this.context));\n    console.log(\"args.creatorId...\" + creatorId, \"action type...\" + type, \"action body...\" + body);\n    const userId = creatorId;\n    const token = this.context.token;\n\n    const requestBody = {\n      query: `\n          mutation createAction($userId: ID!, $type: String!, $body: String!) {\n            createAction(userId: $userId, actionInput: {type: $type, body: $body}) {\n              _id\n              creator\n              {_id,username}\n              body\n            }\n          }\n        `,\n        variables: {\n          userId: userId,\n          type: type,\n          body: body\n        }\n    };\n\n    fetch('http://localhost:5000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        console.log(\"response data... \" + JSON.stringify(resData));\n        this.context.action1 = null;\n\n          })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n\n  startCreateUserHandler = () => {\n    this.setState({ creating: true });\n  };\n\n  modalConfirmHandler = () => {\n    this.setState({ creating: false });\n    const email = this.emailElRef.current.value;\n    const password = this.passwordElRef.current.value;\n    const name = this.nameElRef.current.value;\n    const username = this.usernameElRef.current.value;\n    const description = this.descriptionElRef.current.value;\n    const avatar = this.avatarElRef.current.value;\n    const dob = this.dobElRef.current.value;\n    const phone = this.phoneElRef.current.value;\n    const address = this.addressElRef.current.value;\n\n    if (\n      email.trim().length === 0 ||\n      password.trim().length === 0 ||\n      name.trim().length === 0 ||\n      username.trim().length === 0 ||\n      description.trim().length === 0 ||\n      avatar.trim().length === 0 ||\n      dob.trim().length === 0 ||\n      phone.trim().length === 0 ||\n      address.trim().length === 0\n    ) {\n      return;\n    }\n\n    const user = { email, password, name, username, description, avatar, dob, phone, address };\n    console.log(\"updating user... \" + JSON.stringify(user));\n\n    const requestBody = {\n      query: `\n          mutation UpdateUser($email: String!, $password: String!, $name: String!, $username: String!, $description: String!, $avatar: String!, $dob: String!, $phone: String!, $address: String!) {\n            updateUser(userInput: {email: $email, password: $password, name: $name, username: $username, description: $description, avatar: $avatar, dob: $dob, phone: $phone, address: $address}) {\n              _id\n              email\n              password\n              name\n              username\n              description\n              avatar\n              dob\n              phone\n              address\n            }\n          }\n        `,\n        variables: {\n          email: email,\n          password: password,\n          name: name,\n          username: username,\n          description: description,\n          avatar: avatar,\n          dob: dob,\n          phone: phone,\n          address: address\n        }\n    };\n\n    const token = this.context.token;\n\n    fetch('http://localhost:5000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n\n        this.context.action1 = JSON.stringify(requestBody);\n        console.log(\"this context object...\" + JSON.stringify(this.context));\n        console.log(\"this context action1...\" + this.context.action1);\n\n        this.createAction(this.context.id,\"mutation\",this.context.action1);\n\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false });\n  };\n\n  getThisUser() {\n\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query {\n            getThisUser {\n              _id\n              email\n              password\n              name\n              username\n              description\n              avatar\n              dob\n              phone\n              address\n            }\n          }\n        `\n    };\n\n    fetch('http://localhost:5000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"resdata...\" + JSON.stringify(resData));\n        const thisUser = resData.data.getThisUser;\n        if (this.isActive) {\n\n          this.setState({ user: thisUser, isLoading: false });\n\n          this.context.user = thisUser;\n          console.log(\"thisUser context, user object.name ...\" + this.context.user.name);\n\n          sessionStorage.setItem('thisUser', JSON.stringify(thisUser));\n\n          this.context.action1 = JSON.stringify(requestBody);\n          console.log(\"this context object...\" + JSON.stringify(this.context));\n          console.log(\"this context action1...\" + this.context.action1);\n\n          this.createAction(this.context.userId,\"mutation\",this.context.action1);\n\n        }\n        // this.user = thisUser;\n      })\n      .catch(err => {\n        console.log(err);\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {(this.state.creating || this.state.selectedUser) && <Backdrop />}\n        {this.state.creating && (\n          <Modal\n            title=\"Update Profile\"\n            canCancel\n            canConfirm\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.modalConfirmHandler}\n            confirmText=\"Confirm\"\n          >\n          <form>\n            <div className=\"form-control\">\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"text\" id=\"title\" ref={this.emailElRef} />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" id=\"password\" ref={this.passwordElRef} />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"name\">Name</label>\n              <input type=\"text\" id=\"name\" ref={this.nameElRef} />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"username\">Username</label>\n              <input type=\"text\" id=\"username\" ref={this.usernameElRef} />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"description\">Bio</label>\n              <input type=\"text\" id=\"description\" ref={this.descriptionElRef} />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"avatar\">Avatar Link</label>\n              <input type=\"text\" id=\"avatar\" ref={this.avatarElRef} />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"address\">Address</label>\n              <input type=\"text\" id=\"address\" ref={this.addressElRef} />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"phone\">Phone</label>\n              <input type=\"number\" id=\"phone\" ref={this.phoneElRef} />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"date\">Date of Birth</label>\n              <input type=\"datetime-local\" id=\"date\" ref={this.dobElRef} />\n            </div>\n\n          </form>\n          </Modal>\n        )}\n\n        {this.context.token && (\n          <div className=\"users-control\">\n            <p>Update Your Profile!</p>\n            <button className=\"btn\" onClick={this.startCreateUserHandler}>\n              Update\n            </button>\n          </div>\n        )}\n        {this.state.isLoading ? (\n          <Spinner />\n        ) : (\n          <ThisUserProfile\n            user={this.state.user}\n            authUserId={this.context.userId}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default UsersPage;\n"]},"metadata":{},"sourceType":"module"}