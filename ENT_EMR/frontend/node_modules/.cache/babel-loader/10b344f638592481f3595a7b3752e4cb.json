{"ast":null,"code":"import _classCallCheck from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';// import Form from 'react-bootstrap/Form';\n// import Container from 'react-bootstrap/Container';\nimport Row from'react-bootstrap/Row';import Col from'react-bootstrap/Col';// import Button from 'react-bootstrap/Button';\n// import Card from 'react-bootstrap/Card';\nimport AlertBox from'../components/AlertBox';import CreateUserForm from'../components/Forms/CreateUserForm';import'./Auth.css';var SignupPage=/*#__PURE__*/function(_Component){_inherits(SignupPage,_Component);function SignupPage(){var _getPrototypeOf2;var _this;_classCallCheck(this,SignupPage);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(SignupPage)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={success:\"Signup!!\",userAlert:null};_this.modalConfirmHandler=function(event){event.preventDefault();console.log(\"signing up...\");console.log(\"CreateUserFormData:  \",event.target.formGridEmail.value);_this.setState({creating:false});var email=event.target.formGridEmail.value;var password=event.target.formGridPassword.value;var name=event.target.formGridName.value;var role=event.target.formGridRole.value;var dob=event.target.formGridDob.value;var phone=event.target.formGridPhone.value;var addressNumber=event.target.formGridAddressNumber.value;var addressStreet=event.target.formGridAddressStreet.value;var addressTown=event.target.formGridAddressTown.value;var addressParish=event.target.formGridAddressParish.value;var addressPostOffice=event.target.formGridAddressPostOffice.value;var employmentDate=event.target.formGridEmploymentDate.value;if(event.target.formGridEmploymentDateTodayCheckbox.checked===true){employmentDate=new Date().toISOString().slice(0,10);}var terminationDate=event.target.formGridTerminationDate.value;if(event.target.formGridTerminationDateTodayCheckbox.checked===true){terminationDate=new Date().toISOString().slice(0,10);}if(email.trim().length===0||password.trim().length===0||name.trim().length===0||role.trim().length===0||dob.trim().length===0||phone.trim().length===0||addressNumber.trim().length===0||addressStreet.trim().length===0||addressTown.trim().length===0||addressParish.trim().length===0||addressPostOffice.trim().length===0||employmentDate.trim().length===0||terminationDate.trim().length===0){console.log(\"blank fields detected!!!...Please try again...\");_this.setState({userAlert:\"blank fields detected!!!...Please try again...\"});return;}var token=_this.context.token;var userId=_this.context.userId;var user={email:email,password:password,name:name,role:role,dob:dob,phone:phone,addressNumber:addressNumber,addressStreet:addressStreet,addressTown:addressTown,addressParish:addressParish,addressPostOffice:addressPostOffice,employmentDate:employmentDate,terminationDate:terminationDate};console.log(\"\\n      creating user...\\n      userId: \".concat(userId,\"\\n      email: \").concat(email,\",\\n      password: \").concat(password,\",\\n      name: \").concat(name,\",\\n      role: \").concat(role,\",\\n      dob: \").concat(dob,\",\\n      phone: \").concat(phone,\",\\n      addressNumber: \").concat(addressNumber,\",\\n      addressStreet: \").concat(addressStreet,\",\\n      addressTown: \").concat(addressTown,\",\\n      addressParish: \").concat(addressParish,\",\\n      addressPostOffice: \").concat(addressPostOffice,\",\\n      employmentDate: \").concat(employmentDate,\",\\n      terminationDate: \").concat(terminationDate,\",\\n      \"));_this.setState({userAlert:\"creating user...\"});var requestBody={query:\"\\n          mutation {\\n            createUser(userInput: {email:\\\"\".concat(email,\"\\\",password:\\\"\").concat(password,\"\\\",name:\\\"\").concat(name,\"\\\",role:\\\"\").concat(role,\"\\\",\\n\\n            employmentDate:\\\"\").concat(employmentDate,\"\\\",terminationDate:\\\"\").concat(terminationDate,\"\\\"})\\n            {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\\n          }\\n        \")};fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql',{// fetch('http://localhost:10000/graphql', {\nmethod:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData));console.log(\"resData head slice:  \",JSON.stringify(resData).slice(2,7));if(JSON.stringify(resData).slice(2,7)==='error'){console.log(\"signup...failed...\");_this.setState({success:\"Something went wrong!!!\"});}else{_this.setState({success:\"Signup success...Proceed to login\"});console.log(_this.state.success);}_this.setState({userAlert:JSON.stringify(resData).slice(2,7)});}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};return _this;}_createClass(SignupPage,[{key:\"render\",value:function render(){return React.createElement(React.Fragment,null,React.createElement(Row,null,React.createElement(AlertBox,{authUserId:this.context.userId,alert:this.state.userAlert}),React.createElement(Col,{className:\"signupRow\",md:8},React.createElement(CreateUserForm,{canConfirm:true,onConfirm:this.modalConfirmHandler,onSubmit:this.modalConfirmHandler,confirmText:\"Confirm\",successText:this.state.success}))));}}]);return SignupPage;}(Component);export default SignupPage;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/Signup.js"],"names":["React","Component","Row","Col","AlertBox","CreateUserForm","SignupPage","state","success","userAlert","modalConfirmHandler","event","preventDefault","console","log","target","formGridEmail","value","setState","creating","email","password","formGridPassword","name","formGridName","role","formGridRole","dob","formGridDob","phone","formGridPhone","addressNumber","formGridAddressNumber","addressStreet","formGridAddressStreet","addressTown","formGridAddressTown","addressParish","formGridAddressParish","addressPostOffice","formGridAddressPostOffice","employmentDate","formGridEmploymentDate","formGridEmploymentDateTodayCheckbox","checked","Date","toISOString","slice","terminationDate","formGridTerminationDate","formGridTerminationDateTodayCheckbox","trim","length","token","context","userId","user","requestBody","query","fetch","method","body","JSON","stringify","headers","Authorization","then","res","status","Error","json","resData","catch","err"],"mappings":"y8BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA;AACA;AACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CACA;AACA;AAEA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,oCAA3B,CACA,MAAO,YAAP,C,GAEMC,CAAAA,U,+YACJC,K,CAAQ,CACNC,OAAO,CAAE,UADH,CAENC,SAAS,CAAE,IAFL,C,OAKRC,mB,CAAsB,SAACC,KAAD,CAAW,CAE/BA,KAAK,CAACC,cAAN,GACAC,OAAO,CAACC,GAAR,CAAY,eAAZ,EACAD,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAqCH,KAAK,CAACI,MAAN,CAAaC,aAAb,CAA2BC,KAAhE,EAEA,MAAKC,QAAL,CAAc,CAAEC,QAAQ,CAAE,KAAZ,CAAd,EACA,GAAMC,CAAAA,KAAK,CAAGT,KAAK,CAACI,MAAN,CAAaC,aAAb,CAA2BC,KAAzC,CACA,GAAMI,CAAAA,QAAQ,CAAGV,KAAK,CAACI,MAAN,CAAaO,gBAAb,CAA8BL,KAA/C,CACA,GAAMM,CAAAA,IAAI,CAAGZ,KAAK,CAACI,MAAN,CAAaS,YAAb,CAA0BP,KAAvC,CACA,GAAMQ,CAAAA,IAAI,CAAGd,KAAK,CAACI,MAAN,CAAaW,YAAb,CAA0BT,KAAvC,CACA,GAAIU,CAAAA,GAAG,CAAGhB,KAAK,CAACI,MAAN,CAAaa,WAAb,CAAyBX,KAAnC,CACA,GAAIY,CAAAA,KAAK,CAAGlB,KAAK,CAACI,MAAN,CAAae,aAAb,CAA2Bb,KAAvC,CACA,GAAIc,CAAAA,aAAa,CAAGpB,KAAK,CAACI,MAAN,CAAaiB,qBAAb,CAAmCf,KAAvD,CACA,GAAIgB,CAAAA,aAAa,CAAGtB,KAAK,CAACI,MAAN,CAAamB,qBAAb,CAAmCjB,KAAvD,CACA,GAAIkB,CAAAA,WAAW,CAAGxB,KAAK,CAACI,MAAN,CAAaqB,mBAAb,CAAiCnB,KAAnD,CACA,GAAIoB,CAAAA,aAAa,CAAG1B,KAAK,CAACI,MAAN,CAAauB,qBAAb,CAAmCrB,KAAvD,CACA,GAAIsB,CAAAA,iBAAiB,CAAG5B,KAAK,CAACI,MAAN,CAAayB,yBAAb,CAAuCvB,KAA/D,CAEA,GAAIwB,CAAAA,cAAc,CAAG9B,KAAK,CAACI,MAAN,CAAa2B,sBAAb,CAAoCzB,KAAzD,CACA,GAAIN,KAAK,CAACI,MAAN,CAAa4B,mCAAb,CAAiDC,OAAjD,GAA6D,IAAjE,CAAuE,CACrEH,cAAc,CAAG,GAAII,CAAAA,IAAJ,GAAWC,WAAX,GAAyBC,KAAzB,CAA+B,CAA/B,CAAiC,EAAjC,CAAjB,CACD,CAED,GAAIC,CAAAA,eAAe,CAAGrC,KAAK,CAACI,MAAN,CAAakC,uBAAb,CAAqChC,KAA3D,CACA,GAAIN,KAAK,CAACI,MAAN,CAAamC,oCAAb,CAAkDN,OAAlD,GAA8D,IAAlE,CAAwE,CACtEI,eAAe,CAAG,GAAIH,CAAAA,IAAJ,GAAWC,WAAX,GAAyBC,KAAzB,CAA+B,CAA/B,CAAiC,EAAjC,CAAlB,CACD,CAED,GACE3B,KAAK,CAAC+B,IAAN,GAAaC,MAAb,GAAwB,CAAxB,EACA/B,QAAQ,CAAC8B,IAAT,GAAgBC,MAAhB,GAA2B,CAD3B,EAEA7B,IAAI,CAAC4B,IAAL,GAAYC,MAAZ,GAAuB,CAFvB,EAGA3B,IAAI,CAAC0B,IAAL,GAAYC,MAAZ,GAAuB,CAHvB,EAIAzB,GAAG,CAACwB,IAAJ,GAAWC,MAAX,GAAsB,CAJtB,EAKAvB,KAAK,CAACsB,IAAN,GAAaC,MAAb,GAAwB,CALxB,EAMArB,aAAa,CAACoB,IAAd,GAAqBC,MAArB,GAAgC,CANhC,EAOAnB,aAAa,CAACkB,IAAd,GAAqBC,MAArB,GAAgC,CAPhC,EAQAjB,WAAW,CAACgB,IAAZ,GAAmBC,MAAnB,GAA8B,CAR9B,EASAf,aAAa,CAACc,IAAd,GAAqBC,MAArB,GAAgC,CAThC,EAUAb,iBAAiB,CAACY,IAAlB,GAAyBC,MAAzB,GAAoC,CAVpC,EAWAX,cAAc,CAACU,IAAf,GAAsBC,MAAtB,GAAiC,CAXjC,EAYAJ,eAAe,CAACG,IAAhB,GAAuBC,MAAvB,GAAkC,CAbpC,CAcE,CACAvC,OAAO,CAACC,GAAR,CAAY,gDAAZ,EACA,MAAKI,QAAL,CAAc,CAACT,SAAS,CAAE,gDAAZ,CAAd,EACA,OACD,CAED,GAAM4C,CAAAA,KAAK,CAAG,MAAKC,OAAL,CAAaD,KAA3B,CACA,GAAME,CAAAA,MAAM,CAAG,MAAKD,OAAL,CAAaC,MAA5B,CACA,GAAMC,CAAAA,IAAI,CAAG,CAAEpC,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAmBE,IAAI,CAAJA,IAAnB,CAAyBE,IAAI,CAAJA,IAAzB,CAA+BE,GAAG,CAAHA,GAA/B,CAAoCE,KAAK,CAALA,KAApC,CAA2CE,aAAa,CAAbA,aAA3C,CAA0DE,aAAa,CAAbA,aAA1D,CAAyEE,WAAW,CAAXA,WAAzE,CAAsFE,aAAa,CAAbA,aAAtF,CAAqGE,iBAAiB,CAAjBA,iBAArG,CAAwHE,cAAc,CAAdA,cAAxH,CAAwIO,eAAe,CAAfA,eAAxI,CAAb,CAEAnC,OAAO,CAACC,GAAR,mDAEYyC,MAFZ,2BAGWnC,KAHX,+BAIcC,QAJd,2BAKUE,IALV,2BAMUE,IANV,0BAOSE,GAPT,4BAQWE,KARX,oCASmBE,aATnB,oCAUmBE,aAVnB,kCAWiBE,WAXjB,oCAYmBE,aAZnB,wCAauBE,iBAbvB,qCAcoBE,cAdpB,sCAeqBO,eAfrB,eAiBE,MAAK9B,QAAL,CAAc,CAACT,SAAS,CAAE,kBAAZ,CAAd,EAEF,GAAMgD,CAAAA,WAAW,CAAG,CAClBC,KAAK,8EAEiCtC,KAFjC,0BAEqDC,QAFrD,sBAEwEE,IAFxE,sBAEuFE,IAFvF,gDAImBgB,cAJnB,iCAIuDO,eAJvD,wQADa,CAApB,CAWAW,KAAK,CAAC,gEAAD,CAAmE,CACxE;AACEC,MAAM,CAAE,MAF8D,CAGtEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAHgE,CAItEO,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,aAAa,CAAE,UAAYZ,KAFpB,CAJ6D,CAAnE,CAAL,CASGa,IATH,CASQ,SAAAC,GAAG,CAAI,CACX,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAf,EAAsBD,GAAG,CAACC,MAAJ,GAAe,GAAzC,CAA8C,CAC5C,KAAM,IAAIC,CAAAA,KAAJ,CAAU,SAAV,CAAN,CACD,CACD,MAAOF,CAAAA,GAAG,CAACG,IAAJ,EAAP,CACD,CAdH,EAeGJ,IAfH,CAeQ,SAAAK,OAAO,CAAI,CACf1D,OAAO,CAACC,GAAR,CAAY,oBAAsBgD,IAAI,CAACC,SAAL,CAAeQ,OAAf,CAAlC,EACA1D,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAqCgD,IAAI,CAACC,SAAL,CAAeQ,OAAf,EAAwBxB,KAAxB,CAA8B,CAA9B,CAAgC,CAAhC,CAArC,EACA,GAAIe,IAAI,CAACC,SAAL,CAAeQ,OAAf,EAAwBxB,KAAxB,CAA8B,CAA9B,CAAgC,CAAhC,IAAuC,OAA3C,CAAoD,CAClDlC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACA,MAAKI,QAAL,CAAc,CAACV,OAAO,CAAE,yBAAV,CAAd,EACD,CAHD,IAGO,CACL,MAAKU,QAAL,CAAc,CAACV,OAAO,CAAE,mCAAV,CAAd,EACAK,OAAO,CAACC,GAAR,CAAY,MAAKP,KAAL,CAAWC,OAAvB,EACD,CACD,MAAKU,QAAL,CAAc,CAACT,SAAS,CAAEqD,IAAI,CAACC,SAAL,CAAeQ,OAAf,EAAwBxB,KAAxB,CAA8B,CAA9B,CAAgC,CAAhC,CAAZ,CAAd,EACD,CA1BH,EA2BGyB,KA3BH,CA2BS,SAAAC,GAAG,CAAI,CACZ5D,OAAO,CAACC,GAAR,CAAY2D,GAAZ,EACA,MAAKvD,QAAL,CAAc,CAACT,SAAS,CAAEgE,GAAZ,CAAd,EACD,CA9BH,EA+BD,C,6EAEQ,CACP,MACE,qBAAC,KAAD,CAAO,QAAP,MAEA,oBAAC,GAAD,MACA,oBAAC,QAAD,EACE,UAAU,CAAE,KAAKnB,OAAL,CAAaC,MAD3B,CAEE,KAAK,CAAE,KAAKhD,KAAL,CAAWE,SAFpB,EADA,CAMA,oBAAC,GAAD,EAAK,SAAS,CAAC,WAAf,CAA2B,EAAE,CAAE,CAA/B,EACE,oBAAC,cAAD,EACE,UAAU,KADZ,CAEE,SAAS,CAAE,KAAKC,mBAFlB,CAGE,QAAQ,CAAE,KAAKA,mBAHjB,CAIE,WAAW,CAAC,SAJd,CAKE,WAAW,CAAE,KAAKH,KAAL,CAAWC,OAL1B,EADF,CANA,CAFA,CADF,CAsBD,C,wBAjJsBP,S,EAoJzB,cAAeK,CAAAA,UAAf","sourcesContent":["import React, { Component } from 'react';\n// import Form from 'react-bootstrap/Form';\n// import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\n// import Card from 'react-bootstrap/Card';\n\nimport AlertBox from '../components/AlertBox';\nimport CreateUserForm from '../components/Forms/CreateUserForm';\nimport './Auth.css';\n\nclass SignupPage extends Component {\n  state = {\n    success: \"Signup!!\",\n    userAlert: null,\n  };\n\n  modalConfirmHandler = (event) => {\n\n    event.preventDefault();\n    console.log(\"signing up...\");\n    console.log(\"CreateUserFormData:  \", event.target.formGridEmail.value);\n\n    this.setState({ creating: false });\n    const email = event.target.formGridEmail.value;\n    const password = event.target.formGridPassword.value;\n    const name = event.target.formGridName.value;\n    const role = event.target.formGridRole.value;\n    let dob = event.target.formGridDob.value;\n    let phone = event.target.formGridPhone.value;\n    let addressNumber = event.target.formGridAddressNumber.value;\n    let addressStreet = event.target.formGridAddressStreet.value;\n    let addressTown = event.target.formGridAddressTown.value;\n    let addressParish = event.target.formGridAddressParish.value;\n    let addressPostOffice = event.target.formGridAddressPostOffice.value;\n\n    let employmentDate = event.target.formGridEmploymentDate.value;\n    if (event.target.formGridEmploymentDateTodayCheckbox.checked === true) {\n      employmentDate = new Date().toISOString().slice(0,10);\n    }\n\n    let terminationDate = event.target.formGridTerminationDate.value;\n    if (event.target.formGridTerminationDateTodayCheckbox.checked === true) {\n      terminationDate = new Date().toISOString().slice(0,10);\n    }\n\n    if (\n      email.trim().length === 0 ||\n      password.trim().length === 0 ||\n      name.trim().length === 0 ||\n      role.trim().length === 0 ||\n      dob.trim().length === 0 ||\n      phone.trim().length === 0 ||\n      addressNumber.trim().length === 0 ||\n      addressStreet.trim().length === 0 ||\n      addressTown.trim().length === 0 ||\n      addressParish.trim().length === 0 ||\n      addressPostOffice.trim().length === 0 ||\n      employmentDate.trim().length === 0 ||\n      terminationDate.trim().length === 0\n    ) {\n      console.log(\"blank fields detected!!!...Please try again...\");\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"});\n      return;\n    }\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n    const user = { email, password, name, role, dob, phone, addressNumber, addressStreet, addressTown, addressParish, addressPostOffice, employmentDate, terminationDate };\n\n    console.log(`\n      creating user...\n      userId: ${userId}\n      email: ${email},\n      password: ${password},\n      name: ${name},\n      role: ${role},\n      dob: ${dob},\n      phone: ${phone},\n      addressNumber: ${addressNumber},\n      addressStreet: ${addressStreet},\n      addressTown: ${addressTown},\n      addressParish: ${addressParish},\n      addressPostOffice: ${addressPostOffice},\n      employmentDate: ${employmentDate},\n      terminationDate: ${terminationDate},\n      `);\n      this.setState({userAlert: \"creating user...\"});\n\n    const requestBody = {\n      query: `\n          mutation {\n            createUser(userInput: {email:\"${email}\",password:\"${password}\",name:\"${name}\",role:\"${role}\",\n\n            employmentDate:\"${employmentDate}\",terminationDate:\"${terminationDate}\"})\n            {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n          }\n        `\n    };\n\n    fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    // fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        console.log(\"resData head slice:  \", JSON.stringify(resData).slice(2,7));\n        if (JSON.stringify(resData).slice(2,7) === 'error') {\n          console.log(\"signup...failed...\");\n          this.setState({success: \"Something went wrong!!!\" });\n        } else {\n          this.setState({success: \"Signup success...Proceed to login\" });\n          console.log(this.state.success);\n        }\n        this.setState({userAlert: JSON.stringify(resData).slice(2,7)})\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n\n      <Row>\n      <AlertBox\n        authUserId={this.context.userId}\n        alert={this.state.userAlert}\n      />\n\n      <Col className=\"signupRow\" md={8}>\n        <CreateUserForm\n          canConfirm\n          onConfirm={this.modalConfirmHandler}\n          onSubmit={this.modalConfirmHandler}\n          confirmText=\"Confirm\"\n          successText={this.state.success}\n        />\n      </Col>\n      </Row>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SignupPage;\n"]},"metadata":{},"sourceType":"module"}