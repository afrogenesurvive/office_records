{"ast":null,"code":"import _extends from \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdatePatientBillingForm.js\";\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport AuthContext from '../../context/auth-context';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst UpdatePatientBillingForm = props => {\n  const _useState = useState(new Date()),\n        _useState2 = _slicedToArray(_useState, 2),\n        billingDate = _useState2[0],\n        setBillingDate = _useState2[1];\n\n  const handleChangeBillingDate = date => {\n    setBillingDate(date);\n    console.log(`billingDate ${billingDate}`);\n  };\n\n  const patient = _extends({}, props.patient);\n\n  return React.createElement(\"div\", {\n    className: \"UpdateFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: props.onConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, !props.visit && React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridBillingDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Date\"), React.createElement(Form.Control, {\n    type: \"date\",\n    placeholder: \"BillingDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), !props.visit && React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridBillingDateTodayCheckbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Today ?\"), React.createElement(Form.Control, {\n    type: \"checkbox\",\n    onChange: e => {\n      console.log(e.target.checked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), props.visit && React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridBillingDateTodayCheckbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Today ?\"), React.createElement(Form.Control, {\n    type: \"checkbox\",\n    defaultChecked: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridBillingTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Title\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"BillingTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridBillingType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Type\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"BillingType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridBillingDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Description\"), React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"7\",\n    placeholder: \"BillingDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridBillingAmount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Amount\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"BillingAmount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridBillingPaid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Paid ?\"), React.createElement(Form.Control, {\n    as: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"true\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"false\")))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridBillingNotes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"5\",\n    placeholder: \"BillingNotes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridBillingAttachmentFormat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Attachment Format\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"BillingAttachmentFormat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridBillingAttachmentFile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"File\"), React.createElement(Form.Control, {\n    type: \"file\",\n    placeholder: \"File\",\n    onChange: e => {\n      console.log(e.target.files[0]);\n      AuthContext._currentValue.file = e.target.files[0];\n      console.log(AuthContext._currentValue.file);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, props.canCancel && React.createElement(Button, {\n    variant: \"danger\",\n    className: \"formButton\",\n    onClick: props.onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Cancel\"), props.canConfirm && React.createElement(Button, {\n    variant: \"primary\",\n    className: \"formButton\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Submit\"), props.visit && React.createElement(Button, {\n    variant: \"success\",\n    className: \"formButton\",\n    onClick: props.onCreateVisitChecklistUpdate.bind(this, \"billing\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Done adding Billing\"))));\n};\n\nexport default UpdatePatientBillingForm;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdatePatientBillingForm.js"],"names":["React","useState","Form","Button","Col","Accordion","AuthContext","DatePicker","UpdatePatientBillingForm","props","Date","billingDate","setBillingDate","handleChangeBillingDate","date","console","log","patient","onConfirm","visit","e","target","checked","files","_currentValue","file","canCancel","onCancel","canConfirm","onCreateVisitChecklistUpdate","bind"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport AuthContext from '../../context/auth-context';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst UpdatePatientBillingForm = (props) => {\n\n  const [billingDate, setBillingDate] = useState(new Date());\n\n  const handleChangeBillingDate = date => {\n    setBillingDate(date);\n    console.log(`billingDate ${billingDate}`);\n   }\n\nconst {...patient} = props.patient;\n\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n\n  {!props.visit && (\n  <Form.Group as={Col} controlId=\"formGridBillingDate\">\n    <Form.Label>Date</Form.Label>\n    <Form.Control type=\"date\" placeholder=\"BillingDate\"/>\n  </Form.Group>\n  )}\n\n  {!props.visit && (\n  <Form.Group as={Col} controlId=\"formGridBillingDateTodayCheckbox\">\n    <Form.Label>Today ?</Form.Label>\n    <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n  </Form.Group>\n  )}\n\n  {props.visit && (\n  <Form.Group as={Col} controlId=\"formGridBillingDateTodayCheckbox\">\n    <Form.Label>Today ?</Form.Label>\n    <Form.Control type=\"checkbox\" defaultChecked={true}/>\n  </Form.Group>\n  )}\n\n  </Form.Row>\n\n  {\n  //   !props.visit && (\n  // <Form.Row>\n  // <Form.Group as={Col} controlId=\"\">\n  //   <Form.Label>Fancy Date</Form.Label>\n  //   <DatePicker className=\"\" id=\"patientBillingCalendarDate\"\n  //     selected={billingDate}\n  //     onChange={handleChangeBillingDate}\n  //   />\n  // </Form.Group>\n  // </Form.Row>\n  // )\n}\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridBillingTitle\">\n    <Form.Label>Title</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"BillingTitle\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridBillingType\">\n    <Form.Label>Type</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"BillingType\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridBillingDescription\">\n    <Form.Label>Description</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"7\" placeholder=\"BillingDescription\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridBillingAmount\">\n    <Form.Label>Amount</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"BillingAmount\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridBillingPaid\">\n        <Form.Label>Paid ?</Form.Label>\n        <Form.Control as=\"select\">\n          <option>true</option>\n          <option>false</option>\n        </Form.Control>\n      </Form.Group>\n      </Form.Row>\n\n      <Form.Row>\n      <Form.Group as={Col} controlId=\"formGridBillingNotes\">\n        <Form.Label>Notes</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"BillingNotes\"/>\n      </Form.Group>\n\n  </Form.Row>\n\n  <Form.Row>\n\n  <Form.Group as={Col} controlId=\"formGridBillingAttachmentFormat\">\n    <Form.Label>Attachment Format</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"BillingAttachmentFormat\"/>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridBillingAttachmentFile\">\n    <Form.Label>File</Form.Label>\n    <Form.Control type=\"file\" placeholder=\"File\" onChange={(e) => {console.log(e.target.files[0]);AuthContext._currentValue.file = e.target.files[0];console.log(AuthContext._currentValue.file);}}/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n\n  {props.visit && (\n    <Button variant=\"success\" className=\"formButton\" onClick={props.onCreateVisitChecklistUpdate.bind(this, \"billing\")}>\n    Done adding Billing\n    </Button>\n  )}\n  </Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default UpdatePatientBillingForm;\n"]},"metadata":{},"sourceType":"module"}