{"ast":null,"code":"var _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/CreatePatientForm.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport FormCheck from 'react-bootstrap/FormCheck';\nimport { NavLink } from 'react-router-dom';\nimport AuthContext from '../../context/auth-context';\nimport './CreateUserForm.css';\n\nconst CreatePatientForm = props => {\n  // console.log({...props});\n  console.log(\"CreatePatientForm:  \", AuthContext.token);\n  return React.createElement(\"div\", {\n    className: \"CreateFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: props.onConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"name\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridAddress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Address\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    controlId: \"formGridDob\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"D.O.B\"), React.createElement(Form.Control, {\n    type: \"date\",\n    placeholder: \"D.O.B\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), props.canCancel && React.createElement(Button, {\n    variant: \"primary\",\n    onClick: props.onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Cancel\"), props.canConfirm && React.createElement(Button, {\n    variant: \"secondary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default CreatePatientForm;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/CreatePatientForm.js"],"names":["React","Form","Button","Col","FormCheck","NavLink","AuthContext","CreatePatientForm","props","console","log","token","onConfirm","canCancel","onCancel","canConfirm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAO,sBAAP;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAEnC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCJ,WAAW,CAACK,KAAhD;AAEF,SACA;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEH,KAAK,CAACI,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAET,GAAhB;AAAqB,IAAA,SAAS,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAME,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAC,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,CADA,EAaA,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAbA,EAkBCK,KAAK,CAACK,SAAN,IACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEL,KAAK,CAACM,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF,EAwBCN,KAAK,CAACO,UAAN,IACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,CADA,CADA;AAuCE,CA5CF;;AA8CA,eAAeR,iBAAf","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport FormCheck from 'react-bootstrap/FormCheck'\nimport { NavLink } from 'react-router-dom';\nimport AuthContext from '../../context/auth-context';\nimport './CreateUserForm.css';\n\nconst CreatePatientForm = (props) => {\n\n  // console.log({...props});\n  console.log(\"CreatePatientForm:  \", AuthContext.token);\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridName\">\n    <Form.Label>name</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter name\"/>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridAddress\">\n    <Form.Label>Address</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Address\"/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Group controlId=\"formGridDob\">\n  <Form.Label>D.O.B</Form.Label>\n  <Form.Control type=\"date\" placeholder=\"D.O.B\" />\n</Form.Group>\n\n{props.canCancel && (\n  <Button variant=\"primary\" onClick={props.onCancel}>\n  Cancel\n  </Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"secondary\" type=\"submit\" >\n  Submit\n  </Button>\n)}\n\n</Form>\n{\n  // <AuthContext.Consumer>\n// </AuthContext.Consumer>\n}\n</div>\n\n)};\n\nexport default CreatePatientForm;\n"]},"metadata":{},"sourceType":"module"}