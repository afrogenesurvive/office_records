{"ast":null,"code":"import _extends from \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/CreatePatientDiagTestForm.js\";\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst CreatePatientDiagTestForm = props => {\n  const _useState = useState(new Date()),\n        _useState2 = _slicedToArray(_useState, 2),\n        date = _useState2[0],\n        setDate = _useState2[1];\n\n  const handleChangeDate = date => {\n    settDate(date);\n    console.log(`date ${date}`);\n  };\n\n  const patient = _extends({}, props.patient);\n\n  return React.createElement(\"div\", {\n    className: \"UpdateFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: props.onCreateDiagTest,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridDocGenDiagTestDiagDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Diagnosis Visit Date\"), React.createElement(Form.Control, {\n    type: \"date\",\n    placeholder: \"Visit Date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Fancy Visit Date\"), React.createElement(DatePicker, {\n    className: \"\",\n    id: \"patientDiagTestCalendarVisitDate\",\n    selected: date,\n    onChange: handleChangeDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridDocGenDiagTestReceiver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Receiver\"), React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"5\",\n    placeholder: \"Receiver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridDocGenDiagTestRequired\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Test(s) Required\"), React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"9\",\n    placeholder: \"Required Tests\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"primary\",\n    className: \"formButton\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Create Tests & Screenings\"))));\n};\n\nexport default CreatePatientDiagTestForm;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/CreatePatientDiagTestForm.js"],"names":["React","useState","Form","Button","Col","DatePicker","CreatePatientDiagTestForm","props","Date","date","setDate","handleChangeDate","settDate","console","log","patient","onCreateDiagTest"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst CreatePatientDiagTestForm = (props) => {\n\n  const [date, setDate] = useState(new Date());\n\n  const handleChangeDate = date => {\n    settDate(date);\n    console.log(`date ${date}`);\n   }\n\nconst {...patient} = props.patient;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n  <Form onSubmit={props.onCreateDiagTest}>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"formGridDocGenDiagTestDiagDate\">\n        <Form.Label>Diagnosis Visit Date</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"Visit Date\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n    <Form.Group as={Col} controlId=\"\">\n      <Form.Label>Fancy Visit Date</Form.Label>\n      <DatePicker className=\"\" id=\"patientDiagTestCalendarVisitDate\"\n        selected={date}\n       onChange={handleChangeDate}\n      />\n    </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"formGridDocGenDiagTestReceiver\">\n        <Form.Label>Receiver</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Receiver\"/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"formGridDocGenDiagTestRequired\">\n        <Form.Label>Test(s) Required</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"9\" placeholder=\"Required Tests\"/>\n      </Form.Group>\n    </Form.Row>\n\n  <Form.Row>\n\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n    Create Tests & Screenings\n    </Button>\n  </Form.Row>\n\n  </Form>\n</div>\n\n)};\n\nexport default CreatePatientDiagTestForm;\n"]},"metadata":{},"sourceType":"module"}