{"ast":null,"code":"import _extends from \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdatePatientForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion'; // import FormCheck from 'react-bootstrap/FormCheck'\n// import AuthContext from '../../context/auth-context';\n\nimport './CreateUserForm.css';\n\nconst UpdatePatientForm = props => {\n  console.log(\"UpdatePatientForm.props:  \", _objectSpread({}, props));\n\n  const patient = _extends({}, props.patient);\n\n  console.log(\"UpdatePatientForm.props.patient:  \", _objectSpread({}, patient));\n  return React.createElement(\"div\", {\n    className: \"UpdateFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: props.onConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, // <Form.Label>name</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: patient.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridAddress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, // <Form.Label>Address</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: patient.address,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridDob\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, // <Form.Label>D.O.B</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"date\",\n    placeholder: patient.dob,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridContactEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, // <Form.Label>Email</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: patient.contact.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridContactPhone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, // <Form.Label>Phone</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"number\",\n    placeholder: patient.phone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridRegistrationDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, // <Form.Label>RegistrationDate</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"date\",\n    placeholder: patient.registrationDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridReferringDoctorName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, // <Form.Label>ReferringDoctorName</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: patient.referringDoctor.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridReferringDoctorEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, // <Form.Label>ReferringDoctorEmail</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: patient.referringDoctor.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridReferringDoctorPhone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, // <Form.Label>ReferringDoctorPhone</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"number\",\n    placeholder: \"ReferringDoctorPhone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridOccupationRole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, // <Form.Label>OccupationRole</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"OccupationRole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridOccupationEmployer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, // <Form.Label>OccupationEmployer</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"OccupationEmployer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridOccupationEmployerContactPhone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, // <Form.Label>OccupationEmployerContactPhone</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"number\",\n    placeholder: \"OccupationEmployerContactPhone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridOccupationEmployerContactEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, // <Form.Label>OccupationEmployerContactEmail</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"OccupationEmployerContactEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridInsuranceCompany\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, // <Form.Label>InsuranceCompany</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"InsuranceCompany\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridInsuranceNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, // <Form.Label>InsuranceNumber</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"number\",\n    placeholder: \"InsuranceNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridInsuranceDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, // <Form.Label>InsuranceDescription</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"InsuranceDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridInsuranceExpiry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, // <Form.Label>InsuranceExpiry</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"date\",\n    placeholder: \"InsuranceExpiry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridInsuranceSubscriberCompany\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, // <Form.Label>InsuranceSubscriberCompany</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"InsuranceSubscriberCompany\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridInsuranceSubscriberDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, // <Form.Label>InsuranceSubscriberDescription</Form.Label>\n  React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"InsuranceSubscriberDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }))), props.canCancel && React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"danger\",\n    eventKey: \"2\",\n    className: \"btn\",\n    onClick: props.onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Cancel\"), props.canConfirm && React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"success\",\n    eventKey: \"2\",\n    className: \"btn\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default UpdatePatientForm;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdatePatientForm.js"],"names":["React","Form","Button","Col","Accordion","UpdatePatientForm","props","console","log","patient","onConfirm","name","address","dob","contact","email","phone","registrationDate","referringDoctor","canCancel","onCancel","canConfirm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion'\n// import FormCheck from 'react-bootstrap/FormCheck'\n// import AuthContext from '../../context/auth-context';\nimport './CreateUserForm.css';\n\nconst UpdatePatientForm = (props) => {\n\nconsole.log(\"UpdatePatientForm.props:  \", {...props});\nconst {...patient} = props.patient;\nconsole.log(\"UpdatePatientForm.props.patient:  \", {...patient});\n\n\nreturn (\n  <div className=\"UpdateFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridName\">\n    {\n      // <Form.Label>name</Form.Label>\n      <Form.Control type=\"text\" placeholder={patient.name}/>\n    }\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"formGridAddress\">\n    {\n      // <Form.Label>Address</Form.Label>\n      <Form.Control type=\"text\" placeholder={patient.address}/>\n    }\n    </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridDob\">\n    {\n    // <Form.Label>D.O.B</Form.Label>\n    <Form.Control type=\"date\" placeholder={patient.dob} />\n  }\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridContactEmail\">\n    {\n    // <Form.Label>Email</Form.Label>\n    <Form.Control type=\"email\" placeholder={patient.contact.email} />\n  }\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridContactPhone\">\n    {\n    // <Form.Label>Phone</Form.Label>\n    <Form.Control type=\"number\" placeholder={patient.phone} />\n  }\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridRegistrationDate\">\n    {\n    // <Form.Label>RegistrationDate</Form.Label>\n    <Form.Control type=\"date\" placeholder={patient.registrationDate} />\n  }\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridReferringDoctorName\">\n    {\n    // <Form.Label>ReferringDoctorName</Form.Label>\n    <Form.Control type=\"text\" placeholder={patient.referringDoctor.name} />\n  }\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridReferringDoctorEmail\">\n    {\n    // <Form.Label>ReferringDoctorEmail</Form.Label>\n    <Form.Control type=\"email\" placeholder={patient.referringDoctor.email} />\n  }\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridReferringDoctorPhone\">\n    {\n    // <Form.Label>ReferringDoctorPhone</Form.Label>\n    <Form.Control type=\"number\" placeholder=\"ReferringDoctorPhone\" />\n  }\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridOccupationRole\">\n    {\n    // <Form.Label>OccupationRole</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"OccupationRole\" />\n  }\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridOccupationEmployer\">\n    {\n    // <Form.Label>OccupationEmployer</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"OccupationEmployer\" />\n  }\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridOccupationEmployerContactPhone\">\n    {\n    // <Form.Label>OccupationEmployerContactPhone</Form.Label>\n    <Form.Control type=\"number\" placeholder=\"OccupationEmployerContactPhone\" />\n  }\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridOccupationEmployerContactEmail\">\n    {\n    // <Form.Label>OccupationEmployerContactEmail</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"OccupationEmployerContactEmail\" />\n  }\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridInsuranceCompany\">\n    {\n    // <Form.Label>InsuranceCompany</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"InsuranceCompany\" />\n  }\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridInsuranceNumber\">\n    {\n    // <Form.Label>InsuranceNumber</Form.Label>\n    <Form.Control type=\"number\" placeholder=\"InsuranceNumber\" />\n  }\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridInsuranceDescription\">\n    {\n    // <Form.Label>InsuranceDescription</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"InsuranceDescription\" />\n  }\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridInsuranceExpiry\">\n    {\n    // <Form.Label>InsuranceExpiry</Form.Label>\n    <Form.Control type=\"date\" placeholder=\"InsuranceExpiry\" />\n  }\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridInsuranceSubscriberCompany\">\n    {\n    // <Form.Label>InsuranceSubscriberCompany</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"InsuranceSubscriberCompany\" />\n  }\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridInsuranceSubscriberDescription\">\n    {\n    // <Form.Label>InsuranceSubscriberDescription</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"InsuranceSubscriberDescription\" />\n  }\n  </Form.Group>\n  </Form.Row>\n\n\n  {props.canCancel && (\n    <Accordion.Toggle as={Button} variant=\"danger\" eventKey=\"2\" className=\"btn\" onClick={props.onCancel}>\n    Cancel\n    </Accordion.Toggle>\n  )}\n\n  {props.canConfirm && (\n    <Accordion.Toggle as={Button} variant=\"success\" eventKey=\"2\" className=\"btn\" type=\"submit\">\n    Submit\n    </Accordion.Toggle>\n  )}\n\n  </Form>\n  {\n    // <AuthContext.Consumer>\n  // </AuthContext.Consumer>\n  }\n  </div>\n)};\n\nexport default UpdatePatientForm;\n"]},"metadata":{},"sourceType":"module"}