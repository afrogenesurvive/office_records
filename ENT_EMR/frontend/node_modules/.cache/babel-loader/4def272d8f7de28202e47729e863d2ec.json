{"ast":null,"code":"import React from'react';import Form from'react-bootstrap/Form';import Button from'react-bootstrap/Button';import Col from'react-bootstrap/Col';import Accordion from'react-bootstrap/Accordion';import Alert from'react-bootstrap/Alert';// import FormCheck from 'react-bootstrap/FormCheck'\n// import { NavLink } from 'react-router-dom';\nimport AuthContext from'../../context/auth-context';import'./CreateUserForm.css';var CreateAppointmentForm=function CreateAppointmentForm(props){// console.log({...props});\nconsole.log(\"CreateAppointmentForm:  \",AuthContext.token);return React.createElement(\"div\",{className:\"CreateFormContainer\"},React.createElement(Form,{onSubmit:props.onConfirm},React.createElement(Form.Row,null,React.createElement(Alert,{variant:\"primary\"},\"Create an appointment for: \",props.selectedPatient.name)),React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridTitle\"},React.createElement(Form.Label,null,\"Title\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"Title\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridType\"},React.createElement(Form.Label,null,\"Type\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"Type\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridLocation\"},React.createElement(Form.Label,null,\"Location\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"Location\"}))),React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridDate\"},React.createElement(Form.Label,null,\"Date\"),React.createElement(Form.Control,{type:\"date\",placeholder:\"Date\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridDateTodayCheckbox\"},React.createElement(Form.Label,null,\"Today's Date?\"),React.createElement(Form.Control,{type:\"checkbox\",onChange:function onChange(e){console.log(e.target.checked);}})),React.createElement(Form.Group,{as:Col,controlId:\"formGridTime\"},React.createElement(Form.Label,null,\"Scheduled Time\"),React.createElement(Form.Control,{type:\"time\",placeholder:\"Time\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridCheckinTime\"},React.createElement(Form.Label,null,\"Check-in Time\"),React.createElement(Form.Control,{type:\"time\",placeholder:\"CheckinTime\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridSeenTime\"},React.createElement(Form.Label,null,\"Seen Time\"),React.createElement(Form.Control,{type:\"time\",placeholder:\"SeenTime\"}))),React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridDescription\"},React.createElement(Form.Label,null,\"Description\"),React.createElement(Form.Control,{as:\"textarea\",rows:\"2\",placeholder:\"Description\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridInProgress\"},React.createElement(Form.Label,null,\"In Progress ?\"),React.createElement(Form.Control,{as:\"select\"},React.createElement(\"option\",null,\"false\"),React.createElement(\"option\",null,\"true\"))),React.createElement(Form.Group,{as:Col,controlId:\"formGridAttended\"},React.createElement(Form.Label,null,\"Attended ?\"),React.createElement(Form.Control,{as:\"select\"},React.createElement(\"option\",null,\"false\"),React.createElement(\"option\",null,\"true\"))),React.createElement(Form.Group,{as:Col,controlId:\"formGridImportant\"},React.createElement(Form.Label,null,\"Important ?\"),React.createElement(Form.Control,{as:\"select\"},React.createElement(\"option\",null,\"false\"),React.createElement(\"option\",null,\"true\")))),props.canCancel&&React.createElement(Accordion.Toggle,{as:Button,variant:\"danger\",eventKey:\"4\",className:\"btn\",onClick:props.onCancel},\"Cancel\"),props.canConfirm&&React.createElement(Button,{variant:\"success\",type:\"submit\"},\"Create New\")));};export default CreateAppointmentForm;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/CreateAppointmentForm.js"],"names":["React","Form","Button","Col","Accordion","Alert","AuthContext","CreateAppointmentForm","props","console","log","token","onConfirm","selectedPatient","name","e","target","checked","canCancel","onCancel","canConfirm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Alert from 'react-bootstrap/Alert';\n// import FormCheck from 'react-bootstrap/FormCheck'\n// import { NavLink } from 'react-router-dom';\nimport AuthContext from '../../context/auth-context';\nimport './CreateUserForm.css';\n\nconst CreateAppointmentForm = (props) => {\n\n  // console.log({...props});\n  console.log(\"CreateAppointmentForm:  \", AuthContext.token);\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n<Alert variant=\"primary\">\n  Create an appointment for: {props.selectedPatient.name}\n</Alert>\n</Form.Row>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTitle\">\n    <Form.Label>Title</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Title\"/>\n  </Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Type\" />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridLocation\">\n  <Form.Label>Location</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Location\" />\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDate\">\n  <Form.Label>Date</Form.Label>\n  <Form.Control type=\"date\" placeholder=\"Date\" />\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridDateTodayCheckbox\">\n  <Form.Label>Today's Date?</Form.Label>\n  <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridTime\">\n  <Form.Label>Scheduled Time</Form.Label>\n    <Form.Control type=\"time\" placeholder=\"Time\" />\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridCheckinTime\">\n  <Form.Label>Check-in Time</Form.Label>\n    <Form.Control type=\"time\" placeholder=\"CheckinTime\" />\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridSeenTime\">\n  <Form.Label>Seen Time</Form.Label>\n    <Form.Control type=\"time\" placeholder=\"SeenTime\" />\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDescription\">\n  <Form.Label>Description</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"2\" placeholder=\"Description\" />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridInProgress\">\n      <Form.Label>In Progress ?</Form.Label>\n      <Form.Control as=\"select\">\n        <option>false</option>\n        <option>true</option>\n      </Form.Control>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"formGridAttended\">\n          <Form.Label>Attended ?</Form.Label>\n          <Form.Control as=\"select\">\n            <option>false</option>\n            <option>true</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formGridImportant\">\n              <Form.Label>Important ?</Form.Label>\n              <Form.Control as=\"select\">\n                <option>false</option>\n                <option>true</option>\n              </Form.Control>\n            </Form.Group>\n</Form.Row>\n\n{props.canCancel && (\n  <Accordion.Toggle as={Button} variant=\"danger\" eventKey=\"4\" className=\"btn\" onClick={props.onCancel}>\n  Cancel\n  </Accordion.Toggle>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"success\" type=\"submit\">Create New</Button>\n)}\n\n</Form>\n</div>\n\n)};\n\nexport default CreateAppointmentForm;\n"]},"metadata":{},"sourceType":"module"}