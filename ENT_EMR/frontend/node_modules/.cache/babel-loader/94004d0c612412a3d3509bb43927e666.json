{"ast":null,"code":"var _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/Auth.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport './Auth.css';\nimport AuthContext from '../context/auth-context';\nimport AlertBox from '../components/AlertBox';\nimport LoadingOverlay from '../components/LoadingOverlay';\n\nclass AuthPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userAlert: null,\n      overlay: false,\n      overlayStatus: \"test\"\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      this.setState({\n        overlay: true,\n        overlayStatus: \"Signing you in...\",\n        userAlert: \"Signing you in...\"\n      });\n      const email = event.target.formBasicEmail.value;\n      const password = event.target.formBasicPassword.value;\n\n      if (email.trim().length === 0 || password.trim().length === 0) {\n        return;\n      }\n\n      let requestBody = {\n        query: `\n        query {\n          login(email: \"${email}\", password: \"${password}\") {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          // this.context.userAlert = 'Failed!';\n          throw new Error('Failed!');\n        } // this.context.userAlert = 'Failed!';\n\n\n        return res.json();\n      }).then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(2, 25);\n        this.setState({\n          userAlert: responseAlert\n        });\n\n        if (resData.data.login.token) {\n          this.context.login(resData.data.login.token, resData.data.login.userId, resData.data.login.tokenExpiration);\n          const sessionStorageLoginInfo = {\n            token: resData.data.login.token,\n            userId: resData.data.login.userId,\n            tokenExpiration: resData.data.login.tokenExpiration\n          }; // sessionStorage.setItem('login info', sessionStorageLoginInfo);\n\n          sessionStorage.setItem('login info', JSON.stringify(sessionStorageLoginInfo));\n        }\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        }); // this.context.userAlert = err;\n        // console.log(`\n        //   err: ${this.context.userAlert}\n        //   `);\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (sessionStorage.getItem('login info')) {\n      this.setState({\n        userAlert: \"sesh cookie present\"\n      });\n    } else {\n      this.setState({\n        userAlert: \"Alerts shown here\"\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(AlertBox, {\n      authUserId: this.context.userId,\n      alert: this.state.userAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), this.state.overlay === true && React.createElement(LoadingOverlay, {\n      status: this.state.overlayStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Form, {\n      className: \"auth-form\",\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"We'll never share your email with anyone else.\")), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"outline-success\",\n      type: \"submit\",\n      className: \"loginButton\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Button, {\n      variant: \"outline-warning\",\n      className: \"loginButton\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Signup\"))));\n  }\n\n}\n\nAuthPage.contextType = AuthContext;\nexport default AuthPage;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/Auth.js"],"names":["React","Component","Button","NavLink","Form","Row","AuthContext","AlertBox","LoadingOverlay","AuthPage","state","userAlert","overlay","overlayStatus","submitHandler","event","preventDefault","setState","email","target","formBasicEmail","value","password","formBasicPassword","trim","length","requestBody","query","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","responseAlert","data","slice","login","token","context","userId","tokenExpiration","sessionStorageLoginInfo","sessionStorage","setItem","catch","err","console","log","componentDidMount","getItem","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\n\nimport './Auth.css';\nimport AuthContext from '../context/auth-context';\nimport AlertBox from '../components/AlertBox';\nimport LoadingOverlay from '../components/LoadingOverlay';\n\nclass AuthPage extends Component {\n  state = {\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n\n    if (sessionStorage.getItem('login info')) {\n      this.setState({ userAlert: \"sesh cookie present\" });\n    } else {\n      this.setState({ userAlert: \"Alerts shown here\" });\n    }\n  }\n\n  submitHandler = event => {\n    event.preventDefault();\n\n    this.setState({overlay: true, overlayStatus: \"Signing you in...\", userAlert: \"Signing you in...\"})\n\n\n    const email = event.target.formBasicEmail.value;\n    const password = event.target.formBasicPassword.value;\n\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      return;\n    }\n\n    let requestBody = {\n      query: `\n        query {\n          login(email: \"${email}\", password: \"${password}\") {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      `};\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          // this.context.userAlert = 'Failed!';\n          throw new Error('Failed!');\n        }\n        // this.context.userAlert = 'Failed!';\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(2,25)\n\n          this.setState({userAlert: responseAlert})\n        if (resData.data.login.token) {\n          this.context.login(\n            resData.data.login.token,\n            resData.data.login.userId,\n            resData.data.login.tokenExpiration\n          );\n\n          const sessionStorageLoginInfo = {\n            token: resData.data.login.token,\n            userId: resData.data.login.userId,\n            tokenExpiration: resData.data.login.tokenExpiration\n          };\n\n          // sessionStorage.setItem('login info', sessionStorageLoginInfo);\n          sessionStorage.setItem('login info', JSON.stringify(sessionStorageLoginInfo));\n\n\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n        // this.context.userAlert = err;\n        // console.log(`\n        //   err: ${this.context.userAlert}\n        //   `);\n      });\n  };\n\n  render() {\n    return (\n      <Row>\n      <AlertBox\n        authUserId={this.context.userId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n\n      <Form className=\"auth-form\" onSubmit={this.submitHandler}>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n        <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\" />\n      </Form.Group>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginButton\" size=\"lg\">\n        Login\n      </Button>\n\n      <Button variant=\"outline-warning\" className=\"loginButton\" size=\"lg\">\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </Button>\n    </Form>\n\n      </Row>\n\n\n    );\n  }\n}\n\nexport default AuthPage;\n"]},"metadata":{},"sourceType":"module"}