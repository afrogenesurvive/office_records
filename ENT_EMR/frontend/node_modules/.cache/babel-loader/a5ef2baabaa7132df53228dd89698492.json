{"ast":null,"code":"var _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/thisUser.js\";\nimport S3 from 'react-aws-s3';\nimport S3FileUpload from 'react-s3';\nimport React, { Component } from 'react';\nimport UpdateUserForm from '../components/Forms/UpdateUserForm';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\nimport SidebarPage from './Sidebar';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport AlertBox from '../components/AlertBox';\nimport AttachmentViewer from '../components/AttachmentViewer';\nimport PdfCreator from '../components/PdfCreator';\nimport UpdateUserFieldForm from '../components/Forms/UpdateUserFieldForm';\nimport UpdateUserAttendanceForm from '../components/Forms/UpdateUserAttendanceForm';\nimport UpdateUserAttachmentForm from '../components/Forms/UpdateUserAttachmentForm';\nimport UpdateUserLeaveForm from '../components/Forms/UpdateUserLeaveForm';\nimport ThisUserProfile from '../components/Users/thisUserProfile';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport './Users.css';\n\nclass ThisUserPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null,\n      users: [],\n      updating: false,\n      isLoading: false,\n      userUpdateField: null,\n      userAlert: null,\n      canDelete: null,\n      showAttachment: false,\n      createPdf: false,\n      pdfData: null,\n      showThisAttachmentFile: null,\n      showThisAttachmentType: null\n    };\n    this.isActive = true;\n\n    this.startUpdateUserHandler = () => {\n      this.setState({\n        updating: true\n      });\n      console.log(\"UpdateUserForm...\");\n    };\n\n    this.modalConfirmUpdateHandler = event => {\n      const token = this.context.token;\n      let userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id;\n\n      if (userId !== selectedUserId && this.context.user.role !== 'admin') {\n        console.log(\"Not the creator or Admin! No edit permission!!\");\n        this.setState({\n          userAlert: \"Not the creator or Admin! No edit permission!!\"\n        });\n        selectedUserId = null;\n      }\n\n      console.log(\"UpdateUserFormData:  \", event.target.formGridEmail.value);\n      this.setState({\n        updating: false\n      });\n      let email = event.target.formGridEmail.value;\n      let password = event.target.formGridPassword.value;\n      let name = event.target.formGridName.value;\n      let role = this.context.user.role;\n      let dob = event.target.formGridDob.value;\n      let phone = event.target.formGridPhone.value;\n      let addressNumber = event.target.formGridAddressNumber.value;\n      let addressStreet = event.target.formGridAddressStreet.value;\n      let addressTown = event.target.formGridAddressTown.value;\n      let addressParish = event.target.formGridAddressParish.value;\n      let addressPostOffice = event.target.formGridAddressPostOffice.value;\n      let employmentDate = event.target.formGridEmploymentDate.value;\n      let terminationDate = event.target.formGridTerminationDate.value;\n\n      if (email.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        email = this.context.user.email;\n      }\n\n      if (password.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        password = this.context.user.password;\n      }\n\n      if (name.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        name = this.context.user.name;\n      } // if (role.trim().length === 0) {\n      //   console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      //   role = this.state.user.role;\n      // }\n\n\n      if (dob.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        dob = this.context.user.dob;\n      }\n\n      if (phone.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        phone = this.context.user.phone;\n      }\n\n      if (addressNumber.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressNumber = this.context.user.address.number;\n      }\n\n      if (addressStreet.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressStreet = this.context.user.address.street;\n      }\n\n      if (addressTown.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressTown = this.context.user.address.town;\n      }\n\n      if (addressParish.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressParish = this.context.user.address.parish;\n      }\n\n      if (addressPostOffice.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressPostOffice = this.context.user.address.postOffice;\n      }\n\n      if (employmentDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        employmentDate = this.context.user.employmentDate;\n      }\n\n      if (terminationDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        terminationDate = this.context.user.terminationDate;\n      }\n\n      const user = {\n        email,\n        password,\n        name,\n        role,\n        dob,\n        phone,\n        addressNumber,\n        addressStreet,\n        addressTown,\n        addressParish,\n        addressPostOffice,\n        employmentDate,\n        terminationDate\n      };\n      console.log(`\n      updating user profile...\n      userId: ${userId}\n      email: ${email},\n      password: ${password},\n      name: ${name},\n      role: ${role},\n      dob: ${dob},\n      phone: ${phone},\n      addressNumber: ${addressNumber},\n      addressStreet: ${addressStreet},\n      addressTown: ${addressTown},\n      addressParish: ${addressParish},\n      addressPostOffice: ${addressPostOffice},\n      employmentDate: ${employmentDate},\n      terminationDate: ${terminationDate},\n      `);\n      const requestBody = {\n        query: `\n        mutation {updateUser(userId:\\\"${userId}\\\",selectedUserId:\\\"${userId}\\\",userInput: {email:\\\"${email}\\\",password:\\\"${password}\\\",name:\\\"${name}\\\",dob:\\\"${dob}\\\",addressNumber:${addressNumber},addressStreet:\\\"${addressStreet}\\\",addressTown:\\\"${addressTown}\\\",addressParish:\\\"${addressParish}\\\", addressPostOffice:\\\"${addressPostOffice}\\\",phone:\\\"${phone}\\\",role:\\\"${role}\\\",employmentDate:\\\"${employmentDate}\\\",terminationDate:\\\"${terminationDate}\\\"})\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const updatedUser = resData.data.updateUser;\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser));\n        this.state.users.push(updatedUser);\n        this.context.users = this.state.users;\n        const responseAlert = JSON.stringify(resData.data).slice(2, 25);\n        this.setState({\n          userAlert: responseAlert,\n          user: updatedUser\n        });\n        this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        });\n      });\n    };\n\n    this.modalConfirmUpdateFieldHandler = event => {\n      const token = this.context.token;\n      const userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id;\n\n      if (userId !== selectedUserId && this.context.user.role !== 'admin') {\n        console.log(\"Not the creator or Admin! No edit permission!!\");\n        this.setState({\n          userAlert: \"Not the creator or Admin! No edit permission!!\"\n        });\n        selectedUserId = null;\n      }\n\n      console.log(\"UpdateUserFieldFormData:  \", event.target.formGridField.value);\n      this.setState({\n        updating: false\n      });\n      let field = event.target.formGridField.value;\n      let query = event.target.formGridQuery.value;\n      const requestBody = {\n        query: `\n            mutation{updateUserField(userId:\\\"${userId}\\\",selectedUserId:\\\"${userId}\\\",field:\\\"${field}\\\",query:\\\"${query}\\\")\n            {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n          `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data.updateUserField));\n        const updatedUserId = resData.data.updateUserField._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(resData.data.updateUserField);\n        this.context.users = this.state.users;\n        const responseAlert = JSON.stringify(resData.data).slice(2, 25);\n        this.setState({\n          userAlert: responseAlert\n        });\n        this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        });\n      });\n    };\n\n    this.updateUserAttendanceHandler = event => {\n      const token = this.context.token;\n      const userId = this.state.user._id; // let selectedUserId = this.context.selectedUser._id;\n      // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      //   console.log(\"Not the creator or Admin! No edit permission!!\");\n      //   selectedUserId = null;\n      // }\n\n      console.log(\"UpdateUserAttendanceFormData:  \", event.target.formGridAttendanceDate.value);\n      this.setState({\n        updating: false,\n        userUpdateField: null\n      });\n      let attendanceDate = event.target.formGridAttendanceDate.value;\n      let attendanceStatus = event.target.formGridAttendanceStatus.value;\n      let attendanceDescription = event.target.formGridAttendanceDescription.value;\n\n      if (attendanceDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        attendanceDate = this.context.selectedUser.attendanceDate;\n      }\n\n      if (attendanceStatus.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        attendanceStatus = this.context.selectedUser.attendanceStatus;\n      }\n\n      if (attendanceDescription.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        attendanceDescription = this.context.selectedUser.attendanceDescription;\n      }\n\n      const userAttendance = {\n        attendanceDate,\n        attendanceStatus,\n        attendanceDescription\n      };\n      console.log(`\n      adding user attendance item...\n      userId: ${userId},\n      attendanceDate: ${attendanceDate},\n      attendanceStatus: ${attendanceStatus},\n      attendanceDescription: ${attendanceDescription}\n      `);\n      const requestBody = {\n        query: `\n          mutation {updateUserAttendance(userId:\"${userId}\", selectedUserId:\"${userId}\",userInput:{attendanceDate:\"${attendanceDate}\",attendanceStatus:\"${attendanceStatus}\",attendanceDescription:\"${attendanceDescription}\"})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data.updateUserAttendance));\n        const updatedUserId = resData.data.updateUserAttendance._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(resData.data.updateUserAttendance);\n        this.context.users = this.state.users;\n        const responseAlert = JSON.stringify(resData.data).slice(2, 25);\n        this.setState({\n          userAlert: responseAlert\n        });\n        this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        });\n      });\n    };\n\n    this.updateUserLeaveHandler = event => {\n      const token = this.context.token;\n      const userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id;\n\n      if (userId !== selectedUserId && this.context.user.role !== 'admin') {\n        console.log(\"Not the creator or Admin! No edit permission!!\");\n        this.setState({\n          userAlert: \"Not the creator or Admin! No edit permission!!\"\n        });\n        selectedUserId = null;\n      }\n\n      console.log(\"UpdateUserLeaveFormData:  \", event.target.formGridLeaveType.value);\n      this.setState({\n        updating: false,\n        userUpdateField: null\n      });\n      let leaveType = event.target.formGridLeaveType.value;\n      let leaveTitle = event.target.formGridLeaveTitle.value;\n      let leaveStartDate = event.target.formGridLeaveStartDate.value;\n      let leaveEndDate = event.target.formGridLeaveEndDate.value;\n\n      if (leaveType.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        leaveType = this.context.selectedUser.leaveType;\n      }\n\n      if (leaveTitle.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        leaveTitle = this.context.selectedUser.leaveTitle;\n      }\n\n      if (leaveStartDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        leaveStartDate = this.context.selectedUser.leaveStartDate;\n      }\n\n      if (leaveEndDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        leaveEndDate = this.context.selectedUser.leaveEndDate;\n      }\n\n      const userLeave = {\n        leaveType,\n        leaveTitle,\n        leaveStartDate,\n        leaveEndDate\n      };\n      console.log(`\n      adding user attendance item...\n      userId: ${userId},\n      selectedUserId: ${selectedUserId}\n      leave: {\n        type: ${leaveType},\n        title: ${leaveTitle},\n        startDate: ${leaveStartDate},\n        endDate: ${leaveEndDate}\n      }\n      `);\n      const requestBody = {\n        query: `\n          mutation {updateUserLeave(userId:\"${userId}\", selectedUserId:\"${userId}\",userInput:{leaveType:\"${leaveType}\",leaveTitle:\"${leaveTitle}\",leaveStartDate:\"${leaveStartDate}\",leaveEndDate:\"${leaveEndDate}\"})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data));\n        const updatedUserId = resData.data.updateUserLeave._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(resData.data.updateUserLeave);\n        this.context.users = this.state.users;\n        const responseAlert = JSON.stringify(resData.data).slice(2, 25);\n        this.setState({\n          userAlert: responseAlert\n        });\n        this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        });\n      });\n    };\n\n    this.updateUserAttachmentHandler = event => {\n      const token = this.context.token;\n      const userId = this.context.userId; // let selectedUserId = this.context.selectedUser._id;\n      // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      //   console.log(\"Not the creator or Admin! No edit permission!!\");\n      //   selectedUserId = null;\n      // }\n      // if (userId !== selectedUserId && this.context.user.role !== \"admin\" ) {\n      //   console.log(\"Not the creator or Admin! No edit permission!!\");\n      //   this.setState({userAlert: \"Not the creator or Admin! No edit permission!!\"})\n      //     selectedUserId = null;\n      // }\n\n      console.log(\"UpdateUserAttachmentFormData:  \");\n      this.setState({\n        updating: false,\n        userUpdateField: null\n      }); // let attachmentName = event.target.formGridAttachmentName.value;\n\n      let attachmentFormat = event.target.formGridAttachmentFormat.value;\n      let attachmentPath = event.target.formGridAttachmentPath.value;\n      let file = AuthContext._currentValue.file;\n      console.log(`\n    uploading to s3...\n    file.name: ${file.name},\n    AuthContext._currentValue.file: ${AuthContext._currentValue.file},\n    `);\n      const config = {\n        bucketName: 'ent-emr-bucket',\n        dirName: attachmentPath,\n        region: 'us-east-2',\n        accessKeyId: \"AKIARFTS6Q6DALQKT4QR\",\n        secretAccessKey: \"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\"\n      };\n      const ReactS3Client = new S3(config);\n      const newFileName = file.name;\n      const attachmentName = newFileName;\n      ReactS3Client.uploadFile(file, newFileName).then(data => {\n        console.log(data);\n        this.setState({\n          userAlert: \"attachment upload success!\"\n        });\n      }).catch(err => {\n        console.error(err);\n        this.setState({\n          userAlert: \"upload error:  \" + err\n        });\n      });\n\n      if (attachmentName.trim().length === 0 || attachmentFormat.trim().length === 0 || attachmentPath.trim().length === 0) {\n        console.log(\"blank fields detected!!! try again\");\n        return;\n      }\n\n      const userAttachment = {\n        attachmentName,\n        attachmentFormat,\n        attachmentPath\n      };\n      console.log(`\n    adding user attendance item...\n    userId: ${userId},\n    selectedUserId: ${userId}\n    attachmentName: ${attachmentName},\n    attachmentFormat: ${attachmentFormat},\n    attachmentPath: ${attachmentPath}\n    `);\n      this.setState({\n        userAlert: \"adding user attachment item...\"\n      });\n      const requestBody = {\n        query: `\n        mutation{updateUserAttachment(userId:\\\"${userId}\\\",selectedUserId:\\\"${userId}\\\",userInput:{attachmentName:\\\"${attachmentName}\\\",attachmentFormat:\\\"${attachmentFormat}\\\",attachmentPath:\\\"${attachmentPath}\\\"})\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data.updateUserAttachment));\n        const updatedUserId = resData.data.updateUserAttachment._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(resData.data.updateUserAttachment);\n        this.context.users = this.state.users;\n        const responseAlert = JSON.stringify(resData.data).slice(2, 25); // this.setState({ userAlert: responseAlert})\n\n        this.getThisUser();\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        });\n      });\n    };\n\n    this.modalCancelHandler = () => {\n      this.setState({\n        updating: false\n      });\n    };\n\n    this.deleteUserAttendanceItem = props => {\n      let token = this.context.token;\n      let userId = this.context.userId;\n      let selectedUserId = this.state.selectedUser._id;\n      let date = new Date(props.date.substr(0, 10) * 1000).toISOString().slice(0, 10);\n      console.log(`\n      delete user Attendance item:\n      props: ${JSON.stringify(props)},\n      token: ${token},\n      userId: ${userId},\n      selectedUserId: ${userId},\n      attandance date: ${date},\n      `);\n      const requestBody = {\n        query: `\n         mutation{deleteUserAttendance(userId:\\\"${userId}\\\",selectedUserId:\\\"${userId}\\\",attendanceDate:\\\"${date}\\\")\n         {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        let deletedUser = resData.data.deleteUserAttendance;\n        console.log(\"resData.data:  \", resData.data.deleteUserAttendance);\n        const updatedUserId = resData.data.deleteUserAttendance._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(resData.data.deleteUserAttendance);\n        this.context.users = this.state.users;\n        const responseAlert = JSON.stringify(resData.data).slice(2, 25);\n        this.setState({\n          userAlert: responseAlert\n        }); // this.setState({ userAlert: responseAlert, selectedUser: resData.data.deleteUserAttendance})\n        // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.deleteUserLeaveItem = props => {\n      let token = this.context.token;\n      let userId = this.context.userId;\n      console.log(`\n      delete user Leave item:\n      props: ${JSON.stringify(props)},\n      token: ${token},\n      userId: ${userId},\n      selectedUserId: ${userId},\n      `);\n      const requestBody = {\n        query: `\n         mutation{deleteUserLeave(userId:\\\"${userId}\\\",selectedUserId:\\\"${userId}\\\",leaveTitle:\\\"${props.title}\\\")\n         {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        let deletedUser = resData.data.deleteUserLeave;\n        console.log(deletedUser);\n        const updatedUserId = resData.data.deleteUserLeave._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(resData.data.deleteUserLeave);\n        this.context.users = this.state.users;\n        const responseAlert = JSON.stringify(resData.data).slice(2, 25);\n        this.setState({\n          userAlert: responseAlert\n        }); // this.setState({ userAlert: responseAlert, selectedUser: resData.data.deleteUserLeave})\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.deleteUserAttachmentItem = props => {\n      let token = this.context.token;\n      let userId = this.context.userId;\n      console.log(`\n      delete user Attachment item:\n      props: ${JSON.stringify(props)},\n      token: ${token},\n      userId: ${userId},\n      selectedUserId: ${userId},\n      `);\n      console.log(`\n        deleting from s3...\n        file.name: ${props.name},\n        `);\n      const config = {\n        bucketName: 'ent-emr-bucket',\n        dirName: props.path,\n        region: 'us-east-2',\n        accessKeyId: \"AKIARFTS6Q6DALQKT4QR\",\n        secretAccessKey: \"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\"\n      };\n      const ReactS3Client = new S3(config);\n      const filename = props.name; // const attachmentName = newFileName;\n      //\n\n      S3FileUpload.deleteFile(filename, config).then(response => console.log(response)).catch(err => console.error(err));\n      const requestBody = {\n        query: `\n         mutation{deleteUserAttachment(userId:\\\"${userId}\\\",selectedUserId:\\\"${userId}\\\",attachmentName:\\\"${props.name}\\\")\n         {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        let deletedUser = resData.data.deleteUserAttachment;\n        console.log(deletedUser);\n        const updatedUserId = resData.data.deleteUserAttachment._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(resData.data.deleteUserAttachment);\n        this.context.users = this.state.users;\n        const responseAlert = JSON.stringify(resData.data).slice(2, 25);\n        this.setState({\n          userAlert: responseAlert\n        }); // this.setState({ userAlert: responseAlert, selectedUser: resData.data.deleteUserAttachment})\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onViewAttachment = attachment => {\n      console.log(`\n      setting up attachment viewer...\n      attachment: ${JSON.stringify(attachment)}\n      `);\n      this.setState({\n        showAttachment: true\n      });\n      const file = \"https://ent-emr-bucket.s3-us-east-2.amazonaws.com/\" + attachment.path + \"/\" + attachment.name + \".\" + attachment.format;\n      const type = attachment.format;\n      this.setState({\n        showThisAttachmentFile: file,\n        showThisAttachmentType: type\n      });\n    };\n\n    this.closeAttachmentView = () => {\n      console.log(`\n      closing attachment viewer...\n      `);\n      this.setState({\n        showAttachment: false\n      });\n    };\n\n    this.createPdf = user => {\n      console.log(`\n        creating pdf...\n        user: ${JSON.stringify(user)}\n      `);\n      const pdfData = {\n        title: user.name,\n        body: user.dob\n      };\n      this.setState({\n        createPdf: true,\n        pdfData: pdfData\n      });\n    };\n\n    this.closePdfCreator = () => {\n      console.log(`\n      closing pdf creator...\n      `);\n      this.setState({\n        createPdf: false,\n        pdfData: null\n      });\n    };\n  }\n\n  // constructor(props) {\n  //   super(props);\n  // }\n  componentDidMount() {\n    this.getThisUser();\n\n    if (this.context.user.name === 'admin579') {\n      this.setState({\n        canDelete: true\n      });\n    }\n  }\n\n  getThisUser() {\n    this.setState({\n      isLoading: true\n    });\n    const requestBody = {\n      query: `\n      query {getThisUser\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `\n    }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n\n      return res.json();\n    }).then(resData => {\n      console.log(\"resdata...\" + JSON.stringify(resData));\n      const thisUser = resData.data.getThisUser;\n\n      if (this.isActive) {\n        this.setState({\n          user: thisUser,\n          isLoading: false\n        });\n        this.context.user = thisUser;\n        console.log(\"this.context.user:  \" + this.context.user.name);\n        sessionStorage.setItem('thisUser', JSON.stringify(thisUser));\n      }\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        userAlert: err\n      });\n\n      if (this.isActive) {\n        this.setState({\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  updateUserSpecialProfile(event) {\n    console.log(\"special field to update:  \", event.target.value);\n    const field = event.target.value;\n    this.setState({\n      userUpdateField: field\n    });\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840\n      },\n      __self: this\n    }, this.state.showAttachment === true && React.createElement(AttachmentViewer, {\n      onCloseAttachmentView: this.closeAttachmentView,\n      attachmentFile: this.state.showThisAttachmentFile,\n      attachmentType: this.state.showThisAttachmentType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843\n      },\n      __self: this\n    }), this.state.createPdf === true && React.createElement(PdfCreator, {\n      pdfData: this.state.pdfData,\n      onClosePdfCreator: this.closePdfCreator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 3,\n      className: \"MasterCol1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858\n      },\n      __self: this\n    }, React.createElement(AlertBox, {\n      authUserId: this.context.userId,\n      alert: this.state.userAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 859\n      },\n      __self: this\n    }), React.createElement(SidebarPage, {\n      you: this.state.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 9,\n      className: \"MasterCol2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"containerProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"Detail\",\n      id: \"uncontrolled-tab-example2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      eventKey: \"Detail\",\n      title: \"Your Staff Data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872\n      },\n      __self: this\n    }, this.state.user !== null && React.createElement(ThisUserProfile, {\n      user: this.state.user,\n      authUserId: this.context.userId,\n      canDelete: this.state.canDelete,\n      attendanceDelete: this.deleteUserAttendanceItem,\n      leaveDelete: this.deleteUserLeaveItem,\n      attachmentDelete: this.deleteUserAttachmentItem,\n      onViewAttachment: this.onViewAttachment,\n      onCreatePdf: this.createPdf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Demographics\",\n      title: \"Edit Demographics\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 892\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      className: \"confirmEditButton\",\n      onClick: this.startUpdateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 893\n      },\n      __self: this\n    }, \"Demographics\"), this.state.updating === true && React.createElement(UpdateUserForm, {\n      canCancelProfile: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmUpdateHandler,\n      confirmText: \"Confirm\",\n      user: this.state.user,\n      authUserId: this.context.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"userEditField\",\n      title: \"Edit Single Field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 907\n      },\n      __self: this\n    }, this.state.selectedUser === null && React.createElement(Button, {\n      variant: \"outline-warning\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 909\n      },\n      __self: this\n    }, \"Select a Staff member from the Master List below\"), this.state.selectedUser !== null && React.createElement(Button, {\n      variant: \"outline-primary\",\n      className: \"confirmEditButton\",\n      onClick: this.startUpdateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 914\n      },\n      __self: this\n    }, \"Edit Field\"), this.state.updating && this.state.selectedUser !== null && React.createElement(UpdateUserFieldForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmUpdateFieldHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Atttendance\",\n      title: \"Add Atttendance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      className: \"confirmEditButton\",\n      value: \"attendance\",\n      onClick: this.updateUserSpecialProfile.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 932\n      },\n      __self: this\n    }, \"Attendance\"), this.state.userUpdateField === 'attendance' && React.createElement(UpdateUserAttendanceForm, {\n      authUserId: this.context.userId,\n      canCancelProfile: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserAttendanceHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Leave\",\n      title: \"Add Leave\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 946\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      className: \"confirmEditButton\",\n      value: \"leave\",\n      onClick: this.updateUserSpecialProfile.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 947\n      },\n      __self: this\n    }, \"Leave\"), this.state.userUpdateField === 'leave' && React.createElement(UpdateUserLeaveForm, {\n      authUserId: this.context.userId,\n      canCancelProfile: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserLeaveHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Attachment\",\n      title: \"Add Attachment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 961\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"attachments\",\n      className: \"confirmEditButton\",\n      onClick: this.updateUserSpecialProfile.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 962\n      },\n      __self: this\n    }, \"Attachment\"), this.state.userUpdateField === 'attachments' && React.createElement(UpdateUserAttachmentForm, {\n      authUserId: this.context.userId,\n      canCancelProfile: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserAttachmentHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nThisUserPage.contextType = AuthContext;\nexport default ThisUserPage;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/thisUser.js"],"names":["S3","S3FileUpload","React","Component","UpdateUserForm","Container","Row","Col","Accordion","Button","SidebarPage","Tabs","Tab","AlertBox","AttachmentViewer","PdfCreator","UpdateUserFieldForm","UpdateUserAttendanceForm","UpdateUserAttachmentForm","UpdateUserLeaveForm","ThisUserProfile","Spinner","AuthContext","ThisUserPage","state","user","users","updating","isLoading","userUpdateField","userAlert","canDelete","showAttachment","createPdf","pdfData","showThisAttachmentFile","showThisAttachmentType","isActive","startUpdateUserHandler","setState","console","log","modalConfirmUpdateHandler","event","token","context","userId","selectedUserId","selectedUser","_id","role","target","formGridEmail","value","email","password","formGridPassword","name","formGridName","dob","formGridDob","phone","formGridPhone","addressNumber","formGridAddressNumber","addressStreet","formGridAddressStreet","addressTown","formGridAddressTown","addressParish","formGridAddressParish","addressPostOffice","formGridAddressPostOffice","employmentDate","formGridEmploymentDate","terminationDate","formGridTerminationDate","trim","length","address","number","street","town","parish","postOffice","requestBody","query","fetch","method","body","JSON","stringify","headers","Authorization","then","res","status","Error","json","resData","updatedUser","data","updateUser","push","responseAlert","slice","fetchUsers","catch","err","modalConfirmUpdateFieldHandler","formGridField","field","formGridQuery","updateUserField","updatedUserId","find","e","updatedUserPos","indexOf","slicedArray","splice","updateUserAttendanceHandler","formGridAttendanceDate","attendanceDate","attendanceStatus","formGridAttendanceStatus","attendanceDescription","formGridAttendanceDescription","userAttendance","updateUserAttendance","updateUserLeaveHandler","formGridLeaveType","leaveType","leaveTitle","formGridLeaveTitle","leaveStartDate","formGridLeaveStartDate","leaveEndDate","formGridLeaveEndDate","userLeave","updateUserLeave","updateUserAttachmentHandler","attachmentFormat","formGridAttachmentFormat","attachmentPath","formGridAttachmentPath","file","_currentValue","config","bucketName","dirName","region","accessKeyId","secretAccessKey","ReactS3Client","newFileName","attachmentName","uploadFile","error","userAttachment","updateUserAttachment","getThisUser","modalCancelHandler","deleteUserAttendanceItem","props","date","Date","substr","toISOString","deletedUser","deleteUserAttendance","deleteUserLeaveItem","title","deleteUserLeave","deleteUserAttachmentItem","path","filename","deleteFile","response","deleteUserAttachment","onViewAttachment","attachment","format","type","closeAttachmentView","closePdfCreator","componentDidMount","thisUser","sessionStorage","setItem","updateUserSpecialProfile","componentWillUnmount","render","bind","contextType"],"mappings":"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","sourcesContent":["import S3 from 'react-aws-s3';\nimport S3FileUpload from 'react-s3';\nimport React, { Component } from 'react';\nimport UpdateUserForm from '../components/Forms/UpdateUserForm';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\nimport SidebarPage from './Sidebar';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\n\nimport AlertBox from '../components/AlertBox';\nimport AttachmentViewer from '../components/AttachmentViewer';\nimport PdfCreator from '../components/PdfCreator';\n\nimport UpdateUserFieldForm from '../components/Forms/UpdateUserFieldForm';\nimport UpdateUserAttendanceForm from '../components/Forms/UpdateUserAttendanceForm';\nimport UpdateUserAttachmentForm from '../components/Forms/UpdateUserAttachmentForm';\nimport UpdateUserLeaveForm from '../components/Forms/UpdateUserLeaveForm';\n\nimport ThisUserProfile from '../components/Users/thisUserProfile';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport './Users.css';\n\nclass ThisUserPage extends Component {\n  state = {\n    user: null,\n    users: [],\n    updating: false,\n    isLoading: false,\n    userUpdateField: null,\n    userAlert: null,\n    canDelete: null,\n    showAttachment: false,\n    createPdf: false,\n    pdfData: null,\n    showThisAttachmentFile: null,\n    showThisAttachmentType: null,\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  componentDidMount() {\n    this.getThisUser();\n    if (this.context.user.name === 'admin579'){\n      this.setState({canDelete: true})\n    }\n  }\n\n  startUpdateUserHandler = () => {\n    this.setState({ updating: true });\n    console.log(\"UpdateUserForm...\");\n  };\n\n\n  modalConfirmUpdateHandler = (event) => {\n    const token = this.context.token;\n    let userId = this.context.userId;\n    let selectedUserId = this.context.selectedUser._id;\n    if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      console.log(\"Not the creator or Admin! No edit permission!!\");\n      this.setState({userAlert: \"Not the creator or Admin! No edit permission!!\"});\n      selectedUserId = null;\n    }\n    console.log(\"UpdateUserFormData:  \", event.target.formGridEmail.value);\n    this.setState({ updating: false });\n    let email = event.target.formGridEmail.value;\n    let password = event.target.formGridPassword.value;\n    let name = event.target.formGridName.value;\n    let role = this.context.user.role;\n    let dob = event.target.formGridDob.value;\n    let phone = event.target.formGridPhone.value;\n    let addressNumber = event.target.formGridAddressNumber.value;\n    let addressStreet = event.target.formGridAddressStreet.value;\n    let addressTown = event.target.formGridAddressTown.value;\n    let addressParish = event.target.formGridAddressParish.value;\n    let addressPostOffice = event.target.formGridAddressPostOffice.value;\n    let employmentDate = event.target.formGridEmploymentDate.value;\n    let terminationDate = event.target.formGridTerminationDate.value;\n\n    if (email.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      email = this.context.user.email;\n    }\n    if (password.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      password = this.context.user.password;\n    }\n    if (name.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      name = this.context.user.name;\n    }\n    // if (role.trim().length === 0) {\n    //   console.log(\"blank fields detected!!!...filling w/ previous data...\");\n    //   role = this.state.user.role;\n    // }\n    if (dob.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      dob = this.context.user.dob;\n    }\n    if (phone.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      phone = this.context.user.phone;\n    }\n    if (addressNumber.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressNumber = this.context.user.address.number;\n    }\n    if (addressStreet.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressStreet = this.context.user.address.street;\n    }\n    if (addressTown.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressTown = this.context.user.address.town;\n    }\n    if (addressParish.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressParish = this.context.user.address.parish;\n    }\n    if (addressPostOffice.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressPostOffice = this.context.user.address.postOffice;\n    }\n    if (employmentDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      employmentDate = this.context.user.employmentDate;\n    }\n    if (terminationDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      terminationDate = this.context.user.terminationDate;\n    }\n\n\n    const user = { email, password, name, role, dob, phone, addressNumber, addressStreet, addressTown, addressParish, addressPostOffice, employmentDate, terminationDate };\n    console.log(`\n      updating user profile...\n      userId: ${userId}\n      email: ${email},\n      password: ${password},\n      name: ${name},\n      role: ${role},\n      dob: ${dob},\n      phone: ${phone},\n      addressNumber: ${addressNumber},\n      addressStreet: ${addressStreet},\n      addressTown: ${addressTown},\n      addressParish: ${addressParish},\n      addressPostOffice: ${addressPostOffice},\n      employmentDate: ${employmentDate},\n      terminationDate: ${terminationDate},\n      `);\n\n    const requestBody = {\n      query: `\n        mutation {updateUser(userId:\\\"${userId}\\\",selectedUserId:\\\"${userId}\\\",userInput: {email:\\\"${email}\\\",password:\\\"${password}\\\",name:\\\"${name}\\\",dob:\\\"${dob}\\\",addressNumber:${addressNumber},addressStreet:\\\"${addressStreet}\\\",addressTown:\\\"${addressTown}\\\",addressParish:\\\"${addressParish}\\\", addressPostOffice:\\\"${addressPostOffice}\\\",phone:\\\"${phone}\\\",role:\\\"${role}\\\",employmentDate:\\\"${employmentDate}\\\",terminationDate:\\\"${terminationDate}\\\"})\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `};\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n\n        const updatedUser = resData.data.updateUser;\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser));\n        this.state.users.push(updatedUser);\n        this.context.users = this.state.users;\n\n        const responseAlert = JSON.stringify(resData.data).slice(2,25);\n        this.setState({ userAlert: responseAlert, user: updatedUser})\n        this.fetchUsers();\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n      });\n    };\n\n    modalConfirmUpdateFieldHandler = (event) => {\n\n      const token = this.context.token;\n      const userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id;\n      if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n        console.log(\"Not the creator or Admin! No edit permission!!\");\n        this.setState({userAlert: \"Not the creator or Admin! No edit permission!!\"});\n        selectedUserId = null;\n      }\n\n        console.log(\"UpdateUserFieldFormData:  \", event.target.formGridField.value);\n        this.setState({ updating: false });\n\n        let field = event.target.formGridField.value;\n        let query = event.target.formGridQuery.value;\n\n        const requestBody = {\n          query:`\n            mutation{updateUserField(userId:\\\"${userId}\\\",selectedUserId:\\\"${userId}\\\",field:\\\"${field}\\\",query:\\\"${query}\\\")\n            {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n          `};\n\n        // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n        fetch('http://localhost:10000/graphql', {\n          method: 'POST',\n          body: JSON.stringify(requestBody),\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + token\n          }\n        })\n          .then(res => {\n            if (res.status !== 200 && res.status !== 201) {\n              throw new Error('Failed!');\n            }\n            return res.json();\n          })\n          .then(resData => {\n            console.log(\"response data... \" + JSON.stringify(resData.data.updateUserField));\n\n            const updatedUserId = resData.data.updateUserField._id;\n            const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n            const updatedUserPos = this.state.users.indexOf(updatedUser);\n            const slicedArray = this.state.users.splice(updatedUserPos, 1);\n            console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n            this.state.users.push(resData.data.updateUserField);\n            this.context.users = this.state.users;\n            const responseAlert = JSON.stringify(resData.data).slice(2,25);\n            this.setState({ userAlert: responseAlert})\n            this.fetchUsers();\n          })\n          .catch(err => {\n            console.log(err);\n            this.setState({userAlert: err});\n          });\n\n    }\n\n  updateUserAttendanceHandler = (event) => {\n    const token = this.context.token;\n    const userId = this.state.user._id;\n    // let selectedUserId = this.context.selectedUser._id;\n    // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n    //   console.log(\"Not the creator or Admin! No edit permission!!\");\n    //   selectedUserId = null;\n    // }\n    console.log(\"UpdateUserAttendanceFormData:  \", event.target.formGridAttendanceDate.value);\n\n    this.setState({ updating: false , userUpdateField: null });\n\n    let attendanceDate = event.target.formGridAttendanceDate.value;\n    let attendanceStatus = event.target.formGridAttendanceStatus.value;\n    let attendanceDescription = event.target.formGridAttendanceDescription.value;\n\n    if (attendanceDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      attendanceDate = this.context.selectedUser.attendanceDate;\n    }\n    if (attendanceStatus.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      attendanceStatus = this.context.selectedUser.attendanceStatus;\n    }\n    if (attendanceDescription.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      attendanceDescription = this.context.selectedUser.attendanceDescription;\n    }\n\n    const userAttendance = { attendanceDate, attendanceStatus, attendanceDescription }\n    console.log(`\n      adding user attendance item...\n      userId: ${userId},\n      attendanceDate: ${attendanceDate},\n      attendanceStatus: ${attendanceStatus},\n      attendanceDescription: ${attendanceDescription}\n      `);\n\n      const requestBody = {\n        query:`\n          mutation {updateUserAttendance(userId:\"${userId}\", selectedUserId:\"${userId}\",userInput:{attendanceDate:\"${attendanceDate}\",attendanceStatus:\"${attendanceStatus}\",attendanceDescription:\"${attendanceDescription}\"})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `};\n\n      // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }})\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData.data.updateUserAttendance));\n\n          const updatedUserId = resData.data.updateUserAttendance._id;\n          const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n          const updatedUserPos = this.state.users.indexOf(updatedUser);\n          const slicedArray = this.state.users.splice(updatedUserPos, 1);\n          console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n          this.state.users.push(resData.data.updateUserAttendance);\n          this.context.users = this.state.users;\n          const responseAlert = JSON.stringify(resData.data).slice(2,25);\n          this.setState({ userAlert: responseAlert})\n          this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n  };\n\n\n  updateUserLeaveHandler = (event) => {\n    const token = this.context.token;\n    const userId = this.context.userId;\n    let selectedUserId = this.context.selectedUser._id;\n    if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      console.log(\"Not the creator or Admin! No edit permission!!\");\n      this.setState({userAlert: \"Not the creator or Admin! No edit permission!!\"});\n      selectedUserId = null;\n    }\n\n    console.log(\"UpdateUserLeaveFormData:  \", event.target.formGridLeaveType.value);\n\n    this.setState({ updating: false , userUpdateField: null });\n\n    let leaveType = event.target.formGridLeaveType.value;\n    let leaveTitle = event.target.formGridLeaveTitle.value;\n    let leaveStartDate = event.target.formGridLeaveStartDate.value;\n    let leaveEndDate = event.target.formGridLeaveEndDate.value;\n\n    if (leaveType.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      leaveType = this.context.selectedUser.leaveType;\n    }\n    if (leaveTitle.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      leaveTitle = this.context.selectedUser.leaveTitle;\n    }\n    if (leaveStartDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      leaveStartDate = this.context.selectedUser.leaveStartDate;\n    }\n    if (leaveEndDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      leaveEndDate = this.context.selectedUser.leaveEndDate;\n    }\n\n    const userLeave = { leaveType, leaveTitle, leaveStartDate, leaveEndDate }\n    console.log(`\n      adding user attendance item...\n      userId: ${userId},\n      selectedUserId: ${selectedUserId}\n      leave: {\n        type: ${leaveType},\n        title: ${leaveTitle},\n        startDate: ${leaveStartDate},\n        endDate: ${leaveEndDate}\n      }\n      `);\n\n      const requestBody = {\n        query:`\n          mutation {updateUserLeave(userId:\"${userId}\", selectedUserId:\"${userId}\",userInput:{leaveType:\"${leaveType}\",leaveTitle:\"${leaveTitle}\",leaveStartDate:\"${leaveStartDate}\",leaveEndDate:\"${leaveEndDate}\"})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `};\n\n      // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }})\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData.data));\n\n          const updatedUserId = resData.data.updateUserLeave._id;\n          const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n          const updatedUserPos = this.state.users.indexOf(updatedUser);\n          const slicedArray = this.state.users.splice(updatedUserPos, 1);\n          console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n          this.state.users.push(resData.data.updateUserLeave);\n          this.context.users = this.state.users;\n          const responseAlert = JSON.stringify(resData.data).slice(2,25);\n          this.setState({ userAlert: responseAlert})\n          this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n  };\n\n\n  updateUserAttachmentHandler = (event) => {\n\n  const token = this.context.token;\n  const userId = this.context.userId;\n  // let selectedUserId = this.context.selectedUser._id;\n  // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n  //   console.log(\"Not the creator or Admin! No edit permission!!\");\n  //   selectedUserId = null;\n  // }\n  // if (userId !== selectedUserId && this.context.user.role !== \"admin\" ) {\n  //   console.log(\"Not the creator or Admin! No edit permission!!\");\n  //   this.setState({userAlert: \"Not the creator or Admin! No edit permission!!\"})\n  //     selectedUserId = null;\n  // }\n\n  console.log(\"UpdateUserAttachmentFormData:  \");\n\n  this.setState({ updating: false , userUpdateField: null });\n\n  // let attachmentName = event.target.formGridAttachmentName.value;\n  let attachmentFormat = event.target.formGridAttachmentFormat.value;\n  let attachmentPath = event.target.formGridAttachmentPath.value;\n  let file = AuthContext._currentValue.file;\n\n  console.log(`\n    uploading to s3...\n    file.name: ${file.name},\n    AuthContext._currentValue.file: ${AuthContext._currentValue.file},\n    `);\n  const config = {\n    bucketName: 'ent-emr-bucket',\n    dirName: attachmentPath,\n    region: 'us-east-2',\n    accessKeyId: \"AKIARFTS6Q6DALQKT4QR\",\n    secretAccessKey: \"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\",\n  }\n  const ReactS3Client = new S3(config);\n  const newFileName = file.name;\n  const attachmentName = newFileName;\n\n  ReactS3Client\n      .uploadFile(file, newFileName)\n      .then(data => {console.log(data);this.setState({userAlert: \"attachment upload success!\"});})\n      .catch(err => {console.error(err);this.setState({userAlert: \"upload error:  \"+err});})\n\n\n  if (\n    attachmentName.trim().length === 0 ||\n    attachmentFormat.trim().length === 0 ||\n    attachmentPath.trim().length === 0\n) {\n    console.log(\"blank fields detected!!! try again\");\n    return\n  }\n\n  const userAttachment = { attachmentName, attachmentFormat, attachmentPath }\n  console.log(`\n    adding user attendance item...\n    userId: ${userId},\n    selectedUserId: ${userId}\n    attachmentName: ${attachmentName},\n    attachmentFormat: ${attachmentFormat},\n    attachmentPath: ${attachmentPath}\n    `);\n    this.setState({userAlert: \"adding user attachment item...\"})\n\n    const requestBody = {\n      query:`\n        mutation{updateUserAttachment(userId:\\\"${userId}\\\",selectedUserId:\\\"${userId}\\\",userInput:{attachmentName:\\\"${attachmentName}\\\",attachmentFormat:\\\"${attachmentFormat}\\\",attachmentPath:\\\"${attachmentPath}\\\"})\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `};\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data.updateUserAttachment));\n\n        const updatedUserId = resData.data.updateUserAttachment._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n        this.state.users.push(resData.data.updateUserAttachment);\n        this.context.users = this.state.users;\n        const responseAlert = JSON.stringify(resData.data).slice(2,25);\n        // this.setState({ userAlert: responseAlert})\n        this.getThisUser();\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n      });\n\n\n}\n\n\n  getThisUser() {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n      query {getThisUser\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `};\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"resdata...\" + JSON.stringify(resData));\n        const thisUser = resData.data.getThisUser;\n        if (this.isActive) {\n\n          this.setState({ user: thisUser, isLoading: false });\n\n          this.context.user = thisUser;\n          console.log(\"this.context.user:  \" + this.context.user.name);\n\n          sessionStorage.setItem('thisUser', JSON.stringify(thisUser));\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n\n  modalCancelHandler = () => {\n    this.setState({ updating: false  });\n  };\n\n\n  deleteUserAttendanceItem = (props) => {\n\n    let token = this.context.token;\n    let userId = this.context.userId;\n    let selectedUserId = this.state.selectedUser._id;\n    let date = new Date(props.date.substr(0,10)*1000).toISOString().slice(0,10);\n\n    console.log(`\n      delete user Attendance item:\n      props: ${JSON.stringify(props)},\n      token: ${token},\n      userId: ${userId},\n      selectedUserId: ${userId},\n      attandance date: ${date},\n      `);\n\n      const requestBody = {\n        query: `\n         mutation{deleteUserAttendance(userId:\\\"${userId}\\\",selectedUserId:\\\"${userId}\\\",attendanceDate:\\\"${date}\\\")\n         {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `};\n\n          // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n          fetch('http://localhost:10000/graphql', {\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: 'Bearer ' + token\n            }\n          })\n            .then(res => {\n              if (res.status !== 200 && res.status !== 201) {\n                throw new Error('Failed!');\n              }\n              return res.json();\n            })\n            .then(resData => {\n              let deletedUser = resData.data.deleteUserAttendance;\n              console.log(\"resData.data:  \",resData.data.deleteUserAttendance);\n\n              const updatedUserId = resData.data.deleteUserAttendance._id;\n              const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n              const updatedUserPos = this.state.users.indexOf(updatedUser);\n              const slicedArray = this.state.users.splice(updatedUserPos, 1);\n              console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n              this.state.users.push(resData.data.deleteUserAttendance);\n              this.context.users = this.state.users;\n              const responseAlert = JSON.stringify(resData.data).slice(2,25);\n              this.setState({ userAlert: responseAlert})\n              // this.setState({ userAlert: responseAlert, selectedUser: resData.data.deleteUserAttendance})\n              // this.fetchUsers();\n\n            })\n            .catch(err => {\n              console.log(err);\n            });\n  }\n\n  deleteUserLeaveItem = (props) => {\n\n    let token = this.context.token;\n    let userId = this.context.userId;\n\n    console.log(`\n      delete user Leave item:\n      props: ${JSON.stringify(props)},\n      token: ${token},\n      userId: ${userId},\n      selectedUserId: ${userId},\n      `);\n\n      const requestBody = {\n        query: `\n         mutation{deleteUserLeave(userId:\\\"${userId}\\\",selectedUserId:\\\"${userId}\\\",leaveTitle:\\\"${props.title}\\\")\n         {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `};\n\n          // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n          fetch('http://localhost:10000/graphql', {\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: 'Bearer ' + token\n            }\n          })\n            .then(res => {\n              if (res.status !== 200 && res.status !== 201) {\n                throw new Error('Failed!');\n              }\n              return res.json();\n            })\n            .then(resData => {\n              let deletedUser = resData.data.deleteUserLeave;\n              console.log(deletedUser);\n\n              const updatedUserId = resData.data.deleteUserLeave._id;\n              const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n              const updatedUserPos = this.state.users.indexOf(updatedUser);\n              const slicedArray = this.state.users.splice(updatedUserPos, 1);\n              console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n              this.state.users.push(resData.data.deleteUserLeave);\n              this.context.users = this.state.users;\n              const responseAlert = JSON.stringify(resData.data).slice(2,25);\n              this.setState({ userAlert: responseAlert})\n              // this.setState({ userAlert: responseAlert, selectedUser: resData.data.deleteUserLeave})\n\n            })\n            .catch(err => {\n              console.log(err);\n            });\n  }\n\n  deleteUserAttachmentItem = (props) => {\n\n    let token = this.context.token;\n    let userId = this.context.userId;\n\n    console.log(`\n      delete user Attachment item:\n      props: ${JSON.stringify(props)},\n      token: ${token},\n      userId: ${userId},\n      selectedUserId: ${userId},\n      `);\n\n      console.log(`\n        deleting from s3...\n        file.name: ${props.name},\n        `);\n\n      const config = {\n        bucketName: 'ent-emr-bucket',\n        dirName: props.path,\n        region: 'us-east-2',\n        accessKeyId: \"AKIARFTS6Q6DALQKT4QR\",\n        secretAccessKey: \"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\",\n      }\n      const ReactS3Client = new S3(config);\n      const filename = props.name;\n      // const attachmentName = newFileName;\n      //\n      S3FileUpload\n      .deleteFile(filename, config)\n      .then(response => console.log(response))\n      .catch(err => console.error(err))\n\n\n      const requestBody = {\n        query: `\n         mutation{deleteUserAttachment(userId:\\\"${userId}\\\",selectedUserId:\\\"${userId}\\\",attachmentName:\\\"${props.name}\\\")\n         {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `};\n\n          // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n          fetch('http://localhost:10000/graphql', {\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: 'Bearer ' + token\n            }\n          })\n            .then(res => {\n              if (res.status !== 200 && res.status !== 201) {\n                throw new Error('Failed!');\n              }\n              return res.json();\n            })\n            .then(resData => {\n              let deletedUser = resData.data.deleteUserAttachment;\n              console.log(deletedUser);\n\n              const updatedUserId = resData.data.deleteUserAttachment._id;\n              const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n              const updatedUserPos = this.state.users.indexOf(updatedUser);\n              const slicedArray = this.state.users.splice(updatedUserPos, 1);\n              console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n              this.state.users.push(resData.data.deleteUserAttachment);\n              this.context.users = this.state.users;\n              const responseAlert = JSON.stringify(resData.data).slice(2,25);\n              this.setState({ userAlert: responseAlert})\n              // this.setState({ userAlert: responseAlert, selectedUser: resData.data.deleteUserAttachment})\n\n            })\n            .catch(err => {\n              console.log(err);\n            });\n  }\n\n\n  updateUserSpecialProfile (event) {\n    console.log(\"special field to update:  \", event.target.value);\n    const field = event.target.value;\n    this.setState({ userUpdateField: field});\n  }\n\n  onViewAttachment = (attachment) => {\n    console.log(`\n      setting up attachment viewer...\n      attachment: ${JSON.stringify(attachment)}\n      `);\n      this.setState({showAttachment: true})\n\n      const file = \"https://ent-emr-bucket.s3-us-east-2.amazonaws.com/\"+attachment.path+\"/\"+attachment.name+\".\"+attachment.format;\n      const type = attachment.format;\n\n      this.setState({showThisAttachmentFile: file, showThisAttachmentType: type})\n  }\n\n  closeAttachmentView = () => {\n    console.log(`\n      closing attachment viewer...\n      `);\n      this.setState({showAttachment: false})\n  }\n\n  createPdf = (user) => {\n    console.log(`\n        creating pdf...\n        user: ${JSON.stringify(user)}\n      `);\n\n      const pdfData = {\n        title: user.name,\n        body: user.dob,\n      };\n\n    this.setState({createPdf: true, pdfData: pdfData})\n  }\n\n  closePdfCreator = () => {\n    console.log(`\n      closing pdf creator...\n      `);\n      this.setState({createPdf: false, pdfData: null})\n  }\n\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n\n      {this.state.showAttachment === true && (\n        <AttachmentViewer\n          onCloseAttachmentView={this.closeAttachmentView}\n          attachmentFile={this.state.showThisAttachmentFile}\n          attachmentType={this.state.showThisAttachmentType}\n        />\n      )}\n\n      {this.state.createPdf === true && (\n          <PdfCreator\n            pdfData={this.state.pdfData}\n            onClosePdfCreator={this.closePdfCreator}\n          />\n      )}\n\n      <Row>\n      <Col md={3} className=\"MasterCol1\">\n      <AlertBox\n        authUserId={this.context.userId}\n        alert={this.state.userAlert}\n      />\n      <SidebarPage\n        you={this.state.user}\n      />\n      </Col>\n\n      <Col md={9} className=\"MasterCol2\">\n        <Container className=\"containerProfile\">\n        <Tabs defaultActiveKey=\"Detail\" id=\"uncontrolled-tab-example2\">\n\n          <Tab eventKey=\"Detail\" title=\"Your Staff Data\">\n          {this.state.user !== null && (\n              <ThisUserProfile\n                user={this.state.user}\n                authUserId={this.context.userId}\n                canDelete={this.state.canDelete}\n                attendanceDelete={this.deleteUserAttendanceItem}\n                leaveDelete={this.deleteUserLeaveItem}\n                attachmentDelete={this.deleteUserAttachmentItem}\n                onViewAttachment={this.onViewAttachment}\n                onCreatePdf={this.createPdf}\n              />\n            )}\n          </Tab>\n\n          {\n          //   <Tab eventKey=\"\" title=\"Edit Your Data:\" disabled>\n          // </Tab>\n        }\n\n          <Tab eventKey=\"Demographics\" title=\"Edit Demographics\">\n          <Button variant=\"outline-primary\" className=\"confirmEditButton\" onClick={this.startUpdateUserHandler}>Demographics</Button>\n          {this.state.updating === true && (\n            <UpdateUserForm\n            canCancelProfile\n              canConfirm\n              onCancel={this.modalCancelHandler}\n              onConfirm={this.modalConfirmUpdateHandler}\n              confirmText=\"Confirm\"\n              user={this.state.user}\n              authUserId={this.context.userId}\n            />\n          )}\n          </Tab>\n\n          <Tab eventKey=\"userEditField\" title=\"Edit Single Field\">\n          {this.state.selectedUser === null && (\n            <Button variant=\"outline-warning\" size=\"lg\">\n              Select a Staff member from the Master List below\n            </Button>\n          )}\n          {this.state.selectedUser !== null && (\n            <Button variant=\"outline-primary\" className=\"confirmEditButton\" onClick={this.startUpdateUserHandler}>Edit Field</Button>\n          )}\n          {this.state.updating &&\n            this.state.selectedUser !== null\n            && (\n              <UpdateUserFieldForm\n                authUserId={this.context.userId}\n                canCancel\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.modalConfirmUpdateFieldHandler}\n                confirmText=\"Confirm\"\n                user={this.state.selectedUser}\n              />\n          )}\n          </Tab>\n\n          <Tab eventKey=\"Atttendance\" title=\"Add Atttendance\">\n            <Button variant=\"outline-primary\" className=\"confirmEditButton\" value='attendance' onClick={this.updateUserSpecialProfile.bind(this)}>Attendance</Button>\n            {this.state.userUpdateField === 'attendance' && (\n              <UpdateUserAttendanceForm\n              authUserId={this.context.userId}\n              canCancelProfile\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.updateUserAttendanceHandler}\n                confirmText=\"Confirm\"\n                user={this.state.selectedUser}\n              />\n            )}\n          </Tab>\n\n          <Tab eventKey=\"Leave\" title=\"Add Leave\">\n            <Button variant=\"outline-primary\" className=\"confirmEditButton\" value='leave' onClick={this.updateUserSpecialProfile.bind(this)}>Leave</Button>\n            {this.state.userUpdateField === 'leave' && (\n              <UpdateUserLeaveForm\n              authUserId={this.context.userId}\n              canCancelProfile\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.updateUserLeaveHandler}\n                confirmText=\"Confirm\"\n                user={this.state.selectedUser}\n              />\n            )}\n          </Tab>\n\n          <Tab eventKey=\"Attachment\" title=\"Add Attachment\">\n          <Button variant=\"outline-primary\" value='attachments' className=\"confirmEditButton\" onClick={this.updateUserSpecialProfile.bind(this)}>Attachment</Button>\n          {this.state.userUpdateField === 'attachments' && (\n            <UpdateUserAttachmentForm\n            authUserId={this.context.userId}\n            canCancelProfile\n              canConfirm\n              onCancel={this.modalCancelHandler}\n              onConfirm={this.updateUserAttachmentHandler}\n              confirmText=\"Confirm\"\n              user={this.state.selectedUser}\n            />\n          )}\n          </Tab>\n        </Tabs>\n        </Container>\n      </Col>\n      </Row>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ThisUserPage;\n"]},"metadata":{},"sourceType":"module"}