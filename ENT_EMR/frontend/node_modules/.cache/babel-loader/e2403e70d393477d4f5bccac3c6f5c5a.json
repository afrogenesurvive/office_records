{"ast":null,"code":"var _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/Users.js\";\nimport React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'; // import Form from 'react-bootstrap/Form';\n\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion'; // import Modal from '../components/Modal/Modal';\n// import Backdrop from '../components/Backdrop/Backdrop';\n\nimport UserList from '../components/Users/UserList/UserList';\nimport SearchUserList from '../components/Users/UserList/SearchUserList';\nimport UserDetail from '../components/Users/UserDetail';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport CreateUserForm from '../components/Forms/CreateUserForm';\nimport UpdateUserForm from '../components/Forms/UpdateUserForm';\nimport UpdateUserAttendanceForm from '../components/Forms/UpdateUserAttendanceForm';\nimport SearchUserForm from '../components/Forms/SearchUserForm';\nimport './Users.css';\n\nclass UsersPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      creating: false,\n      updating: false,\n      deleting: false,\n      searching: false,\n      users: [],\n      searchUsers: [],\n      isLoading: false,\n      selectedUser: null,\n      userUpdateField: null\n    };\n    this.isActive = true;\n\n    this.startCreateUserHandler = () => {\n      this.setState({\n        creating: true\n      });\n      console.log(\"CreateUserForm...\");\n    };\n\n    this.startUpdateUserHandler = () => {\n      this.setState({\n        updating: true\n      });\n      console.log(\"UpdateUserForm...\");\n    };\n\n    this.startSearchUserHandler = () => {\n      this.setState({\n        searching: true\n      });\n      console.log(\"SearchUserForm...\");\n    };\n\n    this.modalConfirmHandler = event => {\n      console.log(\"CreateUserFormData:  \", event.target.formGridEmail.value);\n      this.setState({\n        creating: false\n      });\n      const email = event.target.formGridEmail.value;\n      const password = event.target.formGridPassword.value;\n      const name = event.target.formGridName.value;\n      const role = event.target.formGridRole.value;\n      const employmentDate = event.target.formGridEmploymentDate.value;\n      const terminationDate = event.target.formGridTerminationDate.value;\n\n      if (email.trim().length === 0 || password.trim().length === 0 || name.trim().length === 0 || role.trim().length === 0 || employmentDate.trim().length === 0 || terminationDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...Please try again...\");\n        return;\n      }\n\n      const token = this.context.token;\n      const userId = this.context.userId;\n      const user = {\n        email,\n        password,\n        name,\n        role,\n        employmentDate,\n        terminationDate\n      };\n      console.log(\"\\n      creating user...\\n      userId: \".concat(userId, \"\\n      email: \").concat(email, \",\\n      password: \").concat(password, \",\\n      name: \").concat(name, \",\\n      role: \").concat(role, \",\\n      employmentDate: \").concat(employmentDate, \",\\n      terminationDate: \").concat(terminationDate, \"\\n      \"));\n      const requestBody = {\n        query: \"\\n          mutation {\\n            createUser(userInput: {email:\\\"\".concat(email, \"\\\",password:\\\"\").concat(password, \"\\\",name:\\\"\").concat(name, \"\\\",role:\\\"\").concat(role, \"\\\",employmentDate:\\\"\").concat(employmentDate, \"\\\",terminationDate:\\\"\").concat(terminationDate, \"\\\"}) {\\n              _id\\n              name\\n              email\\n              role\\n              employmentDate\\n              terminationDate\\n              attendance{\\n                date\\n                status\\n                description}\\n                attachments{\\n                  name\\n                  format\\n                  path}\\n              leave{\\n                type\\n                startDate\\n                endDate}\\n            }\\n          }\\n        \")\n      };\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"create user response data... \" + JSON.stringify(resData.data.createUser));\n        this.setState(prevState => {\n          const updatedUsers = [...prevState.users];\n          updatedUsers.push(resData.data.createUser);\n          return {\n            users: updatedUsers\n          };\n        });\n        this.context.users = this.state.users;\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.modalConfirmUpdateHandler = event => {\n      let userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id;\n\n      if (userId !== selectedUserId && this.context.user.role !== 'admin') {\n        console.log(\"Not the creator or Admin! No edit permission!!\");\n        selectedUserId = null;\n      }\n\n      console.log(\"UpdateUserFormData:  \", event.target.formGridEmail.value);\n      this.setState({\n        updating: false\n      });\n      let email = event.target.formGridEmail.value;\n      let password = event.target.formGridPassword.value;\n      let name = event.target.formGridName.value;\n      let role = event.target.formGridRole.value;\n\n      if (email.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        email = this.context.selectedUser.email; // return;\n      }\n\n      if (password.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        password = this.context.selectedUser.password;\n      }\n\n      if (name.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        name = this.context.selectedUser.name;\n      }\n\n      if (role.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        role = this.context.selectedUser.role;\n      }\n\n      const user = {\n        email,\n        password,\n        name,\n        role\n      };\n      console.log(\"updating user.. \" + JSON.stringify(user));\n      const requestBody = {\n        query: \"\\n          mutation UpdateUser($userId: ID!, $selectedUserId: ID!, $email: String!, $password: String!, $name: String!, $role: String!) {\\n            updateUser(userId: $userId, selectedUserId: $selectedUserId, userInput: {email: $email, password: $password, name: $name, role: $role}) {\\n              _id\\n              email\\n              password\\n              name\\n              role\\n            }\\n          }\\n        \",\n        variables: {\n          userId: userId,\n          selectedUserId: selectedUserId,\n          email: email,\n          password: password,\n          name: name,\n          role: role\n        }\n      };\n      const token = this.context.token;\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const updatedUserId = resData.data.updateUser._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push({\n          _id: resData.data.updateUser._id,\n          email: resData.data.updateUser.email,\n          name: resData.data.updateUser.name,\n          role: resData.data.updateUser.role\n        });\n        this.context.users = this.state.users;\n        this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.modalConfirmSearchHandler = event => {\n      console.log(\"SearchUserForm:  \");\n      let userId = this.context.userId;\n      console.log(\"SearchUserFormData:  \", event.target.formBasicField.value);\n      this.setState({\n        searching: false\n      });\n      let field = event.target.formBasicField.value;\n      let query = event.target.formBasicQuery.value;\n\n      if (field.trim().length === 0 || query.trim().length === 0) {\n        console.log(\"blank fields detected!!!...Please try again...\");\n        return;\n      }\n\n      const search = {\n        field,\n        query\n      };\n      console.log(\"Searching for User:  \", JSON.stringify(search));\n      const requestBody = {\n        query: \"\\n          query getUserField($userId: ID!, $field: String!, $query: String!)\\n          {getUserField(userId: $userId, field: $field, query: $query ){\\n            _id\\n            name\\n            email\\n            role\\n          }\\n        }\\n        \",\n        variables: {\n          userId: userId,\n          field: field,\n          query: query\n        }\n      };\n      const token = this.context.token;\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const searchUsers = resData.data.getUserField;\n        this.setState({\n          searchUsers: searchUsers\n        });\n        console.log(\"state.searchUsers:  \", this.state.searchUsers); // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.modalCancelHandler = () => {\n      this.setState({\n        creating: false,\n        updating: false,\n        deleting: false,\n        searching: false,\n        selectedUser: null\n      });\n    };\n\n    this.modalDeleteHandler = () => {\n      console.log(\"deleting user...selectedUser:  \", this.context.selectedUser);\n      const selectedUserId = this.context.selectedUser._id;\n\n      if (this.context.user.role !== 'admin') {\n        console.log(\"Not the Admin! No edit permission!!\");\n      }\n\n      this.setState({\n        deleting: true\n      });\n      const requestBody = {\n        query: \"\\n        mutation DeleteUser($userId: ID!, $selectedUserId: ID!) {\\n          deleteUser(userId: $userId, selectedUserId: $selectedUserId) {\\n            _id\\n            email\\n            password\\n            name\\n            role\\n          }\\n        }\\n      \",\n        variables: {\n          userId: this.context.userId,\n          selectedUserId: selectedUserId\n        }\n      };\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.context.token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        let deletedUser = resData.data.deleteUser;\n        console.log(deletedUser);\n        let deletedUserId = deletedUser._id;\n        deletedUser = this.state.users.find(e => e._id === deletedUserId);\n        const deletedUserPos = this.state.users.indexOf(deletedUser);\n        const slicedArray = this.state.users.splice(deletedUserPos, 1);\n        console.log(\"deletedUser:  \", JSON.stringify(deletedUser), \"  deletedUserPos:  \", deletedUserPos, \"  slicedArray:  \", slicedArray);\n        this.setState({\n          deleting: false,\n          selectedUser: null\n        });\n        this.context.selectedUser = null;\n        this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n\n        if (this.isActive) {\n          this.setState({\n            deleting: false\n          });\n        }\n      });\n    };\n\n    this.showDetailHandler = userId => {\n      this.setState(prevState => {\n        const selectedUser = prevState.users.find(e => e._id === userId);\n        this.context.selectedUser = selectedUser;\n        this.setState({\n          selectedUser: selectedUser\n        });\n        console.log(\"User selected  :  \", selectedUser);\n        return {\n          selectedUser: selectedUser\n        };\n      });\n    };\n\n    this.emailElRef = React.createRef();\n    this.passwordElRef = React.createRef();\n    this.nameElRef = React.createRef();\n    this.roleElRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n  }\n\n  fetchUsers() {\n    console.log(\"'fetch users function' context object... \" + JSON.stringify(this.context));\n    const userId = this.context.userId;\n    this.setState({\n      isLoading: true\n    });\n    const requestBody = {\n      query: \"\\n          query users($userId: ID!) {\\n            users(userId: $userId) {\\n              _id\\n              email\\n              password\\n              name\\n              role\\n            }\\n          }\\n        \",\n      variables: {\n        userId: userId\n      }\n    };\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n\n      return res.json();\n    }).then(resData => {\n      const users = resData.data.users;\n      console.log(users);\n\n      if (this.isActive) {\n        this.setState({\n          users: users,\n          isLoading: false\n        });\n      }\n\n      this.context.users = this.state.users;\n    }).catch(err => {\n      console.log(err);\n\n      if (this.isActive) {\n        this.setState({\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  updateUserSpecial(event) {\n    console.log(\"special field to update:  \", event.target.value);\n    const field = event.target.value;\n    this.setState({\n      userUpdateField: field\n    });\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, React.createElement(Accordion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"containerUserDetail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"createUserRowAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      className: \"createUserColAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, \"Staff Detail\")), React.createElement(Col, {\n      md: 6,\n      className: \"createUserColAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"4\",\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, \"Examine\"))), React.createElement(Accordion.Collapse, {\n      eventKey: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"createUserRowForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 11,\n      className: \"createUserColForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, this.state.isLoading === false && React.createElement(UserDetail, {\n      authUserId: this.context.userId,\n      user: this.state.selectedUser,\n      onEdit: this.startUpdateUserHandler,\n      onDelete: this.modalDeleteHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }))))), React.createElement(Container, {\n      className: \"containerCreateUpdate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"createUserRowAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      className: \"createUserColAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }, \"Add New Staff\")), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, this.context.token && React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      className: \"btn\",\n      onClick: this.startCreateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, \"Add\"))), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"createUserRowForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 11,\n      className: \"createUserColForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546\n      },\n      __self: this\n    }, this.state.creating && React.createElement(CreateUserForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmHandler,\n      onSubmit: this.modalConfirmHandler,\n      confirmText: \"Confirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      className: \"updateUserRowAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      className: \"updateUserCol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, \"Edit Selected Staff\")), React.createElement(Col, {\n      md: 4,\n      className: \"updateUserCol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, this.context.token && React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"1\",\n      className: \"btn\",\n      onClick: this.startUpdateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, \"Basic Info & Demographics\"))), React.createElement(Row, {\n      className: \"createUserRowAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 3,\n      className: \"updateUserCol2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }, \"Edit Selected Staff\")), React.createElement(Col, {\n      md: 9,\n      className: \"updateUserCol2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }, this.context.token && React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"2\",\n      className: \"btn\",\n      value: \"attendance\",\n      onClick: this.updateUserSpecial.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }, \"Attendance\"), this.context.token && React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"2\",\n      className: \"btn\",\n      value: \"leave\",\n      onClick: this.updateUserSpecial.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }, \"Leave\"), this.context.token && React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"2\",\n      className: \"btn\",\n      value: \"attachments\",\n      onClick: this.updateUserSpecial.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    }, \"Attachments\"))), React.createElement(Accordion.Collapse, {\n      eventKey: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"updateUserRowForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 10,\n      className: \"updateUserColForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }, this.state.updating && React.createElement(UpdateUserForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmUpdateHandler,\n      confirmText: \"Confirm\",\n      user: this.context.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    })))), React.createElement(Accordion.Collapse, {\n      eventKey: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"updateUserRowForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 10,\n      className: \"updateUserColForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }, this.state.userUpdateField === 'attendance' && React.createElement(UpdateUserAttendanceForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserAttendanceHandler,\n      confirmText: \"Confirm\",\n      user: this.context.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622\n      },\n      __self: this\n    }), this.state.userUpdateField === 'leave' && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, \"add leave form\"), this.state.userUpdateField === 'attachments' && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }, \"add attachments form\"))))), React.createElement(Container, {\n      className: \"containerSearchuser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"searchUserRowAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      className: \"searchUserColAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649\n      },\n      __self: this\n    }, \"Search for a User\")), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651\n      },\n      __self: this\n    }, this.context.token && React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"3\",\n      className: \"btn\",\n      onClick: this.startSearchUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653\n      },\n      __self: this\n    }, \"Search\"))), React.createElement(Accordion.Collapse, {\n      eventKey: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"searchUserRowForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 10,\n      className: \"searchUserColForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662\n      },\n      __self: this\n    }, this.state.searching === true && React.createElement(SearchUserForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmSearchHandler,\n      confirmText: \"Search\",\n      user: this.context.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676\n      },\n      __self: this\n    })))), React.createElement(Accordion.Collapse, {\n      eventKey: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"containerSearchuser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"searchListRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685\n      },\n      __self: this\n    }, this.state.searchUsers !== [] && React.createElement(SearchUserList, {\n      searchUsers: this.state.searchUsers,\n      authUserId: this.context.userId,\n      onCancel: this.modalCancelHandler,\n      onViewDetail: this.showDetailHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688\n      },\n      __self: this\n    })))), React.createElement(Container, {\n      className: \"containerSearchuser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"searchListRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    }, this.state.isLoading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703\n      },\n      __self: this\n    }) : React.createElement(UserList, {\n      users: this.state.users,\n      authUserId: this.context.userId,\n      onViewDetail: this.showDetailHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nUsersPage.contextType = AuthContext;\nexport default UsersPage;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/Users.js"],"names":["React","Component","Container","Row","Col","Button","Accordion","UserList","SearchUserList","UserDetail","Spinner","AuthContext","CreateUserForm","UpdateUserForm","UpdateUserAttendanceForm","SearchUserForm","UsersPage","constructor","props","state","creating","updating","deleting","searching","users","searchUsers","isLoading","selectedUser","userUpdateField","isActive","startCreateUserHandler","setState","console","log","startUpdateUserHandler","startSearchUserHandler","modalConfirmHandler","event","target","formGridEmail","value","email","password","formGridPassword","name","formGridName","role","formGridRole","employmentDate","formGridEmploymentDate","terminationDate","formGridTerminationDate","trim","length","token","context","userId","user","requestBody","query","fetch","method","body","JSON","stringify","headers","Authorization","then","res","status","Error","json","resData","data","createUser","prevState","updatedUsers","push","catch","err","modalConfirmUpdateHandler","selectedUserId","_id","variables","updatedUserId","updateUser","updatedUser","find","e","updatedUserPos","indexOf","slicedArray","splice","fetchUsers","modalConfirmSearchHandler","formBasicField","field","formBasicQuery","search","getUserField","modalCancelHandler","modalDeleteHandler","deletedUser","deleteUser","deletedUserId","deletedUserPos","showDetailHandler","emailElRef","createRef","passwordElRef","nameElRef","roleElRef","componentDidMount","updateUserSpecial","componentWillUnmount","render","bind","updateUserAttendanceHandler","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\n\n// import Modal from '../components/Modal/Modal';\n// import Backdrop from '../components/Backdrop/Backdrop';\nimport UserList from '../components/Users/UserList/UserList';\nimport SearchUserList from '../components/Users/UserList/SearchUserList';\nimport UserDetail from '../components/Users/UserDetail';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\n\nimport CreateUserForm from '../components/Forms/CreateUserForm';\nimport UpdateUserForm from '../components/Forms/UpdateUserForm';\nimport UpdateUserAttendanceForm from '../components/Forms/UpdateUserAttendanceForm';\nimport SearchUserForm from '../components/Forms/SearchUserForm';\nimport './Users.css';\n\nclass UsersPage extends Component {\n  state = {\n    creating: false,\n    updating: false,\n    deleting: false,\n    searching: false,\n    users: [],\n    searchUsers: [],\n    isLoading: false,\n    selectedUser: null,\n    userUpdateField: null,\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.emailElRef = React.createRef();\n    this.passwordElRef = React.createRef();\n    this.nameElRef = React.createRef();\n    this.roleElRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n  }\n\n\n  startCreateUserHandler = () => {\n    this.setState({ creating: true });\n    console.log(\"CreateUserForm...\");\n  };\n  startUpdateUserHandler = () => {\n    this.setState({ updating: true });\n    console.log(\"UpdateUserForm...\");\n  };\n  // startUpdateUserHandler = () => {\n  //   this.setState({ deleting: true });\n  //   console.log(\"UpdateUserForm...\");\n  //\n  // };\n\n  startSearchUserHandler = () => {\n    this.setState({ searching: true });\n    console.log(\"SearchUserForm...\");\n  };\n\n  modalConfirmHandler = (event) => {\n\n    console.log(\"CreateUserFormData:  \", event.target.formGridEmail.value);\n\n    this.setState({ creating: false });\n    const email = event.target.formGridEmail.value;\n    const password = event.target.formGridPassword.value;\n    const name = event.target.formGridName.value;\n    const role = event.target.formGridRole.value;\n    const employmentDate = event.target.formGridEmploymentDate.value;\n    const terminationDate = event.target.formGridTerminationDate.value;\n\n    if (\n      email.trim().length === 0 ||\n      password.trim().length === 0 ||\n      name.trim().length === 0 ||\n      role.trim().length === 0 ||\n      employmentDate.trim().length === 0 ||\n      terminationDate.trim().length === 0\n    ) {\n      console.log(\"blank fields detected!!!...Please try again...\");\n      return;\n    }\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n    const user = { email, password, name, role, employmentDate, terminationDate };\n\n    console.log(`\n      creating user...\n      userId: ${userId}\n      email: ${email},\n      password: ${password},\n      name: ${name},\n      role: ${role},\n      employmentDate: ${employmentDate},\n      terminationDate: ${terminationDate}\n      `);\n\n    const requestBody = {\n      query: `\n          mutation {\n            createUser(userInput: {email:\"${email}\",password:\"${password}\",name:\"${name}\",role:\"${role}\",employmentDate:\"${employmentDate}\",terminationDate:\"${terminationDate}\"}) {\n              _id\n              name\n              email\n              role\n              employmentDate\n              terminationDate\n              attendance{\n                date\n                status\n                description}\n                attachments{\n                  name\n                  format\n                  path}\n              leave{\n                type\n                startDate\n                endDate}\n            }\n          }\n        `\n    };\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"create user response data... \" + JSON.stringify(resData.data.createUser));\n        this.setState(prevState => {\n          const updatedUsers = [...prevState.users];\n          updatedUsers.push(resData.data.createUser);\n\n          return { users: updatedUsers };\n        });\n        this.context.users = this.state.users;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n\n  modalConfirmUpdateHandler = (event) => {\n\n    let userId = this.context.userId;\n    let selectedUserId = this.context.selectedUser._id;\n    if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n\n      console.log(\"Not the creator or Admin! No edit permission!!\");\n      selectedUserId = null;\n    }\n\n    console.log(\"UpdateUserFormData:  \", event.target.formGridEmail.value);\n\n    this.setState({ updating: false });\n    let email = event.target.formGridEmail.value;\n    let password = event.target.formGridPassword.value;\n    let name = event.target.formGridName.value;\n    let role = event.target.formGridRole.value;\n\n    if (email.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      email  = this.context.selectedUser.email;\n      // return;\n    }\n    if (password.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      password = this.context.selectedUser.password;\n    }\n    if (name.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      name  = this.context.selectedUser.name;\n    }\n    if (role.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      role  = this.context.selectedUser.role;\n    }\n\n\n    const user = { email, password, name, role };\n    console.log(\"updating user.. \" + JSON.stringify(user));\n\n    const requestBody = {\n      query: `\n          mutation UpdateUser($userId: ID!, $selectedUserId: ID!, $email: String!, $password: String!, $name: String!, $role: String!) {\n            updateUser(userId: $userId, selectedUserId: $selectedUserId, userInput: {email: $email, password: $password, name: $name, role: $role}) {\n              _id\n              email\n              password\n              name\n              role\n            }\n          }\n        `,\n        variables: {\n          userId: userId,\n          selectedUserId: selectedUserId,\n          email: email,\n          password: password,\n          name: name,\n          role: role\n        }\n    };\n\n    const token = this.context.token;\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n\n        const updatedUserId = resData.data.updateUser._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n        this.state.users.push(\n          {\n              _id: resData.data.updateUser._id,\n              email: resData.data.updateUser.email,\n              name: resData.data.updateUser.name,\n              role: resData.data.updateUser.role\n            }\n        );\n        this.context.users = this.state.users;\n        this.fetchUsers();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n\n  modalConfirmSearchHandler = (event) => {\n    console.log(\"SearchUserForm:  \");\n\n\n    let userId = this.context.userId;\n\n      console.log(\"SearchUserFormData:  \", event.target.formBasicField.value);\n      this.setState({ searching: false });\n\n      let field = event.target.formBasicField.value;\n      let query = event.target.formBasicQuery.value;\n\n      if (\n        field.trim().length === 0 ||\n        query.trim().length === 0\n      ) {\n        console.log(\"blank fields detected!!!...Please try again...\");\n        return;\n      }\n\n      const search = { field, query }\n      console.log(\"Searching for User:  \", JSON.stringify(search));\n\n      const requestBody = {\n        query: `\n          query getUserField($userId: ID!, $field: String!, $query: String!)\n          {getUserField(userId: $userId, field: $field, query: $query ){\n            _id\n            name\n            email\n            role\n          }\n        }\n        `,\n        variables: {\n          userId: userId,\n          field: field,\n          query: query\n        }\n      }\n\n      const token = this.context.token;\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData));\n\n          const searchUsers = resData.data.getUserField;\n\n          this.setState({ searchUsers: searchUsers})\n          console.log(\"state.searchUsers:  \", this.state.searchUsers);\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n        });\n  }\n\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, updating: false, deleting: false, searching: false, selectedUser: null });\n  };\n\n  fetchUsers() {\n    console.log(\"'fetch users function' context object... \" + JSON.stringify(this.context));\n    const userId = this.context.userId;\n\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query users($userId: ID!) {\n            users(userId: $userId) {\n              _id\n              email\n              password\n              name\n              role\n            }\n          }\n        `,\n        variables: {\n          userId: userId\n        }\n    };\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const users = resData.data.users;\n        console.log(users);\n\n        if (this.isActive) {\n          this.setState({ users: users, isLoading: false });\n        }\n        this.context.users = this.state.users;\n      })\n      .catch(err => {\n        console.log(err);\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\nmodalDeleteHandler = () => {\n  console.log(\"deleting user...selectedUser:  \", this.context.selectedUser);\n\n  const selectedUserId = this.context.selectedUser._id;\n\n  if(this.context.user.role !== 'admin') {\n    console.log(\"Not the Admin! No edit permission!!\");\n  }\n\n  this.setState({deleting: true});\n\n  const requestBody = {\n    query: `\n        mutation DeleteUser($userId: ID!, $selectedUserId: ID!) {\n          deleteUser(userId: $userId, selectedUserId: $selectedUserId) {\n            _id\n            email\n            password\n            name\n            role\n          }\n        }\n      `,\n      variables: {\n        userId: this.context.userId,\n        selectedUserId: selectedUserId\n      }\n  };\n\n  fetch('http://localhost:10000/graphql', {\n    method: 'POST',\n    body: JSON.stringify(requestBody),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.context.token\n    }\n  })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      let deletedUser = resData.data.deleteUser;\n      console.log(deletedUser);\n\n      let deletedUserId = deletedUser._id;\n      deletedUser = this.state.users.find(e => e._id === deletedUserId);\n      const deletedUserPos = this.state.users.indexOf(deletedUser);\n      const slicedArray = this.state.users.splice(deletedUserPos, 1);\n      console.log(\"deletedUser:  \", JSON.stringify(deletedUser),\"  deletedUserPos:  \", deletedUserPos, \"  slicedArray:  \", slicedArray);\n\n      this.setState({ deleting: false, selectedUser: null });\n      this.context.selectedUser = null;\n\n      this.fetchUsers();\n\n    })\n    .catch(err => {\n      console.log(err);\n      if (this.isActive) {\n        this.setState({ deleting: false });\n      }\n    });\n\n\n}\n\nupdateUserSpecial (event) {\n\n  console.log(\"special field to update:  \", event.target.value);\n  const field = event.target.value;\n  this.setState({ userUpdateField: field});\n\n}\n\n  showDetailHandler = userId => {\n\n    this.setState(prevState => {\n      const selectedUser = prevState.users.find(e => e._id === userId);\n      this.context.selectedUser = selectedUser;\n      this.setState({selectedUser: selectedUser});\n      console.log(\"User selected  :  \", selectedUser);\n      return { selectedUser: selectedUser };\n    });\n  };\n\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n\n    <React.Fragment>\n\n    <Accordion>\n\n    <Container className=\"containerUserDetail\">\n\n    <Row className=\"createUserRowAdd\">\n    <Col md={4} className=\"createUserColAdd\">\n    <p>Staff Detail</p>\n    </Col>\n    <Col md={6} className=\"createUserColAdd\">\n    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"4\" className=\"btn\">\n    Examine\n    </Accordion.Toggle>\n    </Col>\n    </Row>\n\n    <Accordion.Collapse eventKey=\"4\">\n    <Row className=\"createUserRowForm\">\n    <Col md={11} className=\"createUserColForm\">\n    {this.state.isLoading === false &&\n      (<UserDetail\n        authUserId={this.context.userId}\n        user={this.state.selectedUser}\n        onEdit={this.startUpdateUserHandler}\n        onDelete={this.modalDeleteHandler}\n    />)}\n    </Col>\n    </Row>\n    </Accordion.Collapse>\n\n    </Container>\n\n    <Container className=\"containerCreateUpdate\">\n\n    <Row className=\"createUserRowAdd\">\n    <Col md={4} className=\"createUserColAdd\">\n    <p>Add New Staff</p>\n    </Col>\n    <Col md={8}>\n    {this.context.token && (\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" className=\"btn\" onClick={this.startCreateUserHandler}>\n      Add\n      </Accordion.Toggle>\n    )}\n    </Col>\n    </Row>\n\n    <Accordion.Collapse eventKey=\"0\">\n    <Row className=\"createUserRowForm\">\n    <Col md={11} className=\"createUserColForm\">\n    {this.state.creating && (\n      <CreateUserForm\n      authUserId={this.context.userId}\n      canCancel\n        canConfirm\n        onCancel={this.modalCancelHandler}\n        onConfirm={this.modalConfirmHandler}\n        onSubmit={this.modalConfirmHandler}\n        confirmText=\"Confirm\"\n      />\n    )}\n    </Col>\n    </Row>\n    </Accordion.Collapse>\n\n    <Row className=\"updateUserRowAdd\">\n    <Col md={4} className=\"updateUserCol\">\n    <p>Edit Selected Staff</p>\n    </Col>\n    <Col md={4} className=\"updateUserCol\">\n    {this.context.token && (\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\" className=\"btn\" onClick={this.startUpdateUserHandler}>\n      Basic Info & Demographics\n      </Accordion.Toggle>\n    )}\n    </Col>\n    </Row>\n\n\n\n    <Row className=\"createUserRowAdd\">\n    <Col md={3} className=\"updateUserCol2\">\n    <p>Edit Selected Staff</p>\n    </Col>\n    <Col md={9} className=\"updateUserCol2\">\n    {this.context.token && (\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\" className=\"btn\" value='attendance' onClick={this.updateUserSpecial.bind(this)}>\n      Attendance\n      </Accordion.Toggle>\n    )}\n    {this.context.token && (\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\" className=\"btn\" value='leave' onClick={this.updateUserSpecial.bind(this)}>\n      Leave\n      </Accordion.Toggle>\n    )}\n    {this.context.token && (\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\" className=\"btn\" value='attachments' onClick={this.updateUserSpecial.bind(this)}>\n      Attachments\n      </Accordion.Toggle>\n    )}\n    </Col>\n    </Row>\n\n    <Accordion.Collapse eventKey=\"1\">\n    <Row className=\"updateUserRowForm\">\n    <Col md={10} className=\"updateUserColForm\">\n    {this.state.updating && (\n      <UpdateUserForm\n      authUserId={this.context.userId}\n      canCancel\n        canConfirm\n        onCancel={this.modalCancelHandler}\n        onConfirm={this.modalConfirmUpdateHandler}\n        confirmText=\"Confirm\"\n        user={this.context.selectedUser}\n      />\n    )}\n    </Col>\n    </Row>\n    </Accordion.Collapse>\n\n    <Accordion.Collapse eventKey=\"2\">\n    <Row className=\"updateUserRowForm\">\n    <Col md={10} className=\"updateUserColForm\">\n    {this.state.userUpdateField === 'attendance' && (\n      <UpdateUserAttendanceForm\n      authUserId={this.context.userId}\n      canCancel\n        canConfirm\n        onCancel={this.modalCancelHandler}\n        onConfirm={this.updateUserAttendanceHandler}\n        confirmText=\"Confirm\"\n        user={this.context.selectedUser}\n      />\n    )}\n    {this.state.userUpdateField === 'leave' && (\n        <p>add leave form</p>\n    )}\n    {this.state.userUpdateField === 'attachments' && (\n        <p>add attachments form</p>\n    )}\n    </Col>\n    </Row>\n    </Accordion.Collapse>\n\n    </Container>\n\n\n\n  <Container className=\"containerSearchuser\">\n  <Row className=\"searchUserRowAdd\">\n  <Col md={4} className=\"searchUserColAdd\">\n  <p>Search for a User</p>\n  </Col>\n  <Col md={8}>\n    {this.context.token && (\n    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\" className=\"btn\" onClick={this.startSearchUserHandler}>\n    Search\n    </Accordion.Toggle>\n    )}\n  </Col>\n  </Row>\n\n  <Accordion.Collapse eventKey=\"3\">\n  <Row className=\"searchUserRowForm\">\n  <Col md={10} className=\"searchUserColForm\">\n  {\n    this.state.searching === true &&\n    <SearchUserForm\n    authUserId={this.context.userId}\n    canCancel\n      canConfirm\n      onCancel={this.modalCancelHandler}\n      onConfirm={this.modalConfirmSearchHandler}\n      confirmText=\"Search\"\n      user={this.context.selectedUser}\n    />\n  }\n  </Col>\n  <Col md={10}>\n\n  </Col>\n  </Row>\n  </Accordion.Collapse>\n  </Container>\n\n  <Accordion.Collapse eventKey=\"3\">\n  <Container className=\"containerSearchuser\">\n  <Row className=\"searchListRow\">\n  {\n    this.state.searchUsers !== [] &&\n    <SearchUserList\n      searchUsers={this.state.searchUsers}\n      authUserId={this.context.userId}\n      onCancel={this.modalCancelHandler}\n        onViewDetail={this.showDetailHandler}\n    />\n  }\n  </Row>\n  </Container>\n  </Accordion.Collapse>\n\n<Container className=\"containerSearchuser\">\n<Row className=\"searchListRow\">\n\n{this.state.isLoading ? (\n  <Spinner />\n) : (\n  <UserList\n    users={this.state.users}\n    authUserId={this.context.userId}\n    onViewDetail={this.showDetailHandler}\n  />\n)}\n\n</Row>\n</Container>\n</Accordion>\n</React.Fragment>\n    );\n  }\n}\n\nexport default UsersPage;\n"]},"metadata":{},"sourceType":"module"}