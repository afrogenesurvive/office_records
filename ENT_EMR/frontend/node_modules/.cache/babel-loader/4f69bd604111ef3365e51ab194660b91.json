{"ast":null,"code":"var _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/Users.js\";\nimport React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'; // import Form from 'react-bootstrap/Form';\n\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Card from 'react-bootstrap/Card'; // import Modal from '../components/Modal/Modal';\n// import Backdrop from '../components/Backdrop/Backdrop';\n\nimport UserList from '../components/Users/UserList/UserList';\nimport SearchUserList from '../components/Users/UserList/SearchUserList';\nimport UserDetail from '../components/Users/UserDetail';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport SidebarPage from './Sidebar';\nimport CreateUserForm from '../components/Forms/CreateUserForm';\nimport UpdateUserForm from '../components/Forms/UpdateUserForm';\nimport UpdateUserFieldForm from '../components/Forms/UpdateUserFieldForm';\nimport UpdateUserAttendanceForm from '../components/Forms/UpdateUserAttendanceForm';\nimport UpdateUserAttachmentForm from '../components/Forms/UpdateUserAttachmentForm';\nimport UpdateUserLeaveForm from '../components/Forms/UpdateUserLeaveForm';\nimport SearchUserForm from '../components/Forms/SearchUserForm';\nimport SearchUserIdForm from '../components/Forms/SearchUserIdForm';\nimport SearchUserAttendanceDateForm from '../components/Forms/SearchUserAttendanceDateForm';\nimport SearchUserLeaveDateRangeForm from '../components/Forms/SearchUserLeaveDateRangeForm';\nimport './Users.css';\n\nclass UsersPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      creating: false,\n      updating: false,\n      deleting: false,\n      searching: false,\n      users: [],\n      searchUsers: [],\n      isLoading: false,\n      selectedUser: null,\n      userUpdateField: null,\n      userSearchField: null,\n      userSearchQuery: null,\n      canDelete: null\n    };\n    this.isActive = true;\n\n    this.startCreateUserHandler = () => {\n      this.setState({\n        creating: true\n      });\n      console.log(\"CreateUserForm...\");\n    };\n\n    this.startUpdateUserHandler = () => {\n      this.setState({\n        updating: true\n      });\n      console.log(\"UpdateUserForm...\");\n    };\n\n    this.startSearchUserHandler = () => {\n      this.setState({\n        searching: true\n      });\n      console.log(\"SearchUserForm...\");\n    };\n\n    this.modalConfirmHandler = event => {\n      console.log(\"CreateUserFormData:  \", event.target.formGridEmail.value);\n      this.setState({\n        creating: false\n      });\n      const email = event.target.formGridEmail.value;\n      const password = event.target.formGridPassword.value;\n      const name = event.target.formGridName.value;\n      const role = event.target.formGridRole.value;\n      let dob = event.target.formGridDob.value;\n      let phone = event.target.formGridPhone.value;\n      let addressNumber = event.target.formGridAddressNumber.value;\n      let addressStreet = event.target.formGridAddressStreet.value;\n      let addressTown = event.target.formGridAddressTown.value;\n      let addressParish = event.target.formGridAddressParish.value;\n      let addressPostOffice = event.target.formGridAddressPostOffice.value;\n      let employmentDate = event.target.formGridEmploymentDate.value;\n      let terminationDate = event.target.formGridTerminationDate.value;\n\n      if (email.trim().length === 0 || password.trim().length === 0 || name.trim().length === 0 || role.trim().length === 0 || dob.trim().length === 0 || phone.trim().length === 0 || addressNumber.trim().length === 0 || addressStreet.trim().length === 0 || addressTown.trim().length === 0 || addressParish.trim().length === 0 || addressPostOffice.trim().length === 0 || employmentDate.trim().length === 0 || terminationDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...Please try again...\");\n        return;\n      }\n\n      const token = this.context.token;\n      const userId = this.context.userId;\n      const user = {\n        email,\n        password,\n        name,\n        role,\n        dob,\n        phone,\n        addressNumber,\n        addressStreet,\n        addressTown,\n        addressParish,\n        addressPostOffice,\n        employmentDate,\n        terminationDate\n      };\n      console.log(`\n      creating user...\n      userId: ${userId}\n      email: ${email},\n      password: ${password},\n      name: ${name},\n      role: ${role},\n      dob: ${dob},\n      phone: ${phone},\n      addressNumber: ${addressNumber},\n      addressStreet: ${addressStreet},\n      addressTown: ${addressTown},\n      addressParish: ${addressParish},\n      addressPostOffice: ${addressPostOffice},\n      employmentDate: ${employmentDate},\n      terminationDate: ${terminationDate},\n      `);\n      const requestBody = {\n        query: `\n          mutation {\n            createUser(userInput: {email:\"${email}\",password:\"${password}\",name:\"${name}\",role:\"${role}\",dob:\"${dob}\",addressNumber:${addressNumber},addressStreet:\"${addressStreet}\",addressTown:\"${addressTown}\",addressParish:\"${addressParish}\",addressPostOffice:\"${addressPostOffice}\",phone:\"${phone}\",employmentDate:\"${employmentDate}\",terminationDate:\"${terminationDate}\"})\n            {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n          }\n        `\n      };\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        this.context.userAlert = res.json();\n        return res.json();\n      }).then(resData => {\n        console.log(\"create user response data... \" + JSON.stringify(resData.data.createUser));\n        this.setState(prevState => {\n          const updatedUsers = [...prevState.users];\n          updatedUsers.push(resData.data.createUser);\n          return {\n            users: updatedUsers\n          };\n        });\n        this.context.users = this.state.users;\n      }).catch(err => {\n        console.log(err);\n        this.context.userAlert = err;\n      });\n    };\n\n    this.modalConfirmUpdateHandler = event => {\n      const token = this.context.token;\n      const userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id;\n\n      if (userId !== selectedUserId && this.context.user.role !== 'admin') {\n        console.log(\"Not the creator or Admin! No edit permission!!\");\n        selectedUserId = null;\n      }\n\n      console.log(\"UpdateUserFormData:  \", event.target.formGridEmail.value);\n      this.setState({\n        updating: false\n      });\n      let email = event.target.formGridEmail.value;\n      let password = event.target.formGridPassword.value;\n      let name = event.target.formGridName.value;\n      let role = event.target.formGridRole.value;\n      let dob = event.target.formGridDob.value;\n      let phone = event.target.formGridPhone.value;\n      let addressNumber = event.target.formGridAddressNumber.value;\n      let addressStreet = event.target.formGridAddressStreet.value;\n      let addressTown = event.target.formGridAddressTown.value;\n      let addressParish = event.target.formGridAddressParish.value;\n      let addressPostOffice = event.target.formGridAddressPostOffice.value;\n      let employmentDate = event.target.formGridEmploymentDate.value;\n      let terminationDate = event.target.formGridTerminationDate.value;\n\n      if (email.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        email = this.state.user.email;\n      }\n\n      if (password.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        password = this.state.user.password;\n      }\n\n      if (name.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        name = this.state.user.name;\n      }\n\n      if (role.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        role = this.state.user.role;\n      }\n\n      if (dob.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        dob = this.state.user.dob;\n      }\n\n      if (phone.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        phone = this.state.user.phone;\n      }\n\n      if (addressNumber.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressNumber = this.state.user.address.number;\n      }\n\n      if (addressStreet.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressStreet = this.state.user.address.street;\n      }\n\n      if (addressTown.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressTown = this.state.user.address.town;\n      }\n\n      if (addressParish.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressParish = this.state.user.address.parish;\n      }\n\n      if (addressPostOffice.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressPostOffice = this.state.user.address.postOffice;\n      }\n\n      if (employmentDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        employmentDate = this.state.user.employmentDate;\n      }\n\n      if (terminationDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        terminationDate = this.state.user.terminationDate;\n      }\n\n      const user = {\n        email,\n        password,\n        name,\n        role,\n        dob,\n        phone,\n        addressNumber,\n        addressStreet,\n        addressTown,\n        addressParish,\n        addressPostOffice,\n        employmentDate,\n        terminationDate\n      };\n      console.log(`\n      updating user profile...\n      userId: ${userId}\n      email: ${email},\n      password: ${password},\n      name: ${name},\n      role: ${role},\n      dob: ${dob},\n      phone: ${phone},\n      addressNumber: ${addressNumber},\n      addressStreet: ${addressStreet},\n      addressTown: ${addressTown},\n      addressParish: ${addressParish},\n      addressPostOffice: ${addressPostOffice},\n      employmentDate: ${employmentDate},\n      terminationDate: ${terminationDate},\n      `);\n      const requestBody = {\n        query: `\n      mutation{\n        updateUser(userId:\"${userId}\",selectedUserId:\"${selectedUserId}\",userInput:{email:\"${email}\",password:\"${password}\",name:\"${name}\",dob:\"${dob}\",addressNumber:\"${addressNumber}\",addressStreet:\"${addressStreet}\",addressTown:\"${addressTown}\",addressParish:\"${addressParish}\",addressPostOffice:\"${addressPostOffice}\",phone:\"${phone}\",role:\"${role}\",employmentDate:\"${employmentDate}\",terminationDate:\"${terminationDate}\"})\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n      }\n        `\n      };\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        this.context.userAlert = res.json();\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const updatedUser = resData.data.updateUser;\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser));\n        this.setState({\n          user: updatedUser\n        });\n        this.state.users.push(resData.data.updateUser);\n        this.context.users = this.state.users; // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.context.userAlert = err;\n      });\n    };\n\n    this.modalConfirmUpdateFieldHandler = event => {\n      const token = this.context.token;\n      const userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id; // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      //   console.log(\"Not the creator or Admin! No edit permission!!\");\n      //   selectedUserId = null;\n      // }\n\n      console.log(\"UpdateUserFieldFormData:  \", event.target.formGridField.value, event.target.formGridFieldSelect.value);\n      this.setState({\n        updating: false\n      });\n      let field = null;\n      let query = event.target.formGridQuery.value;\n\n      if (event.target.formGridFieldSelect.value === \"select\") {\n        field = event.target.formGridField.value;\n      } else {\n        field = event.target.formGridFieldSelect.value;\n      }\n\n      console.log(`\n          field: ${field},\n          query: ${query},\n        `);\n      const requestBody = {\n        query: `\n          mutation{updateUserField(userId:\"${userId}\",selectedUserId:\"${selectedUserId}\",field:\"${field}\",query:\"${query}\")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n        }\n        `\n      };\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        this.context.userAlert = res.json();\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data.updateUserField));\n        const updatedUserId = resData.data.updateUserField._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(resData.data.updateUserField);\n        this.context.users = this.state.users; // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.context.userAlert = err;\n      });\n    };\n\n    this.updateUserAttendanceHandler = event => {\n      const token = this.context.token;\n      const userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id; // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      //   console.log(\"Not the creator or Admin! No edit permission!!\");\n      //   selectedUserId = null;\n      // }\n\n      if (userId !== selectedUserId && this.context.user.role !== \"admin\") {\n        console.log(\"Not the creator or Admin! No edit permission!!\");\n        selectedUserId = null;\n      }\n\n      console.log(\"UpdateUserAttendanceFormData:  \", event.target.formGridAttendanceDate.value);\n      this.setState({\n        updating: false,\n        userUpdateField: null\n      });\n      let attendanceDate = event.target.formGridAttendanceDate.value;\n      let attendanceStatus = event.target.formGridAttendanceStatus.value;\n      let attendanceDescription = event.target.formGridAttendanceDescription.value;\n\n      if (attendanceDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        attendanceDate = this.context.selectedUser.attendanceDate;\n      }\n\n      if (attendanceStatus.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        attendanceStatus = this.context.selectedUser.attendanceStatus;\n      }\n\n      if (attendanceDescription.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        attendanceDescription = this.context.selectedUser.attendanceDescription;\n      }\n\n      const userAttendance = {\n        attendanceDate,\n        attendanceStatus,\n        attendanceDescription\n      };\n      console.log(`\n      adding user attendance item...\n      userId: ${userId},\n      selectedUserId: ${selectedUserId}\n      attendanceDate: ${attendanceDate},\n      attendanceStatus: ${attendanceStatus},\n      attendanceDescription: ${attendanceDescription}\n      `);\n      const requestBody = {\n        query: `\n          mutation {updateUserAttendance(userId:\"${userId}\", selectedUserId:\"${selectedUserId}\",userInput:{attendanceDate:\"${attendanceDate}\",attendanceStatus:\"${attendanceStatus}\",attendanceDescription:\"${attendanceDescription}\"})\n          {_id,name,email,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description}}}\n        `\n      };\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        this.context.userAlert = res.json();\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data.updateUserAttendance));\n        const updatedUserId = resData.data.updateUserAttendance._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(resData.data.updateUserAttendance);\n        this.context.users = this.state.users; // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.context.userAlert = err;\n      });\n    };\n\n    this.updateUserAttachmentHandler = event => {\n      const token = this.context.token;\n      const userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id; // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      //   console.log(\"Not the creator or Admin! No edit permission!!\");\n      //   selectedUserId = null;\n      // }\n\n      if (userId !== selectedUserId && this.context.user.role !== \"admin\") {\n        console.log(\"Not the creator or Admin! No edit permission!!\");\n        selectedUserId = null;\n      }\n\n      console.log(\"UpdateUserAttachmentFormData:  \", event.target.formGridAttachmentName.value);\n      this.setState({\n        updating: false,\n        userUpdateField: null\n      });\n      let attachmentName = event.target.formGridAttachmentName.value;\n      let attachmentFormat = event.target.formGridAttachmentFormat.value;\n      let attachmentPath = event.target.formGridAttachmentPath.value;\n\n      if (attachmentName.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        attachmentName = this.context.selectedUser.attachmentName;\n      }\n\n      if (attachmentFormat.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        attachmentFormat = this.context.selectedUser.attachmentFormat;\n      }\n\n      if (attachmentPath.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        attachmentPath = this.context.selectedUser.attachmentPath;\n      }\n\n      const userAttachment = {\n        attachmentName,\n        attachmentFormat,\n        attachmentPath\n      };\n      console.log(`\n      adding user attendance item...\n      userId: ${userId},\n      selectedUserId: ${selectedUserId}\n      attachmentName: ${attachmentName},\n      attachmentFormat: ${attachmentFormat},\n      attachmentPath: ${attachmentPath}\n      `);\n      const requestBody = {\n        query: `\n          mutation {updateUserAttachment(userId:\"${userId}\", selectedUserId:\"${selectedUserId}\",userInput:{attachmentName:\"${attachmentName}\",attachmentFormat:\"${attachmentFormat}\",attachmentPath:\"${attachmentPath}\"})\n          {_id,name,email,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description}}}\n        `\n      };\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        this.context.userAlert = res.json();\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data.updateUserAttachment));\n        const updatedUserId = resData.data.updateUserAttachment._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(resData.data.updateUserAttachment);\n        this.context.users = this.state.users; // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.context.userAlert = err;\n      });\n    };\n\n    this.updateUserLeaveHandler = event => {\n      const token = this.context.token;\n      const userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id; // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      //   console.log(\"Not the creator or Admin! No edit permission!!\");\n      //   selectedUserId = null;\n      // }\n\n      if (userId !== selectedUserId && this.context.user.role !== \"admin\") {\n        console.log(\"Not the creator or Admin! No edit permission!!\");\n        selectedUserId = null;\n      }\n\n      console.log(\"UpdateUserLeaveFormData:  \", event.target.formGridLeaveType.value);\n      this.setState({\n        updating: false,\n        userUpdateField: null\n      });\n      let leaveType = event.target.formGridLeaveType.value;\n      let leaveTitle = event.target.formGridLeaveTitle.value;\n      let leaveStartDate = event.target.formGridLeaveStartDate.value;\n      let leaveEndDate = event.target.formGridLeaveEndDate.value;\n\n      if (leaveType.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        leaveType = this.context.selectedUser.leaveType;\n      }\n\n      if (leaveTitle.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        leaveTitle = this.context.selectedUser.leaveTitle;\n      }\n\n      if (leaveStartDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        leaveStartDate = this.context.selectedUser.leaveStartDate;\n      }\n\n      if (leaveEndDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        leaveEndDate = this.context.selectedUser.leaveEndDate;\n      }\n\n      const userLeave = {\n        leaveType,\n        leaveTitle,\n        leaveStartDate,\n        leaveEndDate\n      };\n      console.log(`\n      adding user attendance item...\n      userId: ${userId},\n      selectedUserId: ${selectedUserId}\n      leave: {\n        type: ${leaveType},\n        title: ${leaveTitle},\n        startDate: ${leaveStartDate},\n        endDate: ${leaveEndDate}\n      }\n      `);\n      const requestBody = {\n        query: `\n          mutation {updateUserLeave(userId:\"${userId}\", selectedUserId:\"${userId}\",userInput:{leaveType:\"${leaveType}\",leaveTitle:\"${leaveTitle}\",leaveStartDate:\"${leaveStartDate}\",leaveEndDate:\"${leaveEndDate}\"})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `\n      };\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        this.context.userAlert = res.json();\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data));\n        const updatedUserId = resData.data.updateUserLeave._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(resData.data.updateUserLeave);\n        this.context.users = this.state.users; // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.context.userAlert = err;\n      });\n    };\n\n    this.modalConfirmSearchHandler = event => {\n      console.log(\"SearchUserForm:  \");\n      let userId = this.context.userId;\n      console.log(\"SearchUserFormData:  \", event.target.formBasicField.value);\n      this.setState({\n        searching: false\n      });\n      let field = null;\n      let query = event.target.formBasicQuery.value;\n\n      if (event.target.formBasicFieldSelect.value === \"select\") {\n        field = event.target.formBasicField.value;\n      } else {\n        field = event.target.formBasicFieldSelect.value;\n      }\n\n      this.setState({\n        userSearchField: field,\n        userSearchQuery: query\n      });\n\n      if (field.trim().length === 0 || query.trim().length === 0) {\n        console.log(\"blank fields detected!!!...Please try again...\");\n        return;\n      }\n\n      const search = {\n        field,\n        query\n      };\n      console.log(\"Searching for User:  \", JSON.stringify(search));\n      const requestBody = {\n        query: `\n          query {getUserField(userId:\"${userId}\",field:\"${field}\",query:\"${query}\")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `\n      };\n      const token = this.context.token;\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        this.context.userAlert = res.json();\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const searchUsers = resData.data.getUserField;\n        this.setState({\n          searchUsers: searchUsers\n        });\n        console.log(\"state.searchUsers:  \", this.state.searchUsers); // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.context.userAlert = err;\n      });\n    };\n\n    this.modalConfirmSearchIdHandler = event => {\n      let userId = this.context.userId;\n      this.setState({\n        searching: false\n      });\n      console.log(\"SearchUserIdFormData:\", event.target.formBasicId.value);\n      let selectedUserId = event.target.formBasicId.value;\n      const requestBody = {\n        query: `\n        query {getUserId(userId:\"${userId}\",selectedUserId:\"${selectedUserId}\")\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `\n      };\n      const token = this.context.token;\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        this.context.userAlert = res.json();\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const searchUsers = resData.data.getUserId;\n        this.setState({\n          searchUsers: searchUsers\n        });\n        console.log(\"state.searchUsers:  \", this.state.searchUsers); // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.context.userAlert = err;\n      });\n    };\n\n    this.modalConfirmSearchAttendanceDateHandler = event => {\n      let userId = this.context.userId;\n      this.setState({\n        searching: false\n      });\n      console.log(\"SearchUserAttendanceDateFormData:\");\n      const attendanceDate = event.target.formBasicDate.value;\n      const requestBody = {\n        query: `\n        query {getUserAttendanceDate(userId:\"${userId}\",attendanceDate:\"${attendanceDate}\")\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `\n      };\n      const token = this.context.token;\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        this.context.userAlert = res.json();\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const searchUsers = resData.data.getUserField;\n        this.setState({\n          searchUsers: searchUsers\n        });\n        console.log(\"state.searchUsers:  \", this.state.searchUsers); // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.context.userAlert = err;\n      });\n    };\n\n    this.modalConfirmSearchLeaveDateRangeHandler = event => {\n      let userId = this.context.userId;\n      this.setState({\n        searching: false\n      });\n      console.log(\"SearchUserLeaveDateRangeFormData:\");\n      const startDate = event.target.formBasicStartDate.value;\n      const endDate = event.target.formBasicEndDate.value;\n      const requestBody = {\n        query: `\n        query{getUserLeaveDateRange(userId:\"${userId}\",startDate:\"${startDate}\",endDate:\"${endDate}\")\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `\n      };\n      const token = this.context.token;\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const searchUsers = resData.data.getUserField;\n        this.setState({\n          searchUsers: searchUsers\n        });\n        console.log(\"state.searchUsers:  \", this.state.searchUsers); // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.modalCancelHandler = () => {\n      this.setState({\n        creating: false,\n        updating: false,\n        deleting: false,\n        searching: false\n      });\n    };\n\n    this.modalDeleteHandler = () => {\n      console.log(\"deleting user...selectedUser:  \", this.context.selectedUser);\n      const userId = this.context.userId;\n      const selectedUserId = this.context.selectedUser._id;\n\n      if (this.context.user.role !== 'admin') {\n        console.log(\"Not the Admin! No edit permission!!\");\n      }\n\n      this.setState({\n        deleting: true\n      });\n      const requestBody = {\n        query: `\n        mutation {\n          deleteUser(userId: ${userId}, selectedUserId: ${selectedUserId})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n        }\n      `\n      };\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.context.token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        let deletedUser = resData.data.deleteUser;\n        console.log(deletedUser);\n        let deletedUserId = deletedUser._id;\n        deletedUser = this.state.users.find(e => e._id === deletedUserId);\n        const deletedUserPos = this.state.users.indexOf(deletedUser);\n        const slicedArray = this.state.users.splice(deletedUserPos, 1);\n        console.log(\"deletedUser:  \", JSON.stringify(deletedUser), \"  deletedUserPos:  \", deletedUserPos, \"  slicedArray:  \", slicedArray);\n        this.setState({\n          deleting: false,\n          selectedUser: null\n        });\n        this.context.selectedUser = null;\n        this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n\n        if (this.isActive) {\n          this.setState({\n            deleting: false\n          });\n        }\n      });\n    };\n\n    this.showDetailHandler = userId => {\n      this.setState(prevState => {\n        const selectedUser = prevState.users.find(e => e._id === userId);\n        this.context.selectedUser = selectedUser;\n        this.setState({\n          selectedUser: selectedUser\n        });\n        console.log(\"User selected  :  \", selectedUser);\n        return {\n          selectedUser: selectedUser\n        };\n      });\n    };\n  }\n\n  // constructor(props) {\n  //   super(props);\n  // }\n  componentDidMount() {\n    this.fetchUsers();\n\n    if (this.context.user.name === 'admin579') {\n      this.setState({\n        canDelete: true\n      });\n    }\n  }\n\n  fetchUsers() {\n    console.log(\"'fetch users function' context object... \" + JSON.stringify(this.context));\n    const userId = this.context.userId;\n    this.setState({\n      isLoading: true\n    });\n    const requestBody = {\n      query: `\n          query {users (userId:\"${userId}\")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `\n    };\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n\n      return res.json();\n    }).then(resData => {\n      const users = resData.data.users;\n      console.log(\"resData:  \", resData);\n      console.log(users);\n\n      if (this.isActive) {\n        this.setState({\n          users: users,\n          isLoading: false\n        });\n      }\n\n      this.context.users = this.state.users;\n    }).catch(err => {\n      console.log(err);\n\n      if (this.isActive) {\n        this.setState({\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  updateUserSpecial(event) {\n    console.log(\"special field to update:  \", event.target.value);\n    const field = event.target.value;\n    this.setState({\n      userUpdateField: field\n    });\n  }\n\n  userSearchClearlHandler() {\n    console.log(\"clearing user search results\");\n    this.setState({\n      searchUsers: []\n    });\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1010\n      },\n      __self: this\n    }, React.createElement(Accordion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1014\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1016\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 3,\n      className: \"MasterCol1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1018\n      },\n      __self: this\n    }, React.createElement(SidebarPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1020\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 6,\n      className: \"MasterCol2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1024\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"containerCombinedDetail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1026\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"userDetail\",\n      id: \"uncontrolled-tab-example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1027\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      eventKey: \"Edit\",\n      title: \"Edit:\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1028\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      eventKey: \"userDetail\",\n      title: \"Details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1030\n      },\n      __self: this\n    }, this.state.selectedUser === null && React.createElement(Button, {\n      variant: \"outline-warning\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1032\n      },\n      __self: this\n    }, \"Select a Staff member from the Master List below\"), this.state.isLoading === false && this.state.selectedUser !== null && React.createElement(UserDetail, {\n      authUserId: this.context.userId,\n      AuthContext: this.context,\n      user: this.state.selectedUser,\n      onEdit: this.startUpdateUserHandler,\n      canDelete: this.state.canDelete,\n      onDelete: this.modalDeleteHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1039\n      },\n      __self: this\n    })), this.context.user.role === \"admin\" && React.createElement(Tab, {\n      eventKey: \"userCreate\",\n      title: \"New\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1051\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.startCreateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1052\n      },\n      __self: this\n    }, \"Create\"), this.state.creating && React.createElement(CreateUserForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmHandler,\n      onSubmit: this.modalConfirmHandler,\n      confirmText: \"Confirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1054\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"userEditDemographics\",\n      title: \"Demographics\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1067\n      },\n      __self: this\n    }, this.state.selectedUser === null && React.createElement(Button, {\n      variant: \"outline-warning\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069\n      },\n      __self: this\n    }, \"Select a Staff member from the Master List below\"), this.state.selectedUser !== null && this.context.user.role === \"admin\" && React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.startUpdateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1076\n      },\n      __self: this\n    }, \"Edit Demographics as Admin\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.startUpdateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1081\n      },\n      __self: this\n    }, \"Edit Demographics (your profile)\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1085\n      },\n      __self: this\n    }, \"Your Profile\"), this.state.selectedUser !== null && this.state.selectedUser._id !== this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1091\n      },\n      __self: this\n    }, \"Not my profile\"), this.state.updating && this.state.selectedUser !== null && React.createElement(UpdateUserForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmUpdateHandler,\n      confirmText: \"Confirm\",\n      user: this.context.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1098\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"userEditField\",\n      title: \"Single Field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1111\n      },\n      __self: this\n    }, this.state.selectedUser === null && React.createElement(Button, {\n      variant: \"outline-warning\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1113\n      },\n      __self: this\n    }, \"Select a Staff member from the Master List below\"), this.state.selectedUser !== null && this.context.user.role === \"admin\" && React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.startUpdateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1121\n      },\n      __self: this\n    }, \"Edit Field as Admin\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.startUpdateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1126\n      },\n      __self: this\n    }, \"Edit Field (your profile)\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1130\n      },\n      __self: this\n    }, \"Your Profile\"), this.state.selectedUser !== null && this.state.selectedUser._id !== this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1136\n      },\n      __self: this\n    }, \"Not my profile\"), this.state.updating && this.state.selectedUser !== null && React.createElement(UpdateUserFieldForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmUpdateFieldHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1143\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"userEditAttendance\",\n      title: \"Attendance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1155\n      },\n      __self: this\n    }, this.state.selectedUser === null && React.createElement(Button, {\n      variant: \"outline-warning\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1157\n      },\n      __self: this\n    }, \"Select a Staff member from the Master List below\"), this.state.selectedUser !== null && this.context.user.role === \"admin\" && React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"attendance\",\n      onClick: this.updateUserSpecial.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1165\n      },\n      __self: this\n    }, \"Add Attendance as Admin\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"attendance\",\n      onClick: this.updateUserSpecial.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1170\n      },\n      __self: this\n    }, \"Add Attendance (your profile)\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1174\n      },\n      __self: this\n    }, \"Your Profile\"), this.state.selectedUser !== null && this.state.selectedUser._id !== this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1180\n      },\n      __self: this\n    }, \"Not my profile\"), this.state.userUpdateField === 'attendance' && this.state.selectedUser !== null && React.createElement(UpdateUserAttendanceForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserAttendanceHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1188\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"userEditLeave\",\n      title: \"Leave\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1200\n      },\n      __self: this\n    }, this.state.selectedUser === null && React.createElement(Button, {\n      variant: \"outline-warning\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1202\n      },\n      __self: this\n    }, \"Select a Staff member from the Master List below\"), this.state.selectedUser !== null && this.context.user.role === \"admin\" && React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"leave\",\n      onClick: this.updateUserSpecial.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1210\n      },\n      __self: this\n    }, \"Add Leave as Admin\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"leave\",\n      onClick: this.updateUserSpecial.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1215\n      },\n      __self: this\n    }, \"Add Leave (your profile)\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1219\n      },\n      __self: this\n    }, \"Your Profile\"), this.state.selectedUser !== null && this.state.selectedUser._id !== this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1225\n      },\n      __self: this\n    }, \"Not my profile\"), this.state.userUpdateField === 'leave' && this.state.selectedUser !== null && React.createElement(UpdateUserLeaveForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserLeaveHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1232\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"userEditAttachment\",\n      title: \"Attachment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1242\n      },\n      __self: this\n    }, this.state.selectedUser === null && React.createElement(Button, {\n      variant: \"outline-warning\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1244\n      },\n      __self: this\n    }, \"Select a Staff member from the Master List below\"), this.state.selectedUser !== null && this.context.user.role === \"admin\" && React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"attachments\",\n      onClick: this.updateUserSpecial.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1252\n      },\n      __self: this\n    }, \"Add Attachment as Admin\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"attachments\",\n      onClick: this.updateUserSpecial.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1257\n      },\n      __self: this\n    }, \"Add Attachment (your profile)\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1261\n      },\n      __self: this\n    }, \"Your Profile\"), this.state.selectedUser !== null && this.state.selectedUser._id !== this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1267\n      },\n      __self: this\n    }, \"Not my profile\"), this.state.userUpdateField === 'attachments' && this.state.selectedUser !== null && React.createElement(UpdateUserAttachmentForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserAttachmentHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1274\n      },\n      __self: this\n    })))), React.createElement(Container, {\n      className: \"containerUserMasterList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1287\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"searchListRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1288\n      },\n      __self: this\n    }, this.state.isLoading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1290\n      },\n      __self: this\n    }) : React.createElement(UserList, {\n      users: this.state.users,\n      authUserId: this.context.userId,\n      onViewDetail: this.showDetailHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1292\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      md: 3,\n      className: \"MasterCol3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1302\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"containerSearchUserInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1304\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"searchUserRowAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1305\n      },\n      __self: this\n    }, this.context.token && React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"primary\",\n      eventKey: \"3\",\n      onClick: this.startSearchUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1307\n      },\n      __self: this\n    }, \"Search\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1312\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"searchUserRowForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1313\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 10,\n      className: \"searchUserColForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1314\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"userSearch\",\n      id: \"uncontrolled-tab-example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1315\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      eventKey: \"Search\",\n      title: \"Search:\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1316\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      eventKey: \"Field\",\n      title: \"Field:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1318\n      },\n      __self: this\n    }, this.state.searching === true && React.createElement(SearchUserForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmSearchHandler,\n      confirmText: \"Search\",\n      user: this.context.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1320\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Id\",\n      title: \"Id:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1330\n      },\n      __self: this\n    }, this.state.searching === true && React.createElement(SearchUserIdForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmSearchIdHandler,\n      confirmText: \"Search\",\n      user: this.context.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1332\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Attendance\",\n      title: \"Attendance:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1343\n      },\n      __self: this\n    }, this.state.searching === true && React.createElement(SearchUserAttendanceDateForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmSearchAttendanceDateHandler,\n      confirmText: \"Search\",\n      user: this.context.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1345\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Leave\",\n      title: \"Leave:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1356\n      },\n      __self: this\n    }, this.state.searching === true && React.createElement(SearchUserLeaveDateRangeForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmSearchLeaveDateRangeHandler,\n      confirmText: \"Search\",\n      user: this.context.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1358\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1371\n      },\n      __self: this\n    })))), React.createElement(Container, {\n      className: \"containerSearchUserResults\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1378\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1379\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"searchCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1380\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      className: \"searchCardBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1381\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1382\n      },\n      __self: this\n    }, \"Your Search\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1383\n      },\n      __self: this\n    }, \"Field: \", this.state.userSearchField), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1386\n      },\n      __self: this\n    }, \"Query: \", this.state.userSearchQuery)))), React.createElement(Row, {\n      className: \"searchListRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1392\n      },\n      __self: this\n    }, this.state.searchUsers !== [] && React.createElement(SearchUserList, {\n      searchUsers: this.state.searchUsers,\n      authUserId: this.context.userId,\n      onViewDetail: this.showDetailHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1394\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nUsersPage.contextType = AuthContext;\nexport default UsersPage;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/Users.js"],"names":["React","Component","Container","Row","Col","Button","Accordion","Tabs","Tab","Card","UserList","SearchUserList","UserDetail","Spinner","AuthContext","SidebarPage","CreateUserForm","UpdateUserForm","UpdateUserFieldForm","UpdateUserAttendanceForm","UpdateUserAttachmentForm","UpdateUserLeaveForm","SearchUserForm","SearchUserIdForm","SearchUserAttendanceDateForm","SearchUserLeaveDateRangeForm","UsersPage","state","creating","updating","deleting","searching","users","searchUsers","isLoading","selectedUser","userUpdateField","userSearchField","userSearchQuery","canDelete","isActive","startCreateUserHandler","setState","console","log","startUpdateUserHandler","startSearchUserHandler","modalConfirmHandler","event","target","formGridEmail","value","email","password","formGridPassword","name","formGridName","role","formGridRole","dob","formGridDob","phone","formGridPhone","addressNumber","formGridAddressNumber","addressStreet","formGridAddressStreet","addressTown","formGridAddressTown","addressParish","formGridAddressParish","addressPostOffice","formGridAddressPostOffice","employmentDate","formGridEmploymentDate","terminationDate","formGridTerminationDate","trim","length","token","context","userId","user","requestBody","query","fetch","method","body","JSON","stringify","headers","Authorization","then","res","status","Error","userAlert","json","resData","data","createUser","prevState","updatedUsers","push","catch","err","modalConfirmUpdateHandler","selectedUserId","_id","address","number","street","town","parish","postOffice","updatedUser","updateUser","modalConfirmUpdateFieldHandler","formGridField","formGridFieldSelect","field","formGridQuery","updateUserField","updatedUserId","find","e","updatedUserPos","indexOf","slicedArray","splice","updateUserAttendanceHandler","formGridAttendanceDate","attendanceDate","attendanceStatus","formGridAttendanceStatus","attendanceDescription","formGridAttendanceDescription","userAttendance","updateUserAttendance","updateUserAttachmentHandler","formGridAttachmentName","attachmentName","attachmentFormat","formGridAttachmentFormat","attachmentPath","formGridAttachmentPath","userAttachment","updateUserAttachment","updateUserLeaveHandler","formGridLeaveType","leaveType","leaveTitle","formGridLeaveTitle","leaveStartDate","formGridLeaveStartDate","leaveEndDate","formGridLeaveEndDate","userLeave","updateUserLeave","modalConfirmSearchHandler","formBasicField","formBasicQuery","formBasicFieldSelect","search","getUserField","modalConfirmSearchIdHandler","formBasicId","getUserId","modalConfirmSearchAttendanceDateHandler","formBasicDate","modalConfirmSearchLeaveDateRangeHandler","startDate","formBasicStartDate","endDate","formBasicEndDate","modalCancelHandler","modalDeleteHandler","deletedUser","deleteUser","deletedUserId","deletedUserPos","fetchUsers","showDetailHandler","componentDidMount","updateUserSpecial","userSearchClearlHandler","componentWillUnmount","render","bind","contextType"],"mappings":"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","sourcesContent":["\n\nimport React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Card from 'react-bootstrap/Card';\n\n// import Modal from '../components/Modal/Modal';\n// import Backdrop from '../components/Backdrop/Backdrop';\nimport UserList from '../components/Users/UserList/UserList';\nimport SearchUserList from '../components/Users/UserList/SearchUserList';\nimport UserDetail from '../components/Users/UserDetail';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\n\nimport SidebarPage from './Sidebar';\n\nimport CreateUserForm from '../components/Forms/CreateUserForm';\nimport UpdateUserForm from '../components/Forms/UpdateUserForm';\nimport UpdateUserFieldForm from '../components/Forms/UpdateUserFieldForm';\nimport UpdateUserAttendanceForm from '../components/Forms/UpdateUserAttendanceForm';\nimport UpdateUserAttachmentForm from '../components/Forms/UpdateUserAttachmentForm';\nimport UpdateUserLeaveForm from '../components/Forms/UpdateUserLeaveForm';\nimport SearchUserForm from '../components/Forms/SearchUserForm';\nimport SearchUserIdForm from '../components/Forms/SearchUserIdForm';\nimport SearchUserAttendanceDateForm from '../components/Forms/SearchUserAttendanceDateForm';\nimport SearchUserLeaveDateRangeForm from '../components/Forms/SearchUserLeaveDateRangeForm';\nimport './Users.css';\n\nclass UsersPage extends Component {\n  state = {\n    creating: false,\n    updating: false,\n    deleting: false,\n    searching: false,\n    users: [],\n    searchUsers: [],\n    isLoading: false,\n    selectedUser: null,\n    userUpdateField: null,\n    userSearchField: null,\n    userSearchQuery: null,\n    canDelete: null,\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  componentDidMount() {\n    this.fetchUsers();\n    if (this.context.user.name === 'admin579'){\n      this.setState({canDelete: true})\n    }\n  }\n\n\n  startCreateUserHandler = () => {\n    this.setState({ creating: true });\n    console.log(\"CreateUserForm...\");\n  };\n  startUpdateUserHandler = () => {\n    this.setState({ updating: true });\n    console.log(\"UpdateUserForm...\");\n  };\n\n  startSearchUserHandler = () => {\n    this.setState({ searching: true });\n    console.log(\"SearchUserForm...\");\n  };\n\n  modalConfirmHandler = (event) => {\n\n    console.log(\"CreateUserFormData:  \", event.target.formGridEmail.value);\n\n    this.setState({ creating: false });\n    const email = event.target.formGridEmail.value;\n    const password = event.target.formGridPassword.value;\n    const name = event.target.formGridName.value;\n    const role = event.target.formGridRole.value;\n    let dob = event.target.formGridDob.value;\n    let phone = event.target.formGridPhone.value;\n    let addressNumber = event.target.formGridAddressNumber.value;\n    let addressStreet = event.target.formGridAddressStreet.value;\n    let addressTown = event.target.formGridAddressTown.value;\n    let addressParish = event.target.formGridAddressParish.value;\n    let addressPostOffice = event.target.formGridAddressPostOffice.value;\n    let employmentDate = event.target.formGridEmploymentDate.value;\n    let terminationDate = event.target.formGridTerminationDate.value;\n\n    if (\n      email.trim().length === 0 ||\n      password.trim().length === 0 ||\n      name.trim().length === 0 ||\n      role.trim().length === 0 ||\n      dob.trim().length === 0 ||\n      phone.trim().length === 0 ||\n      addressNumber.trim().length === 0 ||\n      addressStreet.trim().length === 0 ||\n      addressTown.trim().length === 0 ||\n      addressParish.trim().length === 0 ||\n      addressPostOffice.trim().length === 0 ||\n      employmentDate.trim().length === 0 ||\n      terminationDate.trim().length === 0\n    ) {\n      console.log(\"blank fields detected!!!...Please try again...\");\n      return;\n    }\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n    const user = { email, password, name, role, dob, phone, addressNumber, addressStreet, addressTown, addressParish, addressPostOffice, employmentDate, terminationDate };\n\n    console.log(`\n      creating user...\n      userId: ${userId}\n      email: ${email},\n      password: ${password},\n      name: ${name},\n      role: ${role},\n      dob: ${dob},\n      phone: ${phone},\n      addressNumber: ${addressNumber},\n      addressStreet: ${addressStreet},\n      addressTown: ${addressTown},\n      addressParish: ${addressParish},\n      addressPostOffice: ${addressPostOffice},\n      employmentDate: ${employmentDate},\n      terminationDate: ${terminationDate},\n      `);\n\n    const requestBody = {\n      query: `\n          mutation {\n            createUser(userInput: {email:\"${email}\",password:\"${password}\",name:\"${name}\",role:\"${role}\",dob:\"${dob}\",addressNumber:${addressNumber},addressStreet:\"${addressStreet}\",addressTown:\"${addressTown}\",addressParish:\"${addressParish}\",addressPostOffice:\"${addressPostOffice}\",phone:\"${phone}\",employmentDate:\"${employmentDate}\",terminationDate:\"${terminationDate}\"})\n            {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n          }\n        `\n    };\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        this.context.userAlert = res.json();\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"create user response data... \" + JSON.stringify(resData.data.createUser));\n        this.setState(prevState => {\n          const updatedUsers = [...prevState.users];\n          updatedUsers.push(resData.data.createUser);\n\n          return { users: updatedUsers };\n        });\n        this.context.users = this.state.users;\n      })\n      .catch(err => {\n        console.log(err);\n        this.context.userAlert = err;\n      });\n  };\n\n\n  modalConfirmUpdateHandler = (event) => {\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n    let selectedUserId = this.context.selectedUser._id;\n    if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      console.log(\"Not the creator or Admin! No edit permission!!\");\n      selectedUserId = null;\n    }\n\n    console.log(\"UpdateUserFormData:  \", event.target.formGridEmail.value);\n\n    this.setState({ updating: false });\n\n    let email = event.target.formGridEmail.value;\n    let password = event.target.formGridPassword.value;\n    let name = event.target.formGridName.value;\n    let role = event.target.formGridRole.value;\n    let dob = event.target.formGridDob.value;\n    let phone = event.target.formGridPhone.value;\n    let addressNumber = event.target.formGridAddressNumber.value;\n    let addressStreet = event.target.formGridAddressStreet.value;\n    let addressTown = event.target.formGridAddressTown.value;\n    let addressParish = event.target.formGridAddressParish.value;\n    let addressPostOffice = event.target.formGridAddressPostOffice.value;\n    let employmentDate = event.target.formGridEmploymentDate.value;\n    let terminationDate = event.target.formGridTerminationDate.value;\n\n    if (email.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      email = this.state.user.email;\n    }\n    if (password.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      password = this.state.user.password;\n    }\n    if (name.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      name = this.state.user.name;\n    }\n    if (role.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      role = this.state.user.role;\n    }\n    if (dob.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      dob = this.state.user.dob;\n    }\n    if (phone.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      phone = this.state.user.phone;\n    }\n    if (addressNumber.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressNumber = this.state.user.address.number;\n    }\n    if (addressStreet.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressStreet = this.state.user.address.street;\n    }\n    if (addressTown.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressTown = this.state.user.address.town;\n    }\n    if (addressParish.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressParish = this.state.user.address.parish;\n    }\n    if (addressPostOffice.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressPostOffice = this.state.user.address.postOffice;\n    }\n    if (employmentDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      employmentDate = this.state.user.employmentDate;\n    }\n    if (terminationDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      terminationDate = this.state.user.terminationDate;\n    }\n\n    const user = { email, password, name, role, dob, phone, addressNumber, addressStreet, addressTown, addressParish, addressPostOffice, employmentDate, terminationDate };\n    console.log(`\n      updating user profile...\n      userId: ${userId}\n      email: ${email},\n      password: ${password},\n      name: ${name},\n      role: ${role},\n      dob: ${dob},\n      phone: ${phone},\n      addressNumber: ${addressNumber},\n      addressStreet: ${addressStreet},\n      addressTown: ${addressTown},\n      addressParish: ${addressParish},\n      addressPostOffice: ${addressPostOffice},\n      employmentDate: ${employmentDate},\n      terminationDate: ${terminationDate},\n      `);\n\n    const requestBody = {\n      query: `\n      mutation{\n        updateUser(userId:\"${userId}\",selectedUserId:\"${selectedUserId}\",userInput:{email:\"${email}\",password:\"${password}\",name:\"${name}\",dob:\"${dob}\",addressNumber:\"${addressNumber}\",addressStreet:\"${addressStreet}\",addressTown:\"${addressTown}\",addressParish:\"${addressParish}\",addressPostOffice:\"${addressPostOffice}\",phone:\"${phone}\",role:\"${role}\",employmentDate:\"${employmentDate}\",terminationDate:\"${terminationDate}\"})\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n      }\n        `};\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        this.context.userAlert = res.json();\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const updatedUser = resData.data.updateUser;\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser));\n        this.setState({user: updatedUser})\n        this.state.users.push(resData.data.updateUser);\n        this.context.users = this.state.users;\n        // this.fetchUsers();\n      })\n      .catch(err => {\n        console.log(err);\n        this.context.userAlert = err;\n      });\n  };\n\n\n  modalConfirmUpdateFieldHandler = (event) => {\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n    let selectedUserId = this.context.selectedUser._id;\n    // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n    //   console.log(\"Not the creator or Admin! No edit permission!!\");\n    //   selectedUserId = null;\n    // }\n\n\n      console.log(\"UpdateUserFieldFormData:  \", event.target.formGridField.value, event.target.formGridFieldSelect.value);\n      this.setState({ updating: false });\n\n      let field = null;\n      let query = event.target.formGridQuery.value;\n      if (event.target.formGridFieldSelect.value === \"select\") {\n        field = event.target.formGridField.value;\n      } else {\n        field = event.target.formGridFieldSelect.value;\n      }\n      console.log(`\n          field: ${field},\n          query: ${query},\n        `);\n\n      const requestBody = {\n        query:`\n          mutation{updateUserField(userId:\"${userId}\",selectedUserId:\"${selectedUserId}\",field:\"${field}\",query:\"${query}\")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n        }\n        `};\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          this.context.userAlert = res.json();\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData.data.updateUserField));\n\n          const updatedUserId = resData.data.updateUserField._id;\n          const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n          const updatedUserPos = this.state.users.indexOf(updatedUser);\n          const slicedArray = this.state.users.splice(updatedUserPos, 1);\n          console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n          this.state.users.push(resData.data.updateUserField);\n          this.context.users = this.state.users;\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.context.userAlert = err;\n        });\n\n  }\n\n  updateUserAttendanceHandler = (event) => {\n    const token = this.context.token;\n    const userId = this.context.userId;\n    let selectedUserId = this.context.selectedUser._id;\n    // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n    //   console.log(\"Not the creator or Admin! No edit permission!!\");\n    //   selectedUserId = null;\n    // }\n    if (userId !== selectedUserId && this.context.user.role !== \"admin\" ) {\n      console.log(\"Not the creator or Admin! No edit permission!!\");\n        selectedUserId = null;\n    }\n\n    console.log(\"UpdateUserAttendanceFormData:  \", event.target.formGridAttendanceDate.value);\n\n    this.setState({ updating: false , userUpdateField: null });\n\n    let attendanceDate = event.target.formGridAttendanceDate.value;\n    let attendanceStatus = event.target.formGridAttendanceStatus.value;\n    let attendanceDescription = event.target.formGridAttendanceDescription.value;\n\n    if (attendanceDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      attendanceDate = this.context.selectedUser.attendanceDate;\n    }\n    if (attendanceStatus.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      attendanceStatus = this.context.selectedUser.attendanceStatus;\n    }\n    if (attendanceDescription.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      attendanceDescription = this.context.selectedUser.attendanceDescription;\n    }\n\n    const userAttendance = { attendanceDate, attendanceStatus, attendanceDescription }\n    console.log(`\n      adding user attendance item...\n      userId: ${userId},\n      selectedUserId: ${selectedUserId}\n      attendanceDate: ${attendanceDate},\n      attendanceStatus: ${attendanceStatus},\n      attendanceDescription: ${attendanceDescription}\n      `);\n\n      const requestBody = {\n        query:`\n          mutation {updateUserAttendance(userId:\"${userId}\", selectedUserId:\"${selectedUserId}\",userInput:{attendanceDate:\"${attendanceDate}\",attendanceStatus:\"${attendanceStatus}\",attendanceDescription:\"${attendanceDescription}\"})\n          {_id,name,email,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description}}}\n        `};\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          this.context.userAlert = res.json();\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData.data.updateUserAttendance));\n\n          const updatedUserId = resData.data.updateUserAttendance._id;\n          const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n          const updatedUserPos = this.state.users.indexOf(updatedUser);\n          const slicedArray = this.state.users.splice(updatedUserPos, 1);\n          console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n          this.state.users.push(resData.data.updateUserAttendance);\n          this.context.users = this.state.users;\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.context.userAlert = err;\n        });\n\n\n  }\n\n  updateUserAttachmentHandler = (event) => {\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n    let selectedUserId = this.context.selectedUser._id;\n    // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n    //   console.log(\"Not the creator or Admin! No edit permission!!\");\n    //   selectedUserId = null;\n    // }\n    if (userId !== selectedUserId && this.context.user.role !== \"admin\" ) {\n      console.log(\"Not the creator or Admin! No edit permission!!\");\n        selectedUserId = null;\n    }\n\n    console.log(\"UpdateUserAttachmentFormData:  \", event.target.formGridAttachmentName.value);\n\n    this.setState({ updating: false , userUpdateField: null });\n\n    let attachmentName = event.target.formGridAttachmentName.value;\n    let attachmentFormat = event.target.formGridAttachmentFormat.value;\n    let attachmentPath = event.target.formGridAttachmentPath.value;\n\n\n    if (attachmentName.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      attachmentName = this.context.selectedUser.attachmentName;\n    }\n    if (attachmentFormat.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      attachmentFormat = this.context.selectedUser.attachmentFormat;\n    }\n    if (attachmentPath.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      attachmentPath = this.context.selectedUser.attachmentPath;\n    }\n\n    const userAttachment = { attachmentName, attachmentFormat, attachmentPath }\n    console.log(`\n      adding user attendance item...\n      userId: ${userId},\n      selectedUserId: ${selectedUserId}\n      attachmentName: ${attachmentName},\n      attachmentFormat: ${attachmentFormat},\n      attachmentPath: ${attachmentPath}\n      `);\n\n      const requestBody = {\n        query:`\n          mutation {updateUserAttachment(userId:\"${userId}\", selectedUserId:\"${selectedUserId}\",userInput:{attachmentName:\"${attachmentName}\",attachmentFormat:\"${attachmentFormat}\",attachmentPath:\"${attachmentPath}\"})\n          {_id,name,email,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description}}}\n        `};\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          this.context.userAlert = res.json();\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData.data.updateUserAttachment));\n\n          const updatedUserId = resData.data.updateUserAttachment._id;\n          const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n          const updatedUserPos = this.state.users.indexOf(updatedUser);\n          const slicedArray = this.state.users.splice(updatedUserPos, 1);\n          console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n          this.state.users.push(resData.data.updateUserAttachment);\n          this.context.users = this.state.users;\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.context.userAlert = err;\n        });\n\n\n  }\n\n\n  updateUserLeaveHandler = (event) => {\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n    let selectedUserId = this.context.selectedUser._id;\n    // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n    //   console.log(\"Not the creator or Admin! No edit permission!!\");\n    //   selectedUserId = null;\n    // }\n    if (userId !== selectedUserId && this.context.user.role !== \"admin\" ) {\n      console.log(\"Not the creator or Admin! No edit permission!!\");\n        selectedUserId = null;\n    }\n\n    console.log(\"UpdateUserLeaveFormData:  \", event.target.formGridLeaveType.value);\n\n    this.setState({ updating: false , userUpdateField: null });\n\n    let leaveType = event.target.formGridLeaveType.value;\n    let leaveTitle = event.target.formGridLeaveTitle.value;\n    let leaveStartDate = event.target.formGridLeaveStartDate.value;\n    let leaveEndDate = event.target.formGridLeaveEndDate.value;\n\n    if (leaveType.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      leaveType = this.context.selectedUser.leaveType;\n    }\n    if (leaveTitle.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      leaveTitle = this.context.selectedUser.leaveTitle;\n    }\n    if (leaveStartDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      leaveStartDate = this.context.selectedUser.leaveStartDate;\n    }\n    if (leaveEndDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      leaveEndDate = this.context.selectedUser.leaveEndDate;\n    }\n\n    const userLeave = { leaveType, leaveTitle, leaveStartDate, leaveEndDate }\n    console.log(`\n      adding user attendance item...\n      userId: ${userId},\n      selectedUserId: ${selectedUserId}\n      leave: {\n        type: ${leaveType},\n        title: ${leaveTitle},\n        startDate: ${leaveStartDate},\n        endDate: ${leaveEndDate}\n      }\n      `);\n\n      const requestBody = {\n        query:`\n          mutation {updateUserLeave(userId:\"${userId}\", selectedUserId:\"${userId}\",userInput:{leaveType:\"${leaveType}\",leaveTitle:\"${leaveTitle}\",leaveStartDate:\"${leaveStartDate}\",leaveEndDate:\"${leaveEndDate}\"})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `};\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          this.context.userAlert = res.json();\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData.data));\n\n          const updatedUserId = resData.data.updateUserLeave._id;\n          const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n          const updatedUserPos = this.state.users.indexOf(updatedUser);\n          const slicedArray = this.state.users.splice(updatedUserPos, 1);\n          console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n          this.state.users.push(resData.data.updateUserLeave);\n          this.context.users = this.state.users;\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.context.userAlert = err;\n        });\n\n  }\n\n\n  modalConfirmSearchHandler = (event) => {\n    console.log(\"SearchUserForm:  \");\n\n\n    let userId = this.context.userId;\n\n      console.log(\"SearchUserFormData:  \", event.target.formBasicField.value);\n      this.setState({ searching: false });\n\n      let field = null;\n      let query = event.target.formBasicQuery.value;\n      if (event.target.formBasicFieldSelect.value === \"select\") {\n        field = event.target.formBasicField.value;\n      } else {\n        field = event.target.formBasicFieldSelect.value;\n      }\n\n      this.setState({\n        userSearchField: field,\n        userSearchQuery: query,\n      })\n\n      if (\n        field.trim().length === 0 ||\n        query.trim().length === 0\n      ) {\n        console.log(\"blank fields detected!!!...Please try again...\");\n        return;\n      }\n\n      const search = { field, query }\n      console.log(\"Searching for User:  \", JSON.stringify(search));\n\n      const requestBody = {\n        query: `\n          query {getUserField(userId:\"${userId}\",field:\"${field}\",query:\"${query}\")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `}\n\n      const token = this.context.token;\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          this.context.userAlert = res.json();\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData));\n\n          const searchUsers = resData.data.getUserField;\n\n          this.setState({ searchUsers: searchUsers})\n          console.log(\"state.searchUsers:  \", this.state.searchUsers);\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.context.userAlert = err;\n        });\n  }\n\n  modalConfirmSearchIdHandler = (event) => {\n\n    let userId = this.context.userId;\n    this.setState({ searching: false });\n\n    console.log(\"SearchUserIdFormData:\", event.target.formBasicId.value);\n    let selectedUserId = event.target.formBasicId.value;\n\n    const requestBody = {\n      query: `\n        query {getUserId(userId:\"${userId}\",selectedUserId:\"${selectedUserId}\")\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `}\n\n    const token = this.context.token;\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        this.context.userAlert = res.json();\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n\n        const searchUsers = resData.data.getUserId;\n\n        this.setState({ searchUsers: searchUsers})\n        console.log(\"state.searchUsers:  \", this.state.searchUsers);\n        // this.fetchUsers();\n      })\n      .catch(err => {\n        console.log(err);\n        this.context.userAlert = err;\n      });\n\n  }\n  modalConfirmSearchAttendanceDateHandler = (event) => {\n\n    let userId = this.context.userId;\n    this.setState({ searching: false });\n\n    console.log(\"SearchUserAttendanceDateFormData:\");\n\n    const attendanceDate = event.target.formBasicDate.value;\n\n    const requestBody = {\n      query: `\n        query {getUserAttendanceDate(userId:\"${userId}\",attendanceDate:\"${attendanceDate}\")\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `}\n\n    const token = this.context.token;\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        this.context.userAlert = res.json();\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n\n        const searchUsers = resData.data.getUserField;\n\n        this.setState({ searchUsers: searchUsers})\n        console.log(\"state.searchUsers:  \", this.state.searchUsers);\n        // this.fetchUsers();\n      })\n      .catch(err => {\n        console.log(err);\n        this.context.userAlert = err;\n      });\n\n  }\n  modalConfirmSearchLeaveDateRangeHandler = (event) => {\n\n    let userId = this.context.userId;\n    this.setState({ searching: false });\n\n    console.log(\"SearchUserLeaveDateRangeFormData:\");\n\n    const startDate = event.target.formBasicStartDate.value;\n    const endDate = event.target.formBasicEndDate.value;\n\n    const requestBody = {\n      query: `\n        query{getUserLeaveDateRange(userId:\"${userId}\",startDate:\"${startDate}\",endDate:\"${endDate}\")\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `}\n\n    const token = this.context.token;\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n\n        const searchUsers = resData.data.getUserField;\n\n        this.setState({ searchUsers: searchUsers})\n        console.log(\"state.searchUsers:  \", this.state.searchUsers);\n        // this.fetchUsers();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n  }\n\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, updating: false, deleting: false, searching: false});\n  };\n\n  fetchUsers() {\n    console.log(\"'fetch users function' context object... \" + JSON.stringify(this.context));\n    const userId = this.context.userId;\n\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query {users (userId:\"${userId}\")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `};\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const users = resData.data.users;\n        console.log(\"resData:  \", resData);\n        console.log(users);\n\n        if (this.isActive) {\n          this.setState({ users: users, isLoading: false });\n        }\n        this.context.users = this.state.users;\n      })\n      .catch(err => {\n        console.log(err);\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\nmodalDeleteHandler = () => {\n  console.log(\"deleting user...selectedUser:  \", this.context.selectedUser);\n\n  const userId = this.context.userId;\n  const selectedUserId = this.context.selectedUser._id;\n\n  if(this.context.user.role !== 'admin') {\n    console.log(\"Not the Admin! No edit permission!!\");\n  }\n\n  this.setState({deleting: true});\n\n  const requestBody = {\n    query: `\n        mutation {\n          deleteUser(userId: ${userId}, selectedUserId: ${selectedUserId})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n        }\n      `};\n\n  fetch('http://localhost:10000/graphql', {\n    method: 'POST',\n    body: JSON.stringify(requestBody),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.context.token\n    }\n  })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      let deletedUser = resData.data.deleteUser;\n      console.log(deletedUser);\n\n      let deletedUserId = deletedUser._id;\n      deletedUser = this.state.users.find(e => e._id === deletedUserId);\n      const deletedUserPos = this.state.users.indexOf(deletedUser);\n      const slicedArray = this.state.users.splice(deletedUserPos, 1);\n      console.log(\"deletedUser:  \", JSON.stringify(deletedUser),\"  deletedUserPos:  \", deletedUserPos, \"  slicedArray:  \", slicedArray);\n\n      this.setState({ deleting: false, selectedUser: null });\n      this.context.selectedUser = null;\n\n      this.fetchUsers();\n\n    })\n    .catch(err => {\n      console.log(err);\n      if (this.isActive) {\n        this.setState({ deleting: false });\n      }\n    });\n\n\n}\n\nupdateUserSpecial (event) {\n\n  console.log(\"special field to update:  \", event.target.value);\n  const field = event.target.value;\n  this.setState({ userUpdateField: field});\n\n}\n\n  showDetailHandler = userId => {\n\n    this.setState(prevState => {\n      const selectedUser = prevState.users.find(e => e._id === userId);\n      this.context.selectedUser = selectedUser;\n      this.setState({selectedUser: selectedUser});\n      console.log(\"User selected  :  \", selectedUser);\n      return { selectedUser: selectedUser };\n    });\n  };\n\n\n  userSearchClearlHandler () {\n    console.log(\"clearing user search results\");\n    this.setState({searchUsers: []});\n  }\n\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n\n    <React.Fragment>\n\n\n\n    <Accordion>\n\n    <Row>\n\n    <Col md={3} className=\"MasterCol1\">\n\n    <SidebarPage/>\n\n    </Col>\n\n    <Col md={6} className=\"MasterCol2\">\n\n        <Container className=\"containerCombinedDetail\">\n          <Tabs defaultActiveKey=\"userDetail\" id=\"uncontrolled-tab-example\">\n          <Tab eventKey=\"Edit\" title=\"Edit:\" disabled>\n          </Tab>\n            <Tab eventKey=\"userDetail\" title=\"Details\">\n                  {this.state.selectedUser === null && (\n                    <Button variant=\"outline-warning\" size=\"lg\">\n                      Select a Staff member from the Master List below\n                    </Button>\n                  )}\n                  {this.state.isLoading === false &&\n                    this.state.selectedUser !== null\n                    && (\n                      <UserDetail\n                      authUserId={this.context.userId}\n                      AuthContext={this.context}\n                      user={this.state.selectedUser}\n                      onEdit={this.startUpdateUserHandler}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.modalDeleteHandler}\n                      />\n                    )}\n            </Tab>\n\n            { this.context.user.role === \"admin\" && (\n              <Tab eventKey=\"userCreate\" title=\"New\">\n              <Button variant=\"outline-primary\" onClick={this.startCreateUserHandler} >Create</Button>\n              {this.state.creating && (\n                <CreateUserForm\n                  authUserId={this.context.userId}\n                  canCancel\n                  canConfirm\n                  onCancel={this.modalCancelHandler}\n                  onConfirm={this.modalConfirmHandler}\n                  onSubmit={this.modalConfirmHandler}\n                  confirmText=\"Confirm\"\n                />\n              )}\n              </Tab>\n            )}\n\n            <Tab eventKey=\"userEditDemographics\" title=\"Demographics\">\n            {this.state.selectedUser === null && (\n              <Button variant=\"outline-warning\" size=\"lg\">\n                Select a Staff member from the Master List below\n              </Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.context.user.role === \"admin\"\n              && (\n              <Button variant=\"outline-primary\" onClick={this.startUpdateUserHandler}>Edit Demographics as Admin</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id\n              && (\n              <Button variant=\"outline-primary\" onClick={this.startUpdateUserHandler}>Edit Demographics (your profile)</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Your Profile\n              </Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id !== this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Not my profile\n              </Button>\n            )}\n            {this.state.updating &&\n              this.state.selectedUser !== null\n              && (\n              <UpdateUserForm\n                authUserId={this.context.userId}\n                canCancel\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.modalConfirmUpdateHandler}\n                confirmText=\"Confirm\"\n                user={this.context.selectedUser}\n              />\n            )}\n\n            </Tab>\n\n            <Tab eventKey=\"userEditField\" title=\"Single Field\">\n            {this.state.selectedUser === null && (\n              <Button variant=\"outline-warning\" size=\"lg\">\n                Select a Staff member from the Master List below\n              </Button>\n            )}\n\n            {this.state.selectedUser !== null &&\n              this.context.user.role === \"admin\"\n              && (\n              <Button variant=\"outline-primary\" onClick={this.startUpdateUserHandler}>Edit Field as Admin</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id\n              && (\n              <Button variant=\"outline-primary\" onClick={this.startUpdateUserHandler}>Edit Field (your profile)</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Your Profile\n              </Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id !== this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Not my profile\n              </Button>\n            )}\n            {this.state.updating &&\n              this.state.selectedUser !== null\n              && (\n                <UpdateUserFieldForm\n                  authUserId={this.context.userId}\n                  canCancel\n                  canConfirm\n                  onCancel={this.modalCancelHandler}\n                  onConfirm={this.modalConfirmUpdateFieldHandler}\n                  confirmText=\"Confirm\"\n                  user={this.state.selectedUser}\n                />\n            )}\n            </Tab>\n\n            <Tab eventKey=\"userEditAttendance\" title=\"Attendance\">\n            {this.state.selectedUser === null && (\n              <Button variant=\"outline-warning\" size=\"lg\">\n                Select a Staff member from the Master List below\n              </Button>\n            )}\n\n            {this.state.selectedUser !== null &&\n              this.context.user.role === \"admin\"\n              && (\n              <Button variant=\"outline-primary\" value='attendance' onClick={this.updateUserSpecial.bind(this)}>Add Attendance as Admin</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id\n              && (\n              <Button variant=\"outline-primary\" value='attendance' onClick={this.updateUserSpecial.bind(this)}>Add Attendance (your profile)</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Your Profile\n              </Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id !== this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Not my profile\n              </Button>\n            )}\n\n            {this.state.userUpdateField === 'attendance' &&\n            this.state.selectedUser !== null\n             && (\n               <UpdateUserAttendanceForm\n              authUserId={this.context.userId}\n              canCancel\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.updateUserAttendanceHandler}\n                confirmText=\"Confirm\"\n                user={this.state.selectedUser}\n              />\n            )}\n            </Tab>\n\n            <Tab eventKey=\"userEditLeave\" title=\"Leave\">\n            {this.state.selectedUser === null && (\n              <Button variant=\"outline-warning\" size=\"lg\">\n                Select a Staff member from the Master List below\n              </Button>\n            )}\n\n            {this.state.selectedUser !== null &&\n              this.context.user.role === \"admin\"\n              && (\n              <Button variant=\"outline-primary\" value='leave' onClick={this.updateUserSpecial.bind(this)}>Add Leave as Admin</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id\n              && (\n              <Button variant=\"outline-primary\" value='leave' onClick={this.updateUserSpecial.bind(this)}>Add Leave (your profile)</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Your Profile\n              </Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id !== this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Not my profile\n              </Button>\n            )}\n\n            {this.state.userUpdateField === 'leave' &&\n            this.state.selectedUser !== null\n            && (<UpdateUserLeaveForm\n              authUserId={this.context.userId}\n              canCancel\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.updateUserLeaveHandler}\n                confirmText=\"Confirm\"\n                user={this.state.selectedUser}\n              />)}\n            </Tab>\n            <Tab eventKey=\"userEditAttachment\" title=\"Attachment\">\n            {this.state.selectedUser === null && (\n              <Button variant=\"outline-warning\" size=\"lg\">\n                Select a Staff member from the Master List below\n              </Button>\n            )}\n\n            {this.state.selectedUser !== null &&\n              this.context.user.role === \"admin\"\n              && (\n              <Button variant=\"outline-primary\" value='attachments' onClick={this.updateUserSpecial.bind(this)}>Add Attachment as Admin</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id\n              && (\n              <Button variant=\"outline-primary\" value='attachments' onClick={this.updateUserSpecial.bind(this)}>Add Attachment (your profile)</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Your Profile\n              </Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id !== this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Not my profile\n              </Button>\n            )}\n\n            {this.state.userUpdateField === 'attachments' &&\n            this.state.selectedUser !== null\n            && (<UpdateUserAttachmentForm\n              authUserId={this.context.userId}\n              canCancel\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.updateUserAttachmentHandler}\n                confirmText=\"Confirm\"\n                user={this.state.selectedUser}\n              />)}\n            </Tab>\n          </Tabs>\n        </Container>\n\n        <Container className=\"containerUserMasterList\">\n        <Row className=\"searchListRow\">\n        {this.state.isLoading ? (\n          <Spinner />\n        ) : (\n          <UserList\n            users={this.state.users}\n            authUserId={this.context.userId}\n            onViewDetail={this.showDetailHandler}\n          />)}\n        </Row>\n        </Container>\n    </Col>\n\n\n    <Col md={3} className=\"MasterCol3\">\n\n    <Container className=\"containerSearchUserInput\">\n    <Row className=\"searchUserRowAdd\">\n      {this.context.token && (\n      <Accordion.Toggle as={Button} variant=\"primary\" eventKey=\"3\" onClick={this.startSearchUserHandler}>\n      Search\n      </Accordion.Toggle>)}\n    </Row>\n\n    <Accordion.Collapse eventKey=\"3\">\n    <Row className=\"searchUserRowForm\">\n    <Col md={10} className=\"searchUserColForm\">\n    <Tabs defaultActiveKey=\"userSearch\" id=\"uncontrolled-tab-example\">\n    <Tab eventKey=\"Search\" title=\"Search:\" disabled>\n    </Tab>\n    <Tab eventKey=\"Field\" title=\"Field:\">\n    {this.state.searching === true && (\n      <SearchUserForm\n      authUserId={this.context.userId}\n      canCancel\n        canConfirm\n        onCancel={this.modalCancelHandler}\n        onConfirm={this.modalConfirmSearchHandler}\n        confirmText=\"Search\"\n        user={this.context.selectedUser}\n      />)}\n    </Tab>\n    <Tab eventKey=\"Id\" title=\"Id:\">\n    {this.state.searching === true && (\n      <SearchUserIdForm\n      authUserId={this.context.userId}\n      canCancel\n        canConfirm\n        onCancel={this.modalCancelHandler}\n        onConfirm={this.modalConfirmSearchIdHandler}\n        confirmText=\"Search\"\n        user={this.context.selectedUser}\n      />\n      )}\n    </Tab>\n    <Tab eventKey=\"Attendance\" title=\"Attendance:\">\n    {this.state.searching === true && (\n      <SearchUserAttendanceDateForm\n      authUserId={this.context.userId}\n      canCancel\n        canConfirm\n        onCancel={this.modalCancelHandler}\n        onConfirm={this.modalConfirmSearchAttendanceDateHandler}\n        confirmText=\"Search\"\n        user={this.context.selectedUser}\n      />\n      )}\n    </Tab>\n    <Tab eventKey=\"Leave\" title=\"Leave:\">\n    {this.state.searching === true && (\n      <SearchUserLeaveDateRangeForm\n      authUserId={this.context.userId}\n      canCancel\n        canConfirm\n        onCancel={this.modalCancelHandler}\n        onConfirm={this.modalConfirmSearchLeaveDateRangeHandler}\n        confirmText=\"Search\"\n        user={this.context.selectedUser}\n      />\n      )}\n    </Tab>\n    </Tabs>\n    </Col>\n    <Col md={10}>\n    </Col>\n    </Row>\n    </Accordion.Collapse>\n    </Container>\n\n\n    <Container className=\"containerSearchUserResults\">\n    <Row>\n      <Card className=\"searchCard\">\n        <Card.Body className=\"searchCardBody\">\n          <Card.Title>Your Search</Card.Title>\n          <Card.Text>\n            Field: {this.state.userSearchField}\n          </Card.Text>\n          <Card.Text>\n            Query: {this.state.userSearchQuery}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </Row>\n    <Row className=\"searchListRow\">\n    {this.state.searchUsers !== [] && (\n      <SearchUserList\n        searchUsers={this.state.searchUsers}\n        authUserId={this.context.userId}\n        onViewDetail={this.showDetailHandler}\n      />\n    )}\n    </Row>\n    </Container>\n\n\n  </Col>\n  </Row>\n\n</Accordion>\n</React.Fragment>\n    );\n  }\n}\n\nexport default UsersPage;\n"]},"metadata":{},"sourceType":"module"}