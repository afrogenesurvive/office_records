{"ast":null,"code":"import _extends from \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdatePatientFieldForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion'; // import FormCheck from 'react-bootstrap/FormCheck'\n// import AuthContext from '../../context/auth-context';\n\nimport './CreateUserForm.css';\n\nconst UpdatePatientFieldForm = props => {\n  console.log(\"UpdatePatientFieldForm.props:  \", _objectSpread({}, props));\n\n  const patient = _extends({}, props.patient);\n\n  console.log(\"UpdatePatientFieldForm.props.user:  \", _objectSpread({}, patient));\n  let fieldOption = this.formGridFieldSelect.value;\n  return React.createElement(\"div\", {\n    className: \"UpdateFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: props.onConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridFieldSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    as: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"name\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"dob\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"age\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"gender\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"address.town\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"address.parish\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"registrationDate\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"referralDate\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"expirationDate\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"attendingPhysician.name\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"referringDoctor.name\"))), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridField\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Field\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridQuery\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Query\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Query\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))), props.canCancel && React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"danger\",\n    eventKey: \"2\",\n    className: \"btn\",\n    onClick: props.onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Cancel\"), props.canCancelProfile && React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"danger\",\n    eventKey: \"5\",\n    className: \"btn\",\n    onClick: props.onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Cancel\"), props.canConfirm && // <Accordion.Toggle as={Button} variant=\"success\" eventKey=\"2\" className=\"btn\" type=\"submit\">\n  // Submit\n  // </Accordion.Toggle>\n  React.createElement(Button, {\n    variant: \"success\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default UpdatePatientFieldForm;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdatePatientFieldForm.js"],"names":["React","Form","Button","Col","Accordion","UpdatePatientFieldForm","props","console","log","patient","fieldOption","formGridFieldSelect","value","onConfirm","canCancel","onCancel","canCancelProfile","canConfirm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion'\n// import FormCheck from 'react-bootstrap/FormCheck'\n// import AuthContext from '../../context/auth-context';\nimport './CreateUserForm.css';\n\nconst UpdatePatientFieldForm = (props) => {\n\nconsole.log(\"UpdatePatientFieldForm.props:  \", {...props});\nconst {...patient} = props.patient;\nconsole.log(\"UpdatePatientFieldForm.props.user:  \", {...patient});\nlet fieldOption = this.formGridFieldSelect.value;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridFieldSelect\">\n<Form.Control as=\"select\">\n<option>name</option>\n<option>dob</option>\n<option>age</option>\n<option>gender</option>\n<option>address.town</option>\n<option>address.parish</option>\n<option>registrationDate</option>\n<option>referralDate</option>\n<option>expirationDate</option>\n<option>attendingPhysician.name</option>\n<option>referringDoctor.name</option>\n</Form.Control>\n</Form.Group>\n  <Form.Group as={Col} controlId=\"formGridField\">\n    <Form.Label>Field</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Field\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridQuery\">\n    <Form.Label>Query</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Query\"/>\n  </Form.Group>\n</Form.Row>\n\n\n{props.canCancel && (\n  <Accordion.Toggle as={Button} variant=\"danger\" eventKey=\"2\" className=\"btn\" onClick={props.onCancel}>\n  Cancel\n  </Accordion.Toggle>\n)}\n{props.canCancelProfile && (\n  <Accordion.Toggle as={Button} variant=\"danger\" eventKey=\"5\" className=\"btn\" onClick={props.onCancel}>\n  Cancel\n  </Accordion.Toggle>\n)}\n\n{props.canConfirm && (\n  // <Accordion.Toggle as={Button} variant=\"success\" eventKey=\"2\" className=\"btn\" type=\"submit\">\n  // Submit\n  // </Accordion.Toggle>\n  <Button variant=\"success\" type=\"submit\">\n  Submit\n  </Button>\n)}\n\n</Form>\n{\n  // <AuthContext.Consumer>\n// </AuthContext.Consumer>\n}\n</div>\n\n)};\n\nexport default UpdatePatientFieldForm;\n"]},"metadata":{},"sourceType":"module"}