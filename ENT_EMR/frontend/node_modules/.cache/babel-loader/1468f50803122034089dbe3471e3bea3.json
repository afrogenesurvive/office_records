{"ast":null,"code":"import _extends from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";import _objectSpread from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import Form from'react-bootstrap/Form';import Button from'react-bootstrap/Button';import Col from'react-bootstrap/Col';import Accordion from'react-bootstrap/Accordion';// import FormCheck from 'react-bootstrap/FormCheck'\nimport AuthContext from'../../context/auth-context';import'./CreateUserForm.css';var UpdatePatientHistoryForm=function UpdatePatientHistoryForm(props){console.log(\"UpdatePatientHistoryForm.props:  \",_objectSpread({},props));var patient=_extends({},props.patient);console.log(\"UpdatePatientHistoryForm.props.patient:  \",_objectSpread({},patient));return React.createElement(\"div\",{className:\"UpdateFormContainer\"},React.createElement(Form,{onSubmit:props.onConfirm},React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridHistoryType\"},React.createElement(Form.Label,null,\"Type\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"HistoryType\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridHistoryDate\"},React.createElement(Form.Label,null,\"Date\"),React.createElement(Form.Control,{type:\"date\",placeholder:\"HistoryDate\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridHistoryDateTodayCheckbox\"},React.createElement(Form.Label,null,\"Today's Date?\"),React.createElement(Form.Control,{type:\"checkbox\",onChange:function onChange(e){console.log(e.target.checked);}})),React.createElement(Form.Group,{as:Col,controlId:\"formGridHistoryTitle\"},React.createElement(Form.Label,null,\"Title\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"HistoryTitle\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridHistoryDescription\"},React.createElement(Form.Label,null,\"Description\"),React.createElement(Form.Control,{as:\"textarea\",rows:\"3\",placeholder:\"HistoryDescription\"}))),React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridHistoryAttachmentFormat\"},React.createElement(Form.Label,null,\"Attachment Format\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"HistoryAttachmentFormat\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridHistoryAttachmentFile\"},React.createElement(Form.Label,null,\"File\"),React.createElement(Form.Control,{type:\"file\",placeholder:\"File\",onChange:function onChange(e){console.log(e.target.files[0]);AuthContext._currentValue.file=e.target.files[0];console.log(AuthContext._currentValue.file);}}))),props.canCancel&&React.createElement(Accordion.Toggle,{as:Button,variant:\"danger\",eventKey:\"9\",className:\"btn\",onClick:props.onCancel},\"Cancel\"),props.canConfirm&&React.createElement(Accordion.Toggle,{as:Button,variant:\"success\",eventKey:\"9\",className:\"btn\",type:\"submit\"},\"Submit\")));};export default UpdatePatientHistoryForm;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdatePatientHistoryForm.js"],"names":["React","Form","Button","Col","Accordion","AuthContext","UpdatePatientHistoryForm","props","console","log","patient","onConfirm","e","target","checked","files","_currentValue","file","canCancel","onCancel","canConfirm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion'\n// import FormCheck from 'react-bootstrap/FormCheck'\nimport AuthContext from '../../context/auth-context';\nimport './CreateUserForm.css';\n\nconst UpdatePatientHistoryForm = (props) => {\n\nconsole.log(\"UpdatePatientHistoryForm.props:  \", {...props});\nconst {...patient} = props.patient;\nconsole.log(\"UpdatePatientHistoryForm.props.patient:  \", {...patient});\n\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridHistoryType\">\n    <Form.Label>Type</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"HistoryType\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridHistoryDate\">\n    <Form.Label>Date</Form.Label>\n    <Form.Control type=\"date\" placeholder=\"HistoryDate\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridHistoryDateTodayCheckbox\">\n    <Form.Label>Today's Date?</Form.Label>\n    <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridHistoryTitle\">\n    <Form.Label>Title</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"HistoryTitle\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridHistoryDescription\">\n    <Form.Label>Description</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"HistoryDescription\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n\n  <Form.Group as={Col} controlId=\"formGridHistoryAttachmentFormat\">\n    <Form.Label>Attachment Format</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"HistoryAttachmentFormat\"/>\n  </Form.Group>\n  {\n  //   <Form.Group as={Col} controlId=\"formGridAttachmentPath\">\n  //   <Form.Label>Path</Form.Label>\n  //   <Form.Control type=\"string\" placeholder=\"File path\"/>\n  // </Form.Group>\n}\n  <Form.Group as={Col} controlId=\"formGridHistoryAttachmentFile\">\n    <Form.Label>File</Form.Label>\n    <Form.Control type=\"file\" placeholder=\"File\" onChange={(e) => {console.log(e.target.files[0]);AuthContext._currentValue.file = e.target.files[0];console.log(AuthContext._currentValue.file);}}/>\n  </Form.Group>\n  </Form.Row>\n\n\n{props.canCancel && (\n  <Accordion.Toggle as={Button} variant=\"danger\" eventKey=\"9\" className=\"btn\" onClick={props.onCancel}>\n  Cancel\n  </Accordion.Toggle>\n)}\n\n{props.canConfirm && (\n  <Accordion.Toggle as={Button} variant=\"success\" eventKey=\"9\" className=\"btn\" type=\"submit\">\n  Submit\n  </Accordion.Toggle>\n)}\n\n</Form>\n{\n  // <Form.Group as={Col} controlId=\"formGridHistoryAttachmentName\">\n  //   <Form.Label>HistoryAttachmentName</Form.Label>\n  //   <Form.Control type=\"text\" placeholder=\"HistoryAttachmentName\"/>\n  // </Form.Group>\n  // <AuthContext.Consumer>\n// </AuthContext.Consumer>\n}\n</div>\n\n)};\n\nexport default UpdatePatientHistoryForm;\n"]},"metadata":{},"sourceType":"module"}