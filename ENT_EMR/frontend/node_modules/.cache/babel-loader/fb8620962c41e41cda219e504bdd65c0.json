{"ast":null,"code":"var _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport AuthPage from './pages/Auth';\nimport UsersPage from './pages/Users';\nimport PatientsPage from './pages/Patients';\nimport ThisUserPage from './pages/thisUser';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null,\n      userId: null // sessionStorageAuth: null\n\n    };\n\n    this.login = (token, userId, tokenExpiration) => {\n      this.setState({\n        token: token,\n        userId: userId\n      });\n    };\n\n    this.logout = () => {\n      this.setState({\n        token: null,\n        userId: null\n      });\n      sessionStorage.clear();\n    };\n\n    this.sessionStorageAuth = null;\n  }\n\n  // const sessionStorageAuth = sessionStorage.getItem('login info');\n  // console.log(\"sessionStorageAuth:  \", JSON.stringify(sessionStorageAuth));\n  componentDidMount() {\n    const sessionStorageAuth = sessionStorage.getItem('login info');\n    this.sessionStorageAuth = sessionStorageAuth;\n    console.log(\"sessionStorageAuth:  \", this.sessionStorageAuth.token);\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(AuthContext.Provider, {\n      value: {\n        token: this.state.token,\n        userId: this.state.userId,\n        user: {},\n        patient: {},\n        appointment: {},\n        login: this.login,\n        logout: this.logout\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(MainNavigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: \"main-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, // logged in -> pages\n    this.state.token && React.createElement(Redirect, {\n      from: \"/\",\n      to: \"/users\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), this.state.token && React.createElement(Route, {\n      path: \"/users\",\n      component: UsersPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), this.state.token && React.createElement(Route, {\n      path: \"/patients\",\n      component: PatientsPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), this.state.token && React.createElement(Route, {\n      path: \"/profile\",\n      component: ThisUserPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), // logged in -> users page from login page\n    this.state.token && React.createElement(Redirect, {\n      from: \"/auth\",\n      to: \"/users\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), //if not logged in -> go to login page\n    !this.state.token && React.createElement(Route, {\n      path: \"/auth\",\n      component: AuthPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), !this.state.token && React.createElement(Redirect, {\n      to: \"/auth\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/App.js"],"names":["React","Component","BrowserRouter","Route","Redirect","Switch","AuthPage","UsersPage","PatientsPage","ThisUserPage","MainNavigation","AuthContext","App","constructor","props","state","token","userId","login","tokenExpiration","setState","logout","sessionStorage","clear","sessionStorageAuth","componentDidMount","getItem","console","log","render","user","patient","appointment"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport AuthPage from './pages/Auth';\nimport UsersPage from './pages/Users';\nimport PatientsPage from './pages/Patients';\nimport ThisUserPage from './pages/thisUser';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    userId: null,\n    // sessionStorageAuth: null\n  };\n\n  constructor(props) {\n    super(props);\n    this.sessionStorageAuth = null;\n  }\n\n  login = (token, userId, tokenExpiration) => {\n    this.setState({ token: token, userId: userId });\n  };\n\n  logout = () => {\n    this.setState({ token: null, userId: null });\n    sessionStorage.clear();\n  };\n\n  // const sessionStorageAuth = sessionStorage.getItem('login info');\n  // console.log(\"sessionStorageAuth:  \", JSON.stringify(sessionStorageAuth));\n  componentDidMount() {\n    const sessionStorageAuth = sessionStorage.getItem('login info');\n    this.sessionStorageAuth = sessionStorageAuth;\n    console.log(\"sessionStorageAuth:  \", this.sessionStorageAuth.token);\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              userId: this.state.userId,\n              user: {},\n              patient: {},\n              appointment: {},\n              login: this.login,\n              logout: this.logout\n            }}\n          >\n            <MainNavigation />\n            <main className=\"main-content\">\n              <Switch>\n\n                { // logged in -> pages\n                this.state.token && <Redirect from=\"/\" to=\"/users\" exact />}\n                {this.state.token && (<Route path=\"/users\" component={UsersPage} />)}\n                {this.state.token && (<Route path=\"/patients\" component={PatientsPage} />)}\n                {this.state.token && (<Route path=\"/profile\" component={ThisUserPage} />)}\n\n                { // logged in -> users page from login page\n                  this.state.token && (<Redirect from=\"/auth\" to=\"/users\" exact />)}\n\n                { //if not logged in -> go to login page\n                  !this.state.token && (<Route path=\"/auth\" component={AuthPage} />)}\n                {!this.state.token && <Redirect to=\"/auth\" exact />}\n              </Switch>\n            </main>\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}