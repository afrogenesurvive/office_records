{"ast":null,"code":"var _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/thisUser.js\";\nimport React, { Component } from 'react';\nimport UpdateUserForm from '../components/Forms/UpdateUserForm';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\nimport SidebarPage from './Sidebar';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport UpdateUserAttendanceForm from '../components/Forms/UpdateUserAttendanceForm';\nimport UpdateUserAttachmentForm from '../components/Forms/UpdateUserAttachmentForm';\nimport UpdateUserLeaveForm from '../components/Forms/UpdateUserLeaveForm'; // import Modal from '../components/Modal/Modal';\n// import Backdrop from '../components/Backdrop/Backdrop';\n\nimport ThisUserProfile from '../components/Users/thisUserProfile';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport './Users.css';\n\nclass ThisUserPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      users: [],\n      updating: false,\n      isLoading: false,\n      userUpdateField: null\n    };\n    this.isActive = true;\n\n    this.startUpdateUserHandler = () => {\n      this.setState({\n        updating: true\n      });\n      console.log(\"UpdateUserForm...\");\n    };\n\n    this.modalConfirmUpdateHandler = event => {\n      let userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id;\n\n      if (userId !== selectedUserId && this.context.user.role !== 'admin') {\n        console.log(\"Not the creator or Admin! No edit permission!!\");\n        selectedUserId = null;\n      }\n\n      console.log(\"UpdateUserFormData:  \", event.target.formGridEmail.value);\n      this.setState({\n        updating: false\n      });\n      let email = event.target.formGridEmail.value;\n      let password = event.target.formGridPassword.value;\n      let name = event.target.formGridName.value;\n      let role = event.target.formGridRole.value;\n\n      if (email.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        email = this.state.user.email; // return;\n      }\n\n      if (password.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        password = this.state.user.password;\n      }\n\n      if (name.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        name = this.state.user.name;\n      }\n\n      if (role.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        role = this.state.user.role;\n      }\n\n      const user = {\n        email,\n        password,\n        name,\n        role\n      };\n      console.log(\"updating user.. \" + JSON.stringify(user));\n      const requestBody = {\n        query: \"\\n          mutation UpdateUser($userId: ID!, $selectedUserId: ID!, $email: String!, $password: String!, $name: String!, $role: String!) {\\n            updateUser(userId: $userId, selectedUserId: $selectedUserId, userInput: {email: $email, password: $password, name: $name, role: $role}) {\\n              _id\\n              name\\n              email\\n              role\\n              employmentDate\\n              terminationDate\\n              attachments{\\n                name\\n                format\\n                path\\n              }\\n              attendance{\\n                date\\n                status\\n                description\\n              }\\n              leave{\\n                type\\n                startDate\\n                endDate\\n              }\\n            }\\n          }\\n        \",\n        variables: {\n          userId: userId,\n          selectedUserId: userId,\n          email: email,\n          password: password,\n          name: name,\n          role: role\n        }\n      };\n      const token = this.context.token;\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const updatedUser = resData.data.updateUser;\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser));\n        this.setState({\n          user: updatedUser\n        });\n        this.state.users.push({\n          _id: resData.data.updateUser._id,\n          email: resData.data.updateUser.email,\n          name: resData.data.updateUser.name,\n          role: resData.data.updateUser.role\n        });\n        this.context.users = this.state.users; // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.updateUserAttendanceHandler = event => {\n      const token = this.context.token;\n      const userId = this.state.user._id; // let selectedUserId = this.context.selectedUser._id;\n      // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      //   console.log(\"Not the creator or Admin! No edit permission!!\");\n      //   selectedUserId = null;\n      // }\n\n      console.log(\"UpdateUserAttendanceFormData:  \", event.target.formGridAttendanceDate.value);\n      this.setState({\n        updating: false,\n        userUpdateField: null\n      });\n      let attendanceDate = event.target.formGridAttendanceDate.value;\n      let attendanceStatus = event.target.formGridAttendanceStatus.value;\n      let attendanceDescription = event.target.formGridAttendanceDescription.value;\n\n      if (attendanceDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        attendanceDate = this.context.selectedUser.attendanceDate;\n      }\n\n      if (attendanceStatus.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        attendanceStatus = this.context.selectedUser.attendanceStatus;\n      }\n\n      if (attendanceDescription.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        attendanceDescription = this.context.selectedUser.attendanceDescription;\n      }\n\n      const userAttendance = {\n        attendanceDate,\n        attendanceStatus,\n        attendanceDescription\n      };\n      console.log(\"\\n      adding user attendance item...\\n      userId: \".concat(userId, \",\\n      attendanceDate: \").concat(attendanceDate, \",\\n      attendanceStatus: \").concat(attendanceStatus, \",\\n      attendanceDescription: \").concat(attendanceDescription, \"\\n      \"));\n      const requestBody = {\n        query: \"\\n          mutation {updateUserAttendance(userId:\\\"\".concat(userId, \"\\\", selectedUserId:\\\"\").concat(userId, \"\\\",userInput:{attendanceDate:\\\"\").concat(attendanceDate, \"\\\",attendanceStatus:\\\"\").concat(attendanceStatus, \"\\\",attendanceDescription:\\\"\").concat(attendanceDescription, \"\\\"}){_id,name,email,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description}}}\\n        \")\n      };\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data.updateUserAttendance));\n        const updatedUserId = resData.data.updateUserAttendance._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(updatedUser);\n        this.context.users = this.state.users; // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.updateUserLeaveHandler = event => {\n      const token = this.context.token;\n      const userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id;\n\n      if (userId !== selectedUserId && this.context.user.role !== 'admin') {\n        console.log(\"Not the creator or Admin! No edit permission!!\");\n        selectedUserId = null;\n      }\n\n      console.log(\"UpdateUserLeaveFormData:  \", event.target.formGridLeaveType.value);\n      this.setState({\n        updating: false,\n        userUpdateField: null\n      });\n      let leaveType = event.target.formGridLeaveType.value;\n      let leaveStartDate = event.target.formGridLeaveStartDate.value;\n      let leaveEndDate = event.target.formGridLeaveEndDate.value;\n\n      if (leaveType.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        leaveType = this.context.selectedUser.leaveType;\n      }\n\n      if (leaveStartDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        leaveStartDate = this.context.selectedUser.leaveStartDate;\n      }\n\n      if (leaveEndDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        leaveEndDate = this.context.selectedUser.leaveEndDate;\n      }\n\n      const userLeave = {\n        leaveType,\n        leaveStartDate,\n        leaveEndDate\n      };\n      console.log(\"\\n      adding user attendance item...\\n      userId: \".concat(userId, \",\\n      selectedUserId: \").concat(selectedUserId, \"\\n      leave: {\\n        type: \").concat(leaveType, \",\\n        startDate: \").concat(leaveStartDate, \",\\n        endDate: \").concat(leaveEndDate, \"\\n      }\\n      \"));\n      const requestBody = {\n        query: \"\\n          mutation {updateUserLeave(userId:\\\"\".concat(userId, \"\\\", selectedUserId:\\\"\").concat(selectedUserId, \"\\\",userInput:{leaveType:\\\"\").concat(leaveType, \"\\\",leaveStartDate:\\\"\").concat(leaveStartDate, \"\\\",leaveEndDate:\\\"\").concat(leaveEndDate, \"\\\"}){_id,name,email,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,startDate,endDate}}}\\n        \")\n      };\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data));\n        const updatedUserId = resData.data.updateUserLeave._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(updatedUser);\n        this.context.users = this.state.users; // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.modalCancelHandler = () => {\n      this.setState({\n        updating: false\n      });\n    };\n\n    this.emailElRef = React.createRef();\n    this.passwordElRef = React.createRef();\n    this.nameElRef = React.createRef();\n    this.roleElRef = React.createRef();\n    this.user = null;\n  }\n\n  componentDidMount() {\n    this.getThisUser();\n  }\n\n  getThisUser() {\n    this.setState({\n      isLoading: true\n    });\n    const requestBody = {\n      query: \"\\n          query {\\n            getThisUser {\\n              _id\\n              name\\n              email\\n              role\\n              employmentDate\\n              terminationDate\\n              attachments{\\n                name\\n                format\\n                path\\n              }\\n              attendance{\\n                date\\n                status\\n                description\\n              }\\n              leave{\\n                type\\n                startDate\\n                endDate\\n              }\\n            }\\n          }\\n        \"\n    };\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n\n      return res.json();\n    }).then(resData => {\n      // console.log(\"resdata...\" + JSON.stringify(resData));\n      const thisUser = resData.data.getThisUser;\n\n      if (this.isActive) {\n        this.setState({\n          user: thisUser,\n          isLoading: false\n        });\n        this.context.user = thisUser;\n        console.log(\"thisUser context, user object.name ...\" + this.context.user.name);\n        console.log(\"thisUser context, user object.role ...\" + this.context.user.role);\n        sessionStorage.setItem('thisUser', JSON.stringify(thisUser));\n      }\n    }).catch(err => {\n      console.log(err);\n\n      if (this.isActive) {\n        this.setState({\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  fetchUsers() {\n    console.log(\"'fetch users function' context object... \" + JSON.stringify(this.context));\n    const userId = this.context.userId;\n    this.setState({\n      isLoading: true\n    });\n    const requestBody = {\n      query: \"\\n          query users($userId: ID!) {\\n            users(userId: $userId) {\\n              _id\\n              name\\n              email\\n              role\\n              employmentDate\\n              terminationDate\\n              attachments{\\n                name\\n                format\\n                path\\n              }\\n              attendance{\\n                date\\n                status\\n                description\\n              }\\n              leave{\\n                type\\n                startDate\\n                endDate\\n              }\\n            }\\n          }\\n        \",\n      variables: {\n        userId: userId\n      }\n    };\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n\n      return res.json();\n    }).then(resData => {\n      const users = resData.data.users;\n      console.log(users);\n\n      if (this.isActive) {\n        this.setState({\n          users: users,\n          isLoading: false\n        });\n      }\n\n      this.context.users = this.state.users;\n    }).catch(err => {\n      console.log(err);\n\n      if (this.isActive) {\n        this.setState({\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  updateUserSpecialProfile(event) {\n    console.log(\"special field to update:  \", event.target.value);\n    const field = event.target.value;\n    this.setState({\n      userUpdateField: field\n    });\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 3,\n      className: \"MasterCol1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, React.createElement(SidebarPage, {\n      you: this.state.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 9,\n      className: \"MasterCol2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"containerProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"profile\",\n      id: \"uncontrolled-tab-example2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      eventKey: \"Detail\",\n      title: \"Detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, this.state.user !== null && React.createElement(ThisUserProfile, {\n      user: this.state.user,\n      authUserId: this.context.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Demographics\",\n      title: \"Demographics\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.startUpdateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, \"Edit Demographics\"), this.state.updating === true && React.createElement(UpdateUserForm, {\n      canCancelProfile: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmUpdateHandler,\n      confirmText: \"Confirm\",\n      user: this.state.user,\n      authUserId: this.context.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Atttendance\",\n      title: \"Atttendance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"attendance\",\n      onClick: this.updateUserSpecialProfile.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, \"Edit Attendance\"), this.state.userUpdateField === 'attendance' && React.createElement(UpdateUserAttendanceForm, {\n      authUserId: this.context.userId,\n      canCancelProfile: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserAttendanceHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Leave\",\n      title: \"Leave\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"leave\",\n      onClick: this.updateUserSpecialProfile.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, \"Edit Leave\"), this.state.userUpdateField === 'leave' && React.createElement(UpdateUserLeaveForm, {\n      authUserId: this.context.userId,\n      canCancelProfile: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserLeaveHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Attachment\",\n      title: \"Attachment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"attachments\",\n      onClick: this.updateUserSpecialProfile.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, \"Edit Attachment\"), this.state.userUpdateField === 'attachments' && React.createElement(UpdateUserAttachmentForm, {\n      authUserId: this.context.userId,\n      canCancelProfile: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserAttachmentHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    })))))), React.createElement(Accordion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"containerUserProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"UserProfileRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      className: \"UserProfileCol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    }, this.state.user !== null && React.createElement(ThisUserProfile, {\n      user: this.state.user,\n      authUserId: this.context.userId,\n      onEdit: this.startUpdateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }))), this.state.updating === true && React.createElement(Row, {\n      className: \"createUserRowForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      className: \"createUserColForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    }, React.createElement(UpdateUserForm, {\n      canCancelProfile: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmUpdateHandler,\n      confirmText: \"Confirm\",\n      user: this.state.user,\n      authUserId: this.context.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      className: \"createUserRowAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 3,\n      className: \"updateUserCol2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627\n      },\n      __self: this\n    }, \"Edit Special\")), React.createElement(Col, {\n      md: 9,\n      className: \"updateUserCol2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629\n      },\n      __self: this\n    }, this.context.token && React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"5\",\n      className: \"btn\",\n      value: \"attendance\",\n      onClick: this.updateUserSpecialProfile.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631\n      },\n      __self: this\n    }, \"Attendance\"), this.context.token && React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"5\",\n      className: \"btn\",\n      value: \"leave\",\n      onClick: this.updateUserSpecialProfile.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }, \"Leave\"), this.context.token && React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"5\",\n      className: \"btn\",\n      value: \"attachments\",\n      onClick: this.updateUserSpecialProfile.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641\n      },\n      __self: this\n    }, \"Attachments\"))), React.createElement(Accordion.Collapse, {\n      eventKey: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"updateUserRowForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 10,\n      className: \"updateUserColForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650\n      },\n      __self: this\n    }, this.state.userUpdateField === 'attendance' && React.createElement(UpdateUserAttendanceForm, {\n      authUserId: this.context.userId,\n      canCancelProfile: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserAttendanceHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652\n      },\n      __self: this\n    }), this.state.userUpdateField === 'leave' && React.createElement(UpdateUserLeaveForm, {\n      authUserId: this.context.userId,\n      canCancelProfile: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserLeaveHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663\n      },\n      __self: this\n    }), this.state.userUpdateField === 'attachments' && React.createElement(UpdateUserAttachmentForm, {\n      authUserId: this.context.userId,\n      canCancelProfile: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserAttachmentHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nThisUserPage.contextType = AuthContext;\nexport default ThisUserPage;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/thisUser.js"],"names":["React","Component","UpdateUserForm","Container","Row","Col","Accordion","Button","SidebarPage","Tabs","Tab","UpdateUserAttendanceForm","UpdateUserAttachmentForm","UpdateUserLeaveForm","ThisUserProfile","Spinner","AuthContext","ThisUserPage","constructor","props","state","user","users","updating","isLoading","userUpdateField","isActive","startUpdateUserHandler","setState","console","log","modalConfirmUpdateHandler","event","userId","context","selectedUserId","selectedUser","_id","role","target","formGridEmail","value","email","password","formGridPassword","name","formGridName","formGridRole","trim","length","JSON","stringify","requestBody","query","variables","token","fetch","method","body","headers","Authorization","then","res","status","Error","json","resData","updatedUser","data","updateUser","push","catch","err","updateUserAttendanceHandler","formGridAttendanceDate","attendanceDate","attendanceStatus","formGridAttendanceStatus","attendanceDescription","formGridAttendanceDescription","userAttendance","updateUserAttendance","updatedUserId","find","e","updatedUserPos","indexOf","slicedArray","splice","updateUserLeaveHandler","formGridLeaveType","leaveType","leaveStartDate","formGridLeaveStartDate","leaveEndDate","formGridLeaveEndDate","userLeave","updateUserLeave","modalCancelHandler","emailElRef","createRef","passwordElRef","nameElRef","roleElRef","componentDidMount","getThisUser","thisUser","sessionStorage","setItem","fetchUsers","updateUserSpecialProfile","field","componentWillUnmount","render","bind","updateUserAttachmentHandler","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport UpdateUserForm from '../components/Forms/UpdateUserForm';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\nimport SidebarPage from './Sidebar';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\n\nimport UpdateUserAttendanceForm from '../components/Forms/UpdateUserAttendanceForm';\nimport UpdateUserAttachmentForm from '../components/Forms/UpdateUserAttachmentForm';\nimport UpdateUserLeaveForm from '../components/Forms/UpdateUserLeaveForm';\n\n// import Modal from '../components/Modal/Modal';\n// import Backdrop from '../components/Backdrop/Backdrop';\nimport ThisUserProfile from '../components/Users/thisUserProfile';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport './Users.css';\n\nclass ThisUserPage extends Component {\n  state = {\n    user: null,\n    users: [],\n    updating: false,\n    isLoading: false,\n    userUpdateField: null,\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.emailElRef = React.createRef();\n    this.passwordElRef = React.createRef();\n    this.nameElRef = React.createRef();\n    this.roleElRef = React.createRef();\n    this.user = null;\n  }\n\n  componentDidMount() {\n    this.getThisUser();\n  }\n\n  startUpdateUserHandler = () => {\n    this.setState({ updating: true });\n    console.log(\"UpdateUserForm...\");\n  };\n\n\n  modalConfirmUpdateHandler = (event) => {\n\n    let userId = this.context.userId;\n    let selectedUserId = this.context.selectedUser._id;\n    if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n\n      console.log(\"Not the creator or Admin! No edit permission!!\");\n      selectedUserId = null;\n    }\n\n    console.log(\"UpdateUserFormData:  \", event.target.formGridEmail.value);\n\n    this.setState({ updating: false });\n    let email = event.target.formGridEmail.value;\n    let password = event.target.formGridPassword.value;\n    let name = event.target.formGridName.value;\n    let role = event.target.formGridRole.value;\n\n    if (email.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      email  = this.state.user.email;\n      // return;\n    }\n    if (password.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      password = this.state.user.password;\n    }\n    if (name.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      name  = this.state.user.name;\n    }\n    if (role.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      role  = this.state.user.role;\n    }\n\n\n    const user = { email, password, name, role };\n    console.log(\"updating user.. \" + JSON.stringify(user));\n\n    const requestBody = {\n      query: `\n          mutation UpdateUser($userId: ID!, $selectedUserId: ID!, $email: String!, $password: String!, $name: String!, $role: String!) {\n            updateUser(userId: $userId, selectedUserId: $selectedUserId, userInput: {email: $email, password: $password, name: $name, role: $role}) {\n              _id\n              name\n              email\n              role\n              employmentDate\n              terminationDate\n              attachments{\n                name\n                format\n                path\n              }\n              attendance{\n                date\n                status\n                description\n              }\n              leave{\n                type\n                startDate\n                endDate\n              }\n            }\n          }\n        `,\n        variables: {\n          userId: userId,\n          selectedUserId: userId,\n          email: email,\n          password: password,\n          name: name,\n          role: role\n        }\n    };\n\n    const token = this.context.token;\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n\n        const updatedUser = resData.data.updateUser;\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser));\n\n        this.setState({user: updatedUser})\n        this.state.users.push(\n          {\n              _id: resData.data.updateUser._id,\n              email: resData.data.updateUser.email,\n              name: resData.data.updateUser.name,\n              role: resData.data.updateUser.role\n            }\n        );\n        this.context.users = this.state.users;\n        // this.fetchUsers();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n\n  updateUserAttendanceHandler = (event) => {\n\n    const token = this.context.token;\n    const userId = this.state.user._id;\n    // let selectedUserId = this.context.selectedUser._id;\n    // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n    //   console.log(\"Not the creator or Admin! No edit permission!!\");\n    //   selectedUserId = null;\n    // }\n\n    console.log(\"UpdateUserAttendanceFormData:  \", event.target.formGridAttendanceDate.value);\n\n    this.setState({ updating: false , userUpdateField: null });\n\n    let attendanceDate = event.target.formGridAttendanceDate.value;\n    let attendanceStatus = event.target.formGridAttendanceStatus.value;\n    let attendanceDescription = event.target.formGridAttendanceDescription.value;\n\n    if (attendanceDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      attendanceDate = this.context.selectedUser.attendanceDate;\n    }\n    if (attendanceStatus.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      attendanceStatus = this.context.selectedUser.attendanceStatus;\n    }\n    if (attendanceDescription.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      attendanceDescription = this.context.selectedUser.attendanceDescription;\n    }\n\n    const userAttendance = { attendanceDate, attendanceStatus, attendanceDescription }\n    console.log(`\n      adding user attendance item...\n      userId: ${userId},\n      attendanceDate: ${attendanceDate},\n      attendanceStatus: ${attendanceStatus},\n      attendanceDescription: ${attendanceDescription}\n      `);\n\n      const requestBody = {\n        query:`\n          mutation {updateUserAttendance(userId:\"${userId}\", selectedUserId:\"${userId}\",userInput:{attendanceDate:\"${attendanceDate}\",attendanceStatus:\"${attendanceStatus}\",attendanceDescription:\"${attendanceDescription}\"}){_id,name,email,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description}}}\n        `};\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData.data.updateUserAttendance));\n\n          const updatedUserId = resData.data.updateUserAttendance._id;\n          const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n          const updatedUserPos = this.state.users.indexOf(updatedUser);\n          const slicedArray = this.state.users.splice(updatedUserPos, 1);\n          console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n          this.state.users.push(updatedUser);\n          this.context.users = this.state.users;\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n        });\n\n\n  }\n\n\n  updateUserLeaveHandler = (event) => {\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n    let selectedUserId = this.context.selectedUser._id;\n    if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      console.log(\"Not the creator or Admin! No edit permission!!\");\n      selectedUserId = null;\n    }\n\n    console.log(\"UpdateUserLeaveFormData:  \", event.target.formGridLeaveType.value);\n\n    this.setState({ updating: false , userUpdateField: null });\n\n    let leaveType = event.target.formGridLeaveType.value;\n    let leaveStartDate = event.target.formGridLeaveStartDate.value;\n    let leaveEndDate = event.target.formGridLeaveEndDate.value;\n\n    if (leaveType.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      leaveType = this.context.selectedUser.leaveType;\n    }\n    if (leaveStartDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      leaveStartDate = this.context.selectedUser.leaveStartDate;\n    }\n    if (leaveEndDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      leaveEndDate = this.context.selectedUser.leaveEndDate;\n    }\n\n    const userLeave = { leaveType, leaveStartDate, leaveEndDate }\n    console.log(`\n      adding user attendance item...\n      userId: ${userId},\n      selectedUserId: ${selectedUserId}\n      leave: {\n        type: ${leaveType},\n        startDate: ${leaveStartDate},\n        endDate: ${leaveEndDate}\n      }\n      `);\n\n      const requestBody = {\n        query:`\n          mutation {updateUserLeave(userId:\"${userId}\", selectedUserId:\"${selectedUserId}\",userInput:{leaveType:\"${leaveType}\",leaveStartDate:\"${leaveStartDate}\",leaveEndDate:\"${leaveEndDate}\"}){_id,name,email,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,startDate,endDate}}}\n        `};\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData.data));\n\n          const updatedUserId = resData.data.updateUserLeave._id;\n          const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n          const updatedUserPos = this.state.users.indexOf(updatedUser);\n          const slicedArray = this.state.users.splice(updatedUserPos, 1);\n          console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n          this.state.users.push(updatedUser);\n          this.context.users = this.state.users;\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n        });\n\n\n  }\n\n\n  getThisUser() {\n\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query {\n            getThisUser {\n              _id\n              name\n              email\n              role\n              employmentDate\n              terminationDate\n              attachments{\n                name\n                format\n                path\n              }\n              attendance{\n                date\n                status\n                description\n              }\n              leave{\n                type\n                startDate\n                endDate\n              }\n            }\n          }\n        `\n    };\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(\"resdata...\" + JSON.stringify(resData));\n        const thisUser = resData.data.getThisUser;\n        if (this.isActive) {\n\n          this.setState({ user: thisUser, isLoading: false });\n\n          this.context.user = thisUser;\n          console.log(\"thisUser context, user object.name ...\" + this.context.user.name);\n          console.log(\"thisUser context, user object.role ...\" + this.context.user.role);\n\n          sessionStorage.setItem('thisUser', JSON.stringify(thisUser));\n\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n\n  modalCancelHandler = () => {\n    this.setState({ updating: false  });\n  };\n\n  fetchUsers() {\n    console.log(\"'fetch users function' context object... \" + JSON.stringify(this.context));\n    const userId = this.context.userId;\n\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query users($userId: ID!) {\n            users(userId: $userId) {\n              _id\n              name\n              email\n              role\n              employmentDate\n              terminationDate\n              attachments{\n                name\n                format\n                path\n              }\n              attendance{\n                date\n                status\n                description\n              }\n              leave{\n                type\n                startDate\n                endDate\n              }\n            }\n          }\n        `,\n        variables: {\n          userId: userId\n        }\n    };\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const users = resData.data.users;\n        console.log(users);\n\n        if (this.isActive) {\n          this.setState({ users: users, isLoading: false });\n        }\n        this.context.users = this.state.users;\n      })\n      .catch(err => {\n        console.log(err);\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  updateUserSpecialProfile (event) {\n\n    console.log(\"special field to update:  \", event.target.value);\n    const field = event.target.value;\n    this.setState({ userUpdateField: field});\n\n  }\n\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n\n      <Row>\n\n      <Col md={3} className=\"MasterCol1\">\n\n      <SidebarPage\n        you={this.state.user}\n      />\n\n      </Col>\n\n      <Col md={9} className=\"MasterCol2\">\n\n        <Container className=\"containerProfile\">\n\n        <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example2\">\n\n          <Tab eventKey=\"Detail\" title=\"Detail\">\n          {\n            this.state.user !== null && (\n              <ThisUserProfile\n                user={this.state.user}\n                authUserId={this.context.userId}\n              />\n            )\n          }\n          </Tab>\n\n          <Tab eventKey=\"Demographics\" title=\"Demographics\">\n          <Button variant=\"outline-primary\" onClick={this.startUpdateUserHandler}>Edit Demographics</Button>\n          {this.state.updating === true && (\n            <UpdateUserForm\n            canCancelProfile\n              canConfirm\n              onCancel={this.modalCancelHandler}\n              onConfirm={this.modalConfirmUpdateHandler}\n              confirmText=\"Confirm\"\n              user={this.state.user}\n              authUserId={this.context.userId}\n            />\n          )}\n\n          </Tab>\n\n          <Tab eventKey=\"Atttendance\" title=\"Atttendance\">\n            <Button variant=\"outline-primary\" value='attendance' onClick={this.updateUserSpecialProfile.bind(this)}>Edit Attendance</Button>\n            {this.state.userUpdateField === 'attendance' && (\n              <UpdateUserAttendanceForm\n              authUserId={this.context.userId}\n              canCancelProfile\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.updateUserAttendanceHandler}\n                confirmText=\"Confirm\"\n                user={this.state.selectedUser}\n              />\n            )}\n          </Tab>\n\n          <Tab eventKey=\"Leave\" title=\"Leave\">\n            <Button variant=\"outline-primary\" value='leave' onClick={this.updateUserSpecialProfile.bind(this)}>Edit Leave</Button>\n            {this.state.userUpdateField === 'leave' && (\n              <UpdateUserLeaveForm\n              authUserId={this.context.userId}\n              canCancelProfile\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.updateUserLeaveHandler}\n                confirmText=\"Confirm\"\n                user={this.state.selectedUser}\n              />\n            )}\n          </Tab>\n\n          <Tab eventKey=\"Attachment\" title=\"Attachment\">\n          <Button variant=\"outline-primary\" value='attachments' onClick={this.updateUserSpecialProfile.bind(this)}>Edit Attachment</Button>\n          {this.state.userUpdateField === 'attachments' && (\n            <UpdateUserAttachmentForm\n            authUserId={this.context.userId}\n            canCancelProfile\n              canConfirm\n              onCancel={this.modalCancelHandler}\n              onConfirm={this.updateUserAttachmentHandler}\n              confirmText=\"Confirm\"\n              user={this.state.selectedUser}\n            />\n          )}\n          </Tab>\n        </Tabs>\n        </Container>\n\n      </Col>\n\n      </Row>\n\n      <Accordion>\n      <Container className=\"containerUserProfile\">\n      <Row className=\"UserProfileRow\">\n      <Col md={12} className=\"UserProfileCol\">\n      {\n        this.state.user !== null && (\n          <ThisUserProfile\n            user={this.state.user}\n            authUserId={this.context.userId}\n            onEdit={this.startUpdateUserHandler}\n          />\n        )\n      }\n      </Col>\n      </Row>\n\n      {this.state.updating === true && (\n\n\n    <Row className=\"createUserRowForm\">\n    <Col md={12} className=\"createUserColForm\">\n      <UpdateUserForm\n      canCancelProfile\n        canConfirm\n        onCancel={this.modalCancelHandler}\n        onConfirm={this.modalConfirmUpdateHandler}\n        confirmText=\"Confirm\"\n        user={this.state.user}\n        authUserId={this.context.userId}\n      />\n      </Col>\n      </Row>\n\n    )}\n\n      <Row className=\"createUserRowAdd\">\n      <Col md={3} className=\"updateUserCol2\">\n      <p>Edit Special</p>\n      </Col>\n      <Col md={9} className=\"updateUserCol2\">\n      {this.context.token && (\n        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"5\" className=\"btn\" value='attendance' onClick={this.updateUserSpecialProfile.bind(this)}>\n        Attendance\n        </Accordion.Toggle>\n      )}\n      {this.context.token && (\n        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"5\" className=\"btn\" value='leave' onClick={this.updateUserSpecialProfile.bind(this)}>\n        Leave\n        </Accordion.Toggle>\n      )}\n      {this.context.token && (\n        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"5\" className=\"btn\" value='attachments' onClick={this.updateUserSpecialProfile.bind(this)}>\n        Attachments\n        </Accordion.Toggle>\n      )}\n      </Col>\n      </Row>\n\n      <Accordion.Collapse eventKey=\"5\">\n      <Row className=\"updateUserRowForm\">\n      <Col md={10} className=\"updateUserColForm\">\n      {this.state.userUpdateField === 'attendance' && (\n        <UpdateUserAttendanceForm\n        authUserId={this.context.userId}\n        canCancelProfile\n          canConfirm\n          onCancel={this.modalCancelHandler}\n          onConfirm={this.updateUserAttendanceHandler}\n          confirmText=\"Confirm\"\n          user={this.state.selectedUser}\n        />\n      )}\n      {this.state.userUpdateField === 'leave' && (\n        <UpdateUserLeaveForm\n        authUserId={this.context.userId}\n        canCancelProfile\n          canConfirm\n          onCancel={this.modalCancelHandler}\n          onConfirm={this.updateUserLeaveHandler}\n          confirmText=\"Confirm\"\n          user={this.state.selectedUser}\n        />\n      )}\n      {this.state.userUpdateField === 'attachments' && (\n        <UpdateUserAttachmentForm\n        authUserId={this.context.userId}\n        canCancelProfile\n          canConfirm\n          onCancel={this.modalCancelHandler}\n          onConfirm={this.updateUserAttachmentHandler}\n          confirmText=\"Confirm\"\n          user={this.state.selectedUser}\n        />\n      )}\n      </Col>\n      </Row>\n      </Accordion.Collapse>\n\n\n      </Container>\n      </Accordion>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ThisUserPage;\n"]},"metadata":{},"sourceType":"module"}