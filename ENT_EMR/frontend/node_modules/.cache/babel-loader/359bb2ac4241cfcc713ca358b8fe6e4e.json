{"ast":null,"code":"import _extends from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";import _objectSpread from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import Form from'react-bootstrap/Form';import Button from'react-bootstrap/Button';import Col from'react-bootstrap/Col';import Accordion from'react-bootstrap/Accordion';// import FormCheck from 'react-bootstrap/FormCheck'\n// import AuthContext from '../../context/auth-context';\nimport'./CreateUserForm.css';var UpdatePatientAllergiesForm=function UpdatePatientAllergiesForm(props){console.log(\"UpdatePatientAllergiesForm.props:  \",_objectSpread({},props));var patient=_extends({},props.patient);console.log(\"UpdatePatientAllergiesForm.props.patient:  \",_objectSpread({},patient));return React.createElement(\"div\",{className:\"UpdateFormContainer\"},React.createElement(Form,{onSubmit:props.onConfirm},React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridAllergiesTitle\"},React.createElement(Form.Label,null,\"AllergiesTitle\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"AllergiesTitle\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridAllergiesTypeSelect\"},React.createElement(Form.Label,null,\"AllergiesType Options\"),React.createElement(Form.Control,{as:\"select\"},React.createElement(\"option\",null,\"select\"),React.createElement(\"option\",null,\"food\"),React.createElement(\"option\",null,\"drug\"))),React.createElement(Form.Group,{as:Col,controlId:\"formGridAllergiesType\"},React.createElement(Form.Label,null,\"AllergiesType\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"AllergiesType\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridAllergiesDescription\"},React.createElement(Form.Label,null,\"AllergiesDescription\"),React.createElement(Form.Control,{as:\"textarea\",rows:\"3\",placeholder:\"AllergiesDescription\"}))),React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridAllergiesAttachmentName\"},React.createElement(Form.Label,null,\"AllergiesAttachmentName\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"AllergiesAttachmentName\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridAllergiesAttachmentFormat\"},React.createElement(Form.Label,null,\"AllergiesAttachmentFormat\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"AllergiesAttachmentFormat\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridAllergiesAttachmentPath\"},React.createElement(Form.Label,null,\"AllergiesAttachmentPath\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"AllergiesAttachmentPath\"}))),props.canCancel&&React.createElement(Accordion.Toggle,{as:Button,variant:\"danger\",eventKey:\"9\",className:\"btn\",onClick:props.onCancel},\"Cancel\"),props.canConfirm&&React.createElement(Accordion.Toggle,{as:Button,variant:\"success\",eventKey:\"9\",className:\"btn\",type:\"submit\"},\"Submit\")));};export default UpdatePatientAllergiesForm;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdatePatientAllergiesForm.js"],"names":["React","Form","Button","Col","Accordion","UpdatePatientAllergiesForm","props","console","log","patient","onConfirm","canCancel","onCancel","canConfirm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion'\n// import FormCheck from 'react-bootstrap/FormCheck'\n// import AuthContext from '../../context/auth-context';\nimport './CreateUserForm.css';\n\nconst UpdatePatientAllergiesForm = (props) => {\n\nconsole.log(\"UpdatePatientAllergiesForm.props:  \", {...props});\nconst {...patient} = props.patient;\nconsole.log(\"UpdatePatientAllergiesForm.props.patient:  \", {...patient});\n\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridAllergiesTitle\">\n    <Form.Label>AllergiesTitle</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"AllergiesTitle\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridAllergiesTypeSelect\">\n    <Form.Label>AllergiesType Options</Form.Label>\n    <Form.Control as=\"select\">\n    <option>select</option>\n    <option>food</option>\n    <option>drug</option>\n    </Form.Control>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridAllergiesType\">\n    <Form.Label>AllergiesType</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"AllergiesType\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridAllergiesDescription\">\n    <Form.Label>AllergiesDescription</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"AllergiesDescription\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridAllergiesAttachmentName\">\n    <Form.Label>AllergiesAttachmentName</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"AllergiesAttachmentName\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridAllergiesAttachmentFormat\">\n    <Form.Label>AllergiesAttachmentFormat</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"AllergiesAttachmentFormat\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridAllergiesAttachmentPath\">\n    <Form.Label>AllergiesAttachmentPath</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"AllergiesAttachmentPath\"/>\n  </Form.Group>\n  </Form.Row>\n\n\n{props.canCancel && (\n  <Accordion.Toggle as={Button} variant=\"danger\" eventKey=\"9\" className=\"btn\" onClick={props.onCancel}>\n  Cancel\n  </Accordion.Toggle>\n)}\n\n{props.canConfirm && (\n  <Accordion.Toggle as={Button} variant=\"success\" eventKey=\"9\" className=\"btn\" type=\"submit\">\n  Submit\n  </Accordion.Toggle>\n)}\n\n</Form>\n{\n  // <AuthContext.Consumer>\n// </AuthContext.Consumer>\n}\n</div>\n\n)};\n\nexport default UpdatePatientAllergiesForm;\n"]},"metadata":{},"sourceType":"module"}