{"ast":null,"code":"import _objectSpread from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useState}from'react';import Form from'react-bootstrap/Form';import Button from'react-bootstrap/Button';import Col from'react-bootstrap/Col';// import FormCheck from 'react-bootstrap/FormCheck'\n// import { NavLink } from 'react-router-dom';\nimport Accordion from'react-bootstrap/Accordion';import AuthContext from'../../context/auth-context';import DatePicker from\"react-datepicker\";import\"react-datepicker/dist/react-datepicker.css\";import'./CreateUserForm.css';var CreateUserForm=function CreateUserForm(props){console.log(\"CreateUserForm...\",_objectSpread({},props));// const [startDate, setStartDate] = useState(new Date());\nreturn React.createElement(\"div\",{className:\"CreateFormContainer\"},React.createElement(Form,{onSubmit:props.onConfirm},React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridEmail\"},React.createElement(Form.Label,null,\"Email\"),React.createElement(Form.Control,{type:\"email\",placeholder:\"Enter email\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridPassword\"},React.createElement(Form.Label,null,\"Password\"),React.createElement(Form.Control,{type:\"password\",placeholder:\"Password\"}))),React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridName\"},React.createElement(Form.Label,null,\"Name\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"Name\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridRole\"},React.createElement(Form.Label,null,\"Role\"),React.createElement(Form.Control,{as:\"select\"},React.createElement(\"option\",null,\"guest\"),React.createElement(\"option\",null,\"nurse\"),React.createElement(\"option\",null,\"doctor\"),React.createElement(\"option\",null,\"staff\"))),React.createElement(Form.Group,{as:Col,controlId:\"formGridPhone\"},React.createElement(Form.Label,null,\"Phone\"),React.createElement(Form.Control,{type:\"number\",placeholder:\"phone\"}))),React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridDob\"},React.createElement(Form.Label,null,\"D.O.B\"),React.createElement(Form.Control,{type:\"date\",placeholder:\"dob\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridEmploymentDate\"},React.createElement(Form.Label,null,\"Employment Date\"),React.createElement(Form.Control,{type:\"date\",placeholder:\"employmentDate\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridTerminationDate\"},React.createElement(Form.Label,null,\"Termination Date\"),React.createElement(Form.Control,{type:\"date\",placeholder:\"terminationDate\"}))),React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridAddressNumber\"},React.createElement(Form.Label,null,\"addressNumber\"),React.createElement(Form.Control,{type:\"number\",placeholder:\"addressNumber\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridAddressStreet\"},React.createElement(Form.Label,null,\"addressStreet\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"addressStreet\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridAddressTown\"},React.createElement(Form.Label,null,\"addressTown\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"addressTown\"}))),React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridAddressParish\"},React.createElement(Form.Label,null,\"addressParish\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"addressParish\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridAddressPostOffice\"},React.createElement(Form.Label,null,\"addressPostOffice\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"addressPostOffice\"}))),props.canCancel&&React.createElement(Accordion.Toggle,{as:Button,variant:\"danger\",eventKey:\"0\",className:\"btn\",onClick:props.onCancel},\"Cancel\"),props.canConfirm&&React.createElement(Button,{variant:\"success\",type:\"submit\"},\"Create\"),React.createElement(\"p\",null,props.successText)));};export default CreateUserForm;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/CreateUserForm.js"],"names":["React","useState","Form","Button","Col","Accordion","AuthContext","DatePicker","CreateUserForm","props","console","log","onConfirm","canCancel","onCancel","canConfirm","successText"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n// import FormCheck from 'react-bootstrap/FormCheck'\n// import { NavLink } from 'react-router-dom';\nimport Accordion from 'react-bootstrap/Accordion';\nimport AuthContext from '../../context/auth-context';\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst CreateUserForm = (props) => {\n\n  console.log(\"CreateUserForm...\", {...props});\n  // const [startDate, setStartDate] = useState(new Date());\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridEmail\">\n    <Form.Label>Email</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\"/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n<Form.Group as={Col} controlId=\"formGridName\">\n  <Form.Label>Name</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Name\" />\n</Form.Group>\n\n\n<Form.Group as={Col} controlId=\"formGridRole\">\n  <Form.Label>Role</Form.Label>\n  <Form.Control as=\"select\">\n  <option>guest</option>\n  <option>nurse</option>\n  <option>doctor</option>\n  <option>staff</option>\n\n  </Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridPhone\">\n  <Form.Label>Phone</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"phone\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDob\">\n  <Form.Label>D.O.B</Form.Label>\n  <Form.Control type=\"date\" placeholder=\"dob\"/>\n</Form.Group>\n\n  {\n    // <DatePicker className=\"calendarDob\"\n    //   selected={startDate}\n    //   onChange={date => setStartDate(date)}\n    // />\n  }\n\n<Form.Group as={Col} controlId=\"formGridEmploymentDate\">\n  <Form.Label>Employment Date</Form.Label>\n  <Form.Control type=\"date\" placeholder=\"employmentDate\" />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridTerminationDate\">\n  <Form.Label>Termination Date</Form.Label>\n  <Form.Control type=\"date\" placeholder=\"terminationDate\" />\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressNumber\">\n  <Form.Label>addressNumber</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"addressNumber\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressStreet\">\n  <Form.Label>addressStreet</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressStreet\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressTown\">\n  <Form.Label>addressTown</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressTown\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressParish\">\n  <Form.Label>addressParish</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressParish\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridAddressPostOffice\">\n  <Form.Label>addressPostOffice</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressPostOffice\"/>\n</Form.Group>\n</Form.Row>\n\n\n{props.canCancel && (\n  <Accordion.Toggle as={Button} variant=\"danger\" eventKey=\"0\" className=\"btn\" onClick={props.onCancel}>\n  Cancel\n  </Accordion.Toggle>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"success\" type=\"submit\">Create</Button>\n)}\n<p>{props.successText}</p>\n\n</Form>\n{\n  // <AuthContext.Consumer>\n// </AuthContext.Consumer>\n}\n</div>\n\n)};\n\nexport default CreateUserForm;\n"]},"metadata":{},"sourceType":"module"}