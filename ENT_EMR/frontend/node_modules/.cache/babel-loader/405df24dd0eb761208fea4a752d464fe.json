{"ast":null,"code":"import _extends from \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdatePatientTreatmentForm.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport AuthContext from '../../context/auth-context';\nimport './CreateUserForm.css';\n\nconst UpdatePatientTreatmentForm = props => {\n  const patient = _extends({}, props.patient);\n\n  return React.createElement(\"div\", {\n    className: \"UpdateFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: props.onConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, !props.visit && React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridTreatmentDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Date\"), React.createElement(Form.Control, {\n    type: \"date\",\n    placeholder: \"TreatmentDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), !props.visit && React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridTreatmentDateTodayCheckbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Today ?\"), React.createElement(Form.Control, {\n    type: \"checkbox\",\n    onChange: e => {\n      console.log(e.target.checked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), props.visit && React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridTreatmentDateTodayCheckbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Today ?\"), React.createElement(Form.Control, {\n    type: \"checkbox\",\n    defaultChecked: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridTreatmentTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Title\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"TreatmentTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridTreatmentTypeSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Type Options\"), React.createElement(Form.Control, {\n    as: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"select\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"procedure\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"prescription\"))), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridTreatmentType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Type\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"TreatmentType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridTreatmentDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Description\"), React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"5\",\n    placeholder: \"TreatmentDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridTreatmentDose\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Dose\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"TreatmentDose\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridTreatmentFrequency\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Frequency\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"TreatmentFrequency\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridTreatmentAttachmentFormat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Attachment Format\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"TreatmentAttachmentFormat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridTreatmentAttachmentFile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"File\"), React.createElement(Form.Control, {\n    type: \"file\",\n    placeholder: \"File\",\n    onChange: e => {\n      console.log(e.target.files[0]);\n      AuthContext._currentValue.file = e.target.files[0];\n      console.log(AuthContext._currentValue.file);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, props.canCancel && React.createElement(Button, {\n    variant: \"danger\",\n    className: \"formButton\",\n    onClick: props.onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Cancel\"), props.canConfirm && React.createElement(Button, {\n    variant: \"primary\",\n    className: \"formButton\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Submit\"), props.visit && React.createElement(Button, {\n    variant: \"success\",\n    className: \"formButton\",\n    onClick: props.onCreateVisitChecklistUpdate.bind(this, \"treatment\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Done adding Treatment\"))));\n};\n\nexport default UpdatePatientTreatmentForm;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdatePatientTreatmentForm.js"],"names":["React","Form","Button","Col","Accordion","AuthContext","UpdatePatientTreatmentForm","props","patient","onConfirm","visit","e","console","log","target","checked","files","_currentValue","file","canCancel","onCancel","canConfirm","onCreateVisitChecklistUpdate","bind"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAO,sBAAP;;AAEA,MAAMC,0BAA0B,GAAIC,KAAD,IAAW;AAAA,QACpCC,OADoC,gBACzBD,KAAK,CAACC,OADmB;;AAI9C,SACA;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAED,KAAK,CAACE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,CAACF,KAAK,CAACG,KAAP,IACD,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEP,GAAhB;AAAqB,IAAA,SAAS,EAAC,uBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,EASG,CAACI,KAAK,CAACG,KAAP,IACD,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEP,GAAhB;AAAqB,IAAA,SAAS,EAAC,oCAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,QAAQ,EAAGQ,CAAD,IAAO;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,OAArB;AAA8B,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,EAgBGR,KAAK,CAACG,KAAN,IACD,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEP,GAAhB;AAAqB,IAAA,SAAS,EAAC,oCAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,cAAc,EAAE,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAjBF,CADA,EA0BE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAC,wBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADA,CA1BF,EAiCE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAC,6BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,EAAE,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHA,CAFF,CADA,EASA,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAC,uBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATA,CAjCF,EAgDE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAC,8BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,EAAE,EAAC,UAAjB;AAA4B,IAAA,IAAI,EAAC,GAAjC;AAAqC,IAAA,WAAW,EAAC,sBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADA,CAhDF,EAuDE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAC,uBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADA,EAKA,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAC,4BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALA,CAvDF,EAkEE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAC,mCAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,2BAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADA,EAMA,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAC,iCAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,MAAtC;AAA6C,IAAA,QAAQ,EAAGQ,CAAD,IAAO;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASE,KAAT,CAAe,CAAf,CAAZ;AAA+BX,MAAAA,WAAW,CAACY,aAAZ,CAA0BC,IAA1B,GAAiCP,CAAC,CAACG,MAAF,CAASE,KAAT,CAAe,CAAf,CAAjC;AAAmDJ,MAAAA,OAAO,CAACC,GAAR,CAAYR,WAAW,CAACY,aAAZ,CAA0BC,IAAtC;AAA6C,KAA9L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANA,CAlEF,EA+EE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCX,KAAK,CAACY,SAAN,IACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,QAAhB;AAAyB,IAAA,SAAS,EAAC,YAAnC;AAAgD,IAAA,OAAO,EAAEZ,KAAK,CAACa,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAKCb,KAAK,CAACc,UAAN,IACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,SAAS,EAAC,YAApC;AAAiD,IAAA,IAAI,EAAC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,EAWCd,KAAK,CAACG,KAAN,IACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,SAAS,EAAC,YAApC;AAAiD,IAAA,OAAO,EAAEH,KAAK,CAACe,4BAAN,CAAmCC,IAAnC,CAAwC,IAAxC,EAA8C,WAA9C,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAZF,CA/EF,CADA,CADA;AAsGE,CA1GF;;AA4GA,eAAejB,0BAAf","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport AuthContext from '../../context/auth-context';\nimport './CreateUserForm.css';\n\nconst UpdatePatientTreatmentForm = (props) => {\nconst {...patient} = props.patient;\n\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n\n  {!props.visit && (\n  <Form.Group as={Col} controlId=\"formGridTreatmentDate\">\n    <Form.Label>Date</Form.Label>\n    <Form.Control type=\"date\" placeholder=\"TreatmentDate\"/>\n  </Form.Group>\n  )}\n\n  {!props.visit && (\n  <Form.Group as={Col} controlId=\"formGridTreatmentDateTodayCheckbox\">\n    <Form.Label>Today ?</Form.Label>\n    <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n  </Form.Group>\n  )}\n\n  {props.visit && (\n  <Form.Group as={Col} controlId=\"formGridTreatmentDateTodayCheckbox\">\n    <Form.Label>Today ?</Form.Label>\n    <Form.Control type=\"checkbox\" defaultChecked={true}/>\n  </Form.Group>\n  )}\n\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTreatmentTitle\">\n    <Form.Label>Title</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"TreatmentTitle\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTreatmentTypeSelect\">\n    <Form.Label>Type Options</Form.Label>\n    <Form.Control as=\"select\">\n    <option>select</option>\n    <option>procedure</option>\n    <option>prescription</option>\n    </Form.Control>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridTreatmentType\">\n    <Form.Label>Type</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"TreatmentType\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTreatmentDescription\">\n    <Form.Label>Description</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"TreatmentDescription\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTreatmentDose\">\n    <Form.Label>Dose</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"TreatmentDose\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridTreatmentFrequency\">\n    <Form.Label>Frequency</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"TreatmentFrequency\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTreatmentAttachmentFormat\">\n    <Form.Label>Attachment Format</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"TreatmentAttachmentFormat\"/>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridTreatmentAttachmentFile\">\n    <Form.Label>File</Form.Label>\n    <Form.Control type=\"file\" placeholder=\"File\" onChange={(e) => {console.log(e.target.files[0]);AuthContext._currentValue.file = e.target.files[0];console.log(AuthContext._currentValue.file);}}/>\n  </Form.Group>\n\n  </Form.Row>\n\n  <Form.Row>\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n\n  {props.visit && (\n    <Button variant=\"success\" className=\"formButton\" onClick={props.onCreateVisitChecklistUpdate.bind(this, \"treatment\")}>\n    Done adding Treatment\n    </Button>\n  )}\n  </Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default UpdatePatientTreatmentForm;\n"]},"metadata":{},"sourceType":"module"}