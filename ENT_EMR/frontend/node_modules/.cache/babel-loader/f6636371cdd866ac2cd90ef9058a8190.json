{"ast":null,"code":"import _classCallCheck from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{BrowserRouter,Route,Redirect,Switch}from'react-router-dom';import AuthPage from'./pages/Auth';import SignupPage from'./pages/Signup';import UsersPage from'./pages/Users';import PatientsPage from'./pages/Patients';import AppointmentsPage from'./pages/Appointments';import ThisUserPage from'./pages/thisUser';import SidebarPage from'./pages/Sidebar';import MainNavigation from'./components/Navigation/MainNavigation';import AuthContext from'./context/auth-context';import'./App.css';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));_this.state={token:null,userId:null,context:_this.context};_this.login=function(token,userId,tokenExpiration){_this.setState({token:token,userId:userId});};_this.logout=function(){_this.setState({token:null,userId:null});sessionStorage.clear();};_this.sessionStorageAuth=null;return _this;}_createClass(App,[{key:\"render\",// componentDidMount() {\n//\n// }\nvalue:function render(){return React.createElement(BrowserRouter,null,React.createElement(React.Fragment,null,React.createElement(AuthContext.Provider,{value:{token:this.state.token,userId:this.state.userId,user:{},users:[],selectedUser:{},selectedPatient:{},selectedAppointment:{},patient:{},appointment:{},appointmentPatientId:null,userUpdateField:null,patientUpdateField:null,appointmentUpdateField:null,appointmentsToday:null,appointmentsWeekImportant:null,appointmentsInProgress:null,userAlert:\"\",visit:null,login:this.login,logout:this.logout}},React.createElement(MainNavigation,null),React.createElement(\"main\",{className:\"main-content\"},React.createElement(Switch,null,// logged in -> pages\nthis.state.token&&React.createElement(Redirect,{from:\"/\",to:\"/users\",exact:true}),this.state.token&&React.createElement(Route,{path:\"/users\",component:UsersPage}),this.state.token&&React.createElement(Route,{path:\"/patients\",component:PatientsPage}),this.state.token&&React.createElement(Route,{path:\"/appointments\",component:AppointmentsPage}),this.state.token&&React.createElement(Route,{path:\"/profile\",component:ThisUserPage}),// logged in -> users page from login page\nthis.state.token&&React.createElement(Redirect,{from:\"/auth\",to:\"/profile\",exact:true}),//if not logged in -> go to login page\n!this.state.token&&React.createElement(Route,{path:\"/auth\",component:AuthPage}),!this.state.token&&React.createElement(Route,{path:\"/signup\",component:SignupPage}),!this.state.token&&React.createElement(Redirect,{to:\"/auth\",exact:true}))))));}}]);return App;}(Component);App.contextType=AuthContext;export default App;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/App.js"],"names":["React","Component","BrowserRouter","Route","Redirect","Switch","AuthPage","SignupPage","UsersPage","PatientsPage","AppointmentsPage","ThisUserPage","SidebarPage","MainNavigation","AuthContext","App","props","state","token","userId","context","login","tokenExpiration","setState","logout","sessionStorage","clear","sessionStorageAuth","user","users","selectedUser","selectedPatient","selectedAppointment","patient","appointment","appointmentPatientId","userUpdateField","patientUpdateField","appointmentUpdateField","appointmentsToday","appointmentsWeekImportant","appointmentsInProgress","userAlert","visit","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport AuthPage from './pages/Auth';\nimport SignupPage from './pages/Signup';\nimport UsersPage from './pages/Users';\nimport PatientsPage from './pages/Patients';\nimport AppointmentsPage from './pages/Appointments';\nimport ThisUserPage from './pages/thisUser';\nimport SidebarPage from './pages/Sidebar';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    userId: null,\n    context: this.context,\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.sessionStorageAuth = null;\n  }\n\n  login = (token, userId, tokenExpiration) => {\n    this.setState({ token: token, userId: userId });\n  };\n\n  logout = () => {\n    this.setState({ token: null, userId: null });\n    sessionStorage.clear();\n  };\n\n\n  // componentDidMount() {\n  //\n  // }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              userId: this.state.userId,\n              user: {},\n              users:[],\n              selectedUser: {},\n              selectedPatient: {},\n              selectedAppointment: {},\n              patient: {},\n              appointment: {},\n              appointmentPatientId: null,\n              userUpdateField: null,\n              patientUpdateField: null,\n              appointmentUpdateField: null,\n              appointmentsToday: null,\n              appointmentsWeekImportant: null,\n              appointmentsInProgress: null,\n              userAlert: \"\",\n              visit: null,\n              login: this.login,\n              logout: this.logout\n            }}\n          >\n            <MainNavigation />\n            <main className=\"main-content\">\n              <Switch>\n\n                { // logged in -> pages\n                this.state.token && <Redirect from=\"/\" to=\"/users\" exact />}\n                {this.state.token && (<Route path=\"/users\" component={UsersPage} />)}\n                {this.state.token && (<Route path=\"/patients\" component={PatientsPage} />)}\n                {this.state.token && (<Route path=\"/appointments\" component={AppointmentsPage} />)}\n                {this.state.token && (<Route path=\"/profile\" component={ThisUserPage} />)}\n\n                { // logged in -> users page from login page\n                  this.state.token && (<Redirect from=\"/auth\" to=\"/profile\" exact />)}\n\n                { //if not logged in -> go to login page\n                  !this.state.token && (<Route path=\"/auth\" component={AuthPage} />)}\n                  {!this.state.token && (<Route path=\"/signup\" component={SignupPage} />)}\n                {!this.state.token && <Redirect to=\"/auth\" exact />}\n              </Switch>\n            </main>\n\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}