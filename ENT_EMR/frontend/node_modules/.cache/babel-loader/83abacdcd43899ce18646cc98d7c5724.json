{"ast":null,"code":"var _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/blackStarMind_app_dev/black_star_mind/black-star-mind-app/src/pages/Users.js\";\nimport React, { Component } from 'react';\nimport Modal from '../components/Modal/Modal';\nimport Backdrop from '../components/Backdrop/Backdrop';\nimport UserList from '../components/Users/UserList/UserList';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport './Users.css';\n\nclass UsersPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      creating: false,\n      users: [],\n      isLoading: false,\n      selectedUser: null\n    };\n    this.isActive = true;\n\n    this.startCreateUserHandler = () => {\n      this.setState({\n        creating: true\n      });\n    };\n\n    this.modalConfirmHandler = () => {\n      this.setState({\n        creating: false\n      });\n      const email = this.emailElRef.current.value;\n      const password = this.passwordElRef.current.value;\n      const name = this.nameElRef.current.value;\n      const username = this.usernameElRef.current.value;\n      const description = this.descriptionElRef.current.value;\n      const dob = this.dobElRef.current.value;\n      const phone = this.phoneElRef.current.value;\n      const address = this.addressElRef.current.value;\n\n      if (email.trim().length === 0 || password.trim().length === 0 || name.trim().length === 0 || username.trim().length === 0 || description.trim().length === 0 || dob.trim().length === 0 || phone.trim().length === 0 || address.trim().length === 0) {\n        return;\n      }\n\n      const user = {\n        email,\n        password,\n        name,\n        username,\n        description,\n        dob,\n        phone,\n        address\n      };\n      console.log(\"creating user.. \" + JSON.stringify(user));\n      const requestBody = {\n        query: \"\\n          mutation CreateUser($email: String!, $password: String!, $name: String!, $username: String!, $description: String!, $dob: String!, $phone: String!, $address: String!) {\\n            createUser(userInput: {email: $email, password: $password, name: $name, username: $username, description: $description, dob: $dob, phone: $phone, address: $address}) {\\n              _id\\n              email\\n              password\\n              name\\n              username\\n              dob\\n              phone\\n              address\\n            }\\n          }\\n        \",\n        variables: {\n          email: email,\n          password: password,\n          name: name,\n          username: username,\n          description: description,\n          dob: dob,\n          phone: phone,\n          address: address\n        }\n      };\n      const token = this.context.token;\n      fetch('http://localhost:5000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        this.setState(prevState => {\n          const updatedUsers = [...prevState.users];\n          updatedUsers.push({\n            _id: resData.data.createUser._id,\n            email: resData.data.createUser.email,\n            name: resData.data.createUser.name,\n            username: resData.data.createUser.username,\n            description: resData.data.createUser.description,\n            dob: resData.data.createUser.dob,\n            phone: resData.data.createUser.phone,\n            address: resData.data.createUser.address\n          });\n          return {\n            users: updatedUsers\n          };\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.modalCancelHandler = () => {\n      this.setState({\n        creating: false,\n        selectedUser: null\n      });\n    };\n\n    this.showDetailHandler = userId => {\n      this.setState(prevState => {\n        const selectedUser = prevState.users.find(e => e._id === userId);\n        return {\n          selectedUser: selectedUser\n        };\n      });\n    };\n\n    this.emailElRef = React.createRef();\n    this.passwordElRef = React.createRef();\n    this.nameElRef = React.createRef();\n    this.usernameElRef = React.createRef();\n    this.descriptionElRef = React.createRef();\n    this.dobElRef = React.createRef();\n    this.phoneElRef = React.createRef();\n    this.addressElRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n  }\n\n  fetchUsers() {\n    console.log(\"this user... \" + this.context.userId, this.context.token);\n    const userId = this.context.userId;\n    this.setState({\n      isLoading: true\n    });\n    const requestBody = {\n      query: \"\\n          query users($userId: ID!) {\\n            users(userId: $userId) {\\n              _id\\n              email\\n              password\\n              name\\n              username\\n              dob\\n              description\\n              phone\\n              address\\n            }\\n          }\\n        \",\n      variables: {\n        userId: userId\n      }\n    };\n    fetch('http://localhost:5000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n\n      return res.json();\n    }).then(resData => {\n      const users = resData.data.users;\n      console.log(users);\n\n      if (this.isActive) {\n        this.setState({\n          users: users,\n          isLoading: false\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n\n      if (this.isActive) {\n        this.setState({\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, (this.state.creating || this.state.selectedUser) && React.createElement(Backdrop, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), this.state.creating && React.createElement(Modal, {\n      title: \"Create Profile\",\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmHandler,\n      confirmText: \"Confirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      ref: this.emailElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      ref: this.passwordElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      ref: this.nameElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      ref: this.usernameElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Bio\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      ref: this.descriptionElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"address\",\n      ref: this.addressElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(\"input\", {\n      type: \"number\",\n      id: \"phone\",\n      ref: this.phoneElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Date of Birth\"), React.createElement(\"input\", {\n      type: \"datetime-local\",\n      id: \"date\",\n      ref: this.dobElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    })))), this.state.selectedUser && React.createElement(Modal, {\n      username: this.state.selectedUser.username,\n      canCancel: true,\n      onCancel: this.modalCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, this.state.selectedUser.name), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"$\", this.state.selectedUser.email, \" -\", ' dob ', new Date(this.state.selectedUser.dob).toLocaleDateString()), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, this.state.selectedUser.username)), this.context.token && React.createElement(\"div\", {\n      className: \"users-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Create a Profile!\"), React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.startCreateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Sign-Up\")), this.state.isLoading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }) : React.createElement(UserList, {\n      users: this.state.users,\n      authUserId: this.context.userId,\n      onViewDetail: this.showDetailHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }));\n  }\n\n}\n\nUsersPage.contextType = AuthContext;\nexport default UsersPage;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/blackStarMind_app_dev/black_star_mind/black-star-mind-app/src/pages/Users.js"],"names":["React","Component","Modal","Backdrop","UserList","Spinner","AuthContext","UsersPage","constructor","props","state","creating","users","isLoading","selectedUser","isActive","startCreateUserHandler","setState","modalConfirmHandler","email","emailElRef","current","value","password","passwordElRef","name","nameElRef","username","usernameElRef","description","descriptionElRef","dob","dobElRef","phone","phoneElRef","address","addressElRef","trim","length","user","console","log","JSON","stringify","requestBody","query","variables","token","context","fetch","method","body","headers","Authorization","then","res","status","Error","json","resData","prevState","updatedUsers","push","_id","data","createUser","catch","err","modalCancelHandler","showDetailHandler","userId","find","e","createRef","componentDidMount","fetchUsers","componentWillUnmount","render","Date","toLocaleDateString","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Modal from '../components/Modal/Modal';\nimport Backdrop from '../components/Backdrop/Backdrop';\nimport UserList from '../components/Users/UserList/UserList';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport './Users.css';\n\nclass UsersPage extends Component {\n  state = {\n    creating: false,\n    users: [],\n    isLoading: false,\n    selectedUser: null\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n\n  constructor(props) {\n    super(props);\n    this.emailElRef = React.createRef();\n    this.passwordElRef = React.createRef();\n    this.nameElRef = React.createRef();\n    this.usernameElRef = React.createRef();\n    this.descriptionElRef = React.createRef();\n    this.dobElRef = React.createRef();\n    this.phoneElRef = React.createRef();\n    this.addressElRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n  }\n\n  startCreateUserHandler = () => {\n    this.setState({ creating: true });\n  };\n\n  modalConfirmHandler = () => {\n    this.setState({ creating: false });\n    const email = this.emailElRef.current.value;\n    const password = this.passwordElRef.current.value;\n    const name = this.nameElRef.current.value;\n    const username = this.usernameElRef.current.value;\n    const description = this.descriptionElRef.current.value;\n    const dob = this.dobElRef.current.value;\n    const phone = this.phoneElRef.current.value;\n    const address = this.addressElRef.current.value;\n\n    if (\n      email.trim().length === 0 ||\n      password.trim().length === 0 ||\n      name.trim().length === 0 ||\n      username.trim().length === 0 ||\n      description.trim().length === 0 ||\n      dob.trim().length === 0 ||\n      phone.trim().length === 0 ||\n      address.trim().length === 0\n    ) {\n      return;\n    }\n\n    const user = { email, password, name, username, description, dob, phone, address };\n    console.log(\"creating user.. \" + JSON.stringify(user));\n\n    const requestBody = {\n      query: `\n          mutation CreateUser($email: String!, $password: String!, $name: String!, $username: String!, $description: String!, $dob: String!, $phone: String!, $address: String!) {\n            createUser(userInput: {email: $email, password: $password, name: $name, username: $username, description: $description, dob: $dob, phone: $phone, address: $address}) {\n              _id\n              email\n              password\n              name\n              username\n              dob\n              phone\n              address\n            }\n          }\n        `,\n        variables: {\n          email: email,\n          password: password,\n          name: name,\n          username: username,\n          description: description,\n          dob: dob,\n          phone: phone,\n          address: address\n        }\n    };\n\n    const token = this.context.token;\n\n    fetch('http://localhost:5000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        this.setState(prevState => {\n          const updatedUsers = [...prevState.users];\n          updatedUsers.push({\n            _id: resData.data.createUser._id,\n            email: resData.data.createUser.email,\n            name: resData.data.createUser.name,\n            username: resData.data.createUser.username,\n            description: resData.data.createUser.description,\n            dob: resData.data.createUser.dob,\n            phone: resData.data.createUser.phone,\n            address: resData.data.createUser.address,\n          });\n          return { users: updatedUsers };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, selectedUser: null });\n  };\n\n  fetchUsers() {\n    console.log(\"this user... \" + this.context.userId, this.context.token);\n    const userId = this.context.userId;\n\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query users($userId: ID!) {\n            users(userId: $userId) {\n              _id\n              email\n              password\n              name\n              username\n              dob\n              description\n              phone\n              address\n            }\n          }\n        `,\n        variables: {\n          userId: userId\n        }\n    };\n\n    fetch('http://localhost:5000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const users = resData.data.users;\n        console.log(users);\n        if (this.isActive) {\n          this.setState({ users: users, isLoading: false });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  showDetailHandler = userId => {\n    this.setState(prevState => {\n      const selectedUser = prevState.users.find(e => e._id === userId);\n      return { selectedUser: selectedUser };\n    });\n  };\n\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {(this.state.creating || this.state.selectedUser) && <Backdrop />}\n        {this.state.creating && (\n          <Modal\n            title=\"Create Profile\"\n            canCancel\n            canConfirm\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.modalConfirmHandler}\n            confirmText=\"Confirm\"\n          >\n            <form>\n              <div className=\"form-control\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"text\" id=\"title\" ref={this.emailElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" ref={this.passwordElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"name\">Name</label>\n                <input type=\"text\" id=\"name\" ref={this.nameElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"username\">Username</label>\n                <input type=\"text\" id=\"username\" ref={this.usernameElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"description\">Bio</label>\n                <input type=\"text\" id=\"description\" ref={this.descriptionElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"address\">Address</label>\n                <input type=\"text\" id=\"address\" ref={this.addressElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"phone\">Phone</label>\n                <input type=\"number\" id=\"phone\" ref={this.phoneElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"date\">Date of Birth</label>\n                <input type=\"datetime-local\" id=\"date\" ref={this.dobElRef} />\n              </div>\n\n            </form>\n          </Modal>\n        )}\n        {this.state.selectedUser && (\n          <Modal\n            username={this.state.selectedUser.username}\n            canCancel\n            onCancel={this.modalCancelHandler}\n          >\n            <h1>{this.state.selectedUser.name}</h1>\n            <h2>\n              ${this.state.selectedUser.email} -{' dob '}\n              {new Date(this.state.selectedUser.dob).toLocaleDateString()}\n            </h2>\n            <p>{this.state.selectedUser.username}</p>\n          </Modal>\n        )}\n        {this.context.token && (\n          <div className=\"users-control\">\n            <p>Create a Profile!</p>\n            <button className=\"btn\" onClick={this.startCreateUserHandler}>\n              Sign-Up\n            </button>\n          </div>\n        )}\n        {this.state.isLoading ? (\n          <Spinner />\n        ) : (\n          <UserList\n            users={this.state.users}\n            authUserId={this.context.userId}\n            onViewDetail={this.showDetailHandler}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default UsersPage;\n"]},"metadata":{},"sourceType":"module"}