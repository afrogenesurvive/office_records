{"ast":null,"code":"import _classCallCheck from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";// import ReactDOM from 'react-dom';\nimport React,{Component}from'react';import Container from'react-bootstrap/Container';import Row from'react-bootstrap/Row';import Col from'react-bootstrap/Col';import Button from'react-bootstrap/Button';import Accordion from'react-bootstrap/Accordion';import SidebarPage from'./Sidebar';import Tabs from'react-bootstrap/Tabs';import Tab from'react-bootstrap/Tab';// import TabContainer from 'react-bootstrap/TabContainer';\n// import TabContent from 'react-bootstrap/TabContent';\n// import TabPane from 'react-bootstrap/TabPane';\nimport Nav from'react-bootstrap/Nav';import Card from'react-bootstrap/Card';// import Modal from '../components/Modal/Modal';\n// import Backdrop from '../components/Backdrop/Backdrop';\nimport AlertBox from'../components/AlertBox';import PdfCreator from'../components/PdfCreator';import AppointmentList from'../components/Appointments/AppointmentList/AppointmentList';import AppointmentDetail from'../components/Appointments/AppointmentDetail';// import PatientDetail from '../components/Patients/PatientDetail';\nimport Spinner from'../components/Spinner/Spinner';import AuthContext from'../context/auth-context';import SearchAppointmentList from'../components/Appointments/AppointmentList/SearchAppointmentList';import SearchAppointmentForm from'../components/Forms/SearchAppointmentForm';import SearchAppointmentIdForm from'../components/Forms/SearchAppointmentIdForm';import SearchAppointmentPatientForm from'../components/Forms/SearchAppointmentPatientForm';import SearchAppointmentDateForm from'../components/Forms/SearchAppointmentDateForm';import SearchAppointmentDateRangeForm from'../components/Forms/SearchAppointmentDateRangeForm';import CreateAppointmentForm from'../components/Forms/CreateAppointmentForm';import UpdateAppointmentForm from'../components/Forms/UpdateAppointmentForm';import UpdateAppointmentFieldForm from'../components/Forms/UpdateAppointmentFieldForm';import'./Users.css';var AppointmentsPage=/*#__PURE__*/function(_Component){_inherits(AppointmentsPage,_Component);function AppointmentsPage(){var _getPrototypeOf2;var _this;_classCallCheck(this,AppointmentsPage);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(AppointmentsPage)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={creating:false,updating:false,deleting:false,searching:false,searchAppointments:[],appointments:[],isLoading:false,selectedAppointment:null,selectedPatient:null,appointmentUpdateField:null,appointmentSearchField:null,appointmentSearchQuery:null,canDelete:null,userAlert:null,createPdf:false,pdfData:null};_this.isActive=true;_this.startCreateAppointmentHandler=function(){_this.setState({creating:true});console.log(\"CreateAppointmentForm...\",_this.context.selectedPatient);};_this.startUpdateAppointmentHandler=function(){_this.setState({updating:true});console.log(\"UpdateAppointmentForm...\");};_this.startSearchAppointmentHandler=function(){_this.setState({searching:true});console.log(\"SearchAppointmentForm...\");};_this.modalConfirmHandler=function(event){console.log(\"CreateAppointmentFormData:  \",event.target.formGridTitle.value);_this.setState({creating:false});var userId=_this.context.userId;var selectedPatientId=_this.context.selectedPatient._id;console.log(\"\\n        userId: \".concat(userId,\"\\n        patientId: \").concat(selectedPatientId,\"\\n      \"));if(selectedPatientId===undefined){console.log(\"\\n          select a Patient before creating an Appointment!!\\n          \");_this.setState({userAlert:\"select a Patient before creating an Appointment!!...\"});return;}var title=event.target.formGridTitle.value;var type=event.target.formGridType.value;var date=event.target.formGridDate.value;if(event.target.formGridDateTodayCheckbox.checked===true){date=new Date().toISOString().slice(0,10);}var time=event.target.formGridTime.value;var seenTime=event.target.formGridSeenTime.value;var checkinTime=event.target.formGridCheckinTime.value;var location=event.target.formGridLocation.value;var description=event.target.formGridDescription.value;var inProgress=event.target.formGridInProgress.value;var attended=event.target.formGridAttended.value;var important=event.target.formGridImportant.value;if(title.trim().length===0||type.trim().length===0||date.trim().length===0||time.trim().length===0||location.trim().length===0||description.trim().length===0||inProgress.trim().length===0||attended.trim().length===0||important.trim().length===0){console.log(\"blank fields detected!!!...Please try again...\");_this.setState({userAlert:\"blank fields detected!!!...Please try again...\"});return;}console.log(\"\\n        creating appointment...\\n        title: \".concat(title,\",\\n        type: \").concat(type,\",\\n        date: \").concat(date,\",\\n        time: \").concat(time,\",\\n        seenTime: \").concat(seenTime,\",\\n        checkinTime: \").concat(checkinTime,\",\\n        location: \").concat(location,\",\\n        description: \").concat(description,\",\\n        inProgress: \").concat(inProgress,\",\\n        attended: \").concat(attended,\",\\n        important: \").concat(important,\",\\n      \"));_this.setState({userAlert:\"creating appointment...\"});var requestBody={query:\"\\n          mutation {createAppointment(userId:\\\"\".concat(userId,\"\\\",patientId:\\\"\").concat(selectedPatientId,\"\\\",appointmentInput:{title:\\\"\").concat(title,\"\\\",type:\\\"\").concat(type,\"\\\",date:\\\"\").concat(date,\"\\\",time:\\\"\").concat(time,\"\\\",seenTime:\\\"\").concat(seenTime,\"\\\",checkinTime:\\\"\").concat(checkinTime,\"\\\",location:\\\"\").concat(location,\"\\\",description:\\\"\").concat(description,\"\\\",inProgress:\").concat(inProgress,\",attended:\").concat(attended,\",important:\").concat(important,\",})\\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important}}\\n        \")};var token=_this.context.token;// fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\nfetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData.data.createAppointment));var responseAlert=JSON.stringify(resData.data).slice(2,15);_this.setState({userAlert:responseAlert});_this.state.appointments.push(resData.data.createAppointment);// this.setState(prevState => {\n//   const updatedAppointments = [...prevState.appointments];\n//   updatedAppointments.push(resData.data.createAppointment);\n//\n//   return { appointments: updatedAppointments };\n// });\n_this.context.appointments=_this.state.appointments;_this.fetchAppointments();}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};_this.modalCancelHandler=function(){_this.setState({creating:false,updating:false,searching:false,selectedAppointment:null});};_this.modalConfirmUpdateHandler=function(event){if(_this.context.user.role!=='admin'){console.log(\"Not the Admin! No edit permission!!\");_this.setState({userAlert:\"Not the Admin! No edit permission!!\"});}var userId=_this.context.userId;var appointmentId=_this.context.selectedAppointment._id;// const selectedPatientId = this.context.selectedPatientId;\nconsole.log(\"\\n        userId: \".concat(userId,\"\\n        appointmentd: \").concat(appointmentId,\",\\n      \"));// console.log(\"UpdateUserFormData:  \", event);\nconsole.log(\"UpdateAppointmentFormData:  \",event.target.formGridTitle.value);_this.setState({updating:false});var title=event.target.formGridTitle.value;var type=event.target.formGridType.value;var date=event.target.formGridDate.value;if(event.target.formGridDateTodayCheckbox.checked===true){date=new Date().toISOString().slice(0,10);}var time=event.target.formGridTime.value;var seenTime=event.target.formGridSeenTime.value;var checkinTime=event.target.formGridCheckinTime.value;var location=event.target.formGridLocation.value;var description=event.target.formGridDescription.value;var inProgress=event.target.formGridInProgress.value;var attended=event.target.formGridAttended.value;var important=event.target.formGridImportant.value;if(title.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");title=_this.context.selectedAppointment.title;// return;\n}if(type.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");type=_this.context.selectedAppointment.type;}if(date.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");date=_this.context.selectedAppointment.date;}if(time.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");time=_this.context.selectedAppointment.time;}if(seenTime.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");seenTime=_this.context.selectedAppointment.seenTime;}if(checkinTime.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");checkinTime=_this.context.selectedAppointment.checkinTime;}if(location.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");location=_this.context.selectedAppointment.location;}if(description.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");description=_this.context.selectedAppointment.description;}if(inProgress.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");inProgress=_this.context.selectedAppointment.inProgress;}if(attended.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");attended=_this.context.selectedAppointment.attended;}if(important.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");important=_this.context.selectedAppointment.important;}console.log(\"\\n        updating appointment...\\n        title: \".concat(title,\",\\n        type: \").concat(type,\",\\n        date: \").concat(date,\",\\n        time: \").concat(time,\",\\n        seenTime: \").concat(seenTime,\",\\n        checkinTime: \").concat(checkinTime,\",\\n        location: \").concat(location,\",\\n        description: \").concat(description,\",\\n        inProgress: \").concat(inProgress,\",\\n        attended: \").concat(attended,\",\\n        important: \").concat(important,\",\\n      \"));_this.setState({userAlert:\"updating appointment...\"});var requestBody={query:\"\\n      mutation {updateAppointment(userId:\\\"\".concat(userId,\"\\\",appointmentId:\\\"\").concat(appointmentId,\"\\\",appointmentInput:{title:\\\"\").concat(title,\"\\\",type:\\\"\").concat(type,\"\\\",date:\\\"\").concat(date,\"\\\",time:\\\"\").concat(time,\"\\\",seenTime:\\\"\").concat(seenTime,\"\\\",checkinTime:\\\"\").concat(checkinTime,\"\\\",location:\\\"\").concat(location,\"\\\",description:\\\"\").concat(description,\"\\\",inProgress:\").concat(inProgress,\",attended:\").concat(attended,\",important:\").concat(important,\",})\\n      {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important,notes}}\\n        \")};var token=_this.context.token;fetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData));var updatedAppointmentId=resData.data.updateAppointment._id;var updatedAppointment=_this.state.appointments.find(function(e){return e._id===updatedAppointmentId;});var updatedAppointmentPos=_this.state.appointments.indexOf(updatedAppointment);var slicedArray=_this.state.appointments.splice(updatedAppointmentPos,1);console.log(\"updatedAppointment:  \",JSON.stringify(updatedAppointment),\"  updatedPatientPos:  \",updatedAppointmentPos,\"  slicedArray:  \",slicedArray);_this.state.appointments.push(resData.data.updateAppointment);var responseAlert=JSON.stringify(resData.data).slice(2,25);_this.setState({userAlert:responseAlert});_this.fetchAppointments();}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};_this.updateAppointmentPatientHandler=function(event){var token=_this.context.token;var userId=_this.context.userId;var selectedAppointmentId=_this.context.selectedAppointment._id;var selectedPatientId=_this.context.selectedPatient._id;if(_this.context.user.role!=='admin'){console.log(\"No edit permission!!\");_this.setState({userAlert:\"No edit permission!!\"});return;}if(selectedPatientId===undefined){console.log(\"\\n        select a Patient before creating an Appointment!!\\n        \");_this.setState({userAlert:\"select a Patient before creating an Appointment!!...\"});return;}_this.setState({updating:false,patientUpdateField:null});console.log(\"\\n      updating appointment patient...\\n      userId: \".concat(userId,\",\\n      appointmentId: \").concat(selectedAppointmentId,\",\\n      patientId: \").concat(selectedPatientId,\",\\n      \"));_this.setState({userAlert:\"updating appointment patient...\"});var requestBody={query:\"\\n        mutation {updateAppointmentPatient(userId:\\\"\".concat(userId,\"\\\",appointmentId:\\\"\").concat(selectedAppointmentId,\"\\\",patientId:\\\"\").concat(selectedPatientId,\"\\\")\\n        {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title},consultant{reference{_id,name,role}}},inProgress,attended,important}}\\n        \")};fetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData));var updatedAppointmentId=resData.data.updateAppointmentPatient._id;var updatedAppointment=_this.state.appointments.find(function(e){return e._id===updatedAppointmentId;});var updatedAppointmentPos=_this.state.appointments.indexOf(updatedAppointment);var slicedArray=_this.state.appointments.splice(updatedAppointmentPos,1);console.log(\"updatedAppointment:  \",JSON.stringify(updatedAppointment),\"  updatedPatientPos:  \",updatedAppointmentPos,\"  slicedArray:  \",slicedArray);_this.state.appointments.push(resData.data.updateAppointmentPatient);var responseAlert=JSON.stringify(resData.data).slice(2,25);_this.setState({userAlert:responseAlert});_this.fetchAppointments();}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};_this.modalConfirmUpdateFieldHandler=function(event){event.preventDefault();var token=_this.context.token;var userId=_this.context.userId;var selectedAppointmentId=_this.context.selectedAppointment._id;if(_this.context.user.role!=='admin'){console.log(\"Not the creator or Admin! No edit permission!!\");selectedAppointmentId=null;}console.log(\"UpdateAppointmentFieldFormData:  \",event.target.formGridField.value);_this.setState({updating:false});var field=null;var query=event.target.formGridQuery.value;if(event.target.formGridFieldSelect.value===\"select\"){field=event.target.formGridField.value;}else{field=event.target.formGridFieldSelect.value;}var requestBody={query:\"\\n        mutation {updateAppointmentField(userId:\\\"\".concat(userId,\"\\\",appointmentId:\\\"\").concat(selectedAppointmentId,\"\\\",field:\\\"\").concat(field,\"\\\",query:\\\"\").concat(query,\"\\\")\\n        {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important,notes}}\\n        \")};fetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData.data.updateAppointmentField));var responseAlert=JSON.stringify(resData.data).slice(2,25);_this.setState({userAlert:responseAlert});// this.setState({ userAlert: responseAlert, selectedAppointment: resData.data.updateAppointmentField})\nvar updatedAppointmentId=resData.data.updateAppointmentField._id;var updatedAppointment=_this.state.appointments.find(function(e){return e._id===updatedAppointmentId;});var updatedAppointmentPos=_this.state.appointments.indexOf(updatedAppointment);var slicedArray=_this.state.appointments.splice(updatedAppointmentPos,1);console.log(\"updatedAppointment:  \",JSON.stringify(updatedAppointment),\"  updatedAppointmentPos:  \",updatedAppointmentPos,\"  slicedArray:  \",slicedArray);_this.state.appointments.push(resData.data.updateAppointmentField);_this.context.appointments=_this.state.appointments;_this.fetchAppointments();}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};_this.modalConfirmSearchHandler=function(event){console.log(\"SearchAppointmentForm:  \");var userId=_this.context.userId;console.log(\"SearchAppointmentFormData:  \",event.target.formBasicField.value);_this.setState({searching:false});var field=null;var query=event.target.formBasicQuery.value;if(event.target.formBasicFieldSelect.value===\"select\"){field=event.target.formBasicField.value;}else{field=event.target.formBasicFieldSelect.value;}if(field.trim().length===0||query.trim().length===0){console.log(\"blank fields detected!!!...Please try again...\");_this.setState({userAlert:\"blank fields detected!!!...Please try again...\"});return;}var search={field:field,query:query};console.log(\"Searching for Appointment:  \",JSON.stringify(search));var requestBody={query:\"\\n          query {getAppointmentField(userId:\\\"\".concat(userId,\"\\\", field:\\\"\").concat(field,\"\\\", query:\\\"\").concat(query,\"\\\")\\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title},consultant{reference{_id,name,role}}},inProgress,attended,important}}\\n        \")};var token=_this.context.token;fetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData));var responseAlert=JSON.stringify(resData.data).slice(2,15);_this.setState({userAlert:responseAlert});var searchAppointments=resData.data.getAppointmentField;_this.setState({searchAppointments:searchAppointments});console.log(\"state.searchAppointments:  \",_this.state.searchAppointments);// this.fetchAppointments();\n}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};_this.modalConfirmSearchIdHandler=function(event){console.log(\"\\n      SearchAppointmentIdFormData\\n      \");var userId=_this.context.userId;_this.setState({searching:false});var selectedAppointmentId=event.target.formBasicId.value;var requestBody={query:\"\\n          query {getAppointmentId(userId:\\\"\".concat(userId,\"\\\", appointmentId:\\\"\").concat(selectedAppointmentId,\"\\\")\\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\\n        \")};var token=_this.context.token;fetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData));var responseAlert=JSON.stringify(resData.data).slice(2,15);_this.setState({userAlert:responseAlert});var searchAppointments=resData.data.getAppointmentId;_this.setState({searchAppointments:[searchAppointments]});console.log(\"state.searchAppointments:  \",_this.state.searchAppointments);// this.fetchUsers();\n}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};_this.modalConfirmSearchPatientHandler=function(event){console.log(\"\\n      SearchAppointmentPatientFormData\\n      \");var userId=_this.context.userId;_this.setState({searching:false});var selectedPatientId=event.target.formBasicPatientId.value;var requestBody={query:\"\\n          query {getAppointmentPatient(userId:\\\"\".concat(userId,\"\\\", patientId:\\\"\").concat(selectedPatientId,\"\\\")\\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\\n        \")};var token=_this.context.token;fetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData));var responseAlert=JSON.stringify(resData.data).slice(2,15);// const responseAlert = JSON.stringify(resData.errors).slice(2,15);\n_this.setState({userAlert:responseAlert});var searchAppointments=resData.data.getAppointmentPatient;_this.setState({searchAppointments:searchAppointments});// this.state.searchApointments.push(searchAppointments)\nconsole.log(\"state.searchApointments:  \",_this.state.searchApointments);// this.fetchUsers();\n}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};_this.modalConfirmSearchDateHandler=function(event){console.log(\"\\n      SearchAppointmentDateFormData\\n      \");var userId=_this.context.userId;_this.setState({searching:false});var appointmentDate=event.target.formBasicDate.value;if(event.target.formBasicDateTodayCheckbox.checked===true){appointmentDate=new Date().toISOString().slice(0,10);}var requestBody={query:\"\\n          query {getAppointmentDate(userId:\\\"\".concat(userId,\"\\\",date:\\\"\").concat(appointmentDate,\"\\\")\\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\\n        \")};var token=_this.context.token;fetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData));var responseAlert=JSON.stringify(resData.data).slice(2,15);_this.setState({userAlert:responseAlert});var searchAppointments=resData.data.getAppointmentDate;_this.setState({searchAppointments:searchAppointments});console.log(\"state.searchAppointments:  \",_this.state.searchAppointments);// this.fetchUsers();\n}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};_this.modalConfirmSearchDateRangeHandler=function(event){console.log(\"\\n      SearchAppointmentDateRangeFormData\\n      \");var userId=_this.context.userId;_this.setState({searching:false});var appointmentStartDate=event.target.formBasicStartDate.value;var appointmentEndDate=event.target.formBasicEndDate.value;var requestBody={query:\"\\n          query {getAppointmentDateRange(userId:\\\"\".concat(userId,\"\\\",startDate:\\\"\").concat(appointmentStartDate,\"\\\",endDate:\\\"\").concat(appointmentEndDate,\"\\\")\\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\\n        \")};var token=_this.context.token;fetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData));var responseAlert=JSON.stringify(resData.data).slice(2,15);_this.setState({userAlert:responseAlert});var searchAppointments=resData.data.getAppointmentDateRange;_this.setState({searchAppointments:searchAppointments});console.log(\"state.searchApointments:  \",_this.state.searchAppointments);// this.fetchUsers();\n}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};_this.modalCancelHandler=function(){_this.setState({creating:false,updating:false,searching:false,selectedAppointment:null});};_this.fetchAppointmentsAsc=function(){console.log(\"'fetch appointments function' context object... \"+JSON.stringify(_this.context));var userId=_this.context.userId;// this.setState({ isLoading: true });\nvar requestBody={query:\"\\n            query {appointmentsDateAsc(userId:\\\"\".concat(userId,\"\\\")\\n            {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,contact{email,phone},consultant{reference{_id,name,role}}},inProgress,attended,important,notes}}\\n        \")};fetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+_this.context.token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){var appointments=resData.data.appointmentsDateAsc;console.log(appointments);var responseAlert=JSON.stringify(resData.data).slice(2,15);_this.setState({userAlert:responseAlert});_this.context.appointments=appointments;_this.setState({appointments:appointments});// if (this.isActive) {\n//   this.setState({ appointments: appointments, isLoading: false });\n// }\n}).catch(function(err){console.log(err);_this.setState({userAlert:err});// if (this.isActive) {\n//   this.setState({ isLoading: false });\n// }\n});};_this.fetchAppointmentsDesc=function(){console.log(\"'fetch appointments function' context object... \"+JSON.stringify(_this.context));var userId=_this.context.userId;// this.setState({ isLoading: true });\nvar requestBody={query:\"\\n            query {appointmentsDateDesc(userId:\\\"\".concat(userId,\"\\\")\\n            {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,contact{email,phone},consultant{reference{_id,name,role}}},inProgress,attended,important,notes}}\\n        \")};fetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+_this.context.token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){var appointments=resData.data.appointmentsDateDesc;console.log(appointments);var responseAlert=JSON.stringify(resData.data).slice(2,15);_this.setState({userAlert:responseAlert});_this.context.appointments=appointments;_this.setState({appointments:appointments});// if (this.isActive) {\n//   this.setState({ appointments: appointments, isLoading: false });\n// }\n}).catch(function(err){console.log(err);_this.setState({userAlert:err});// if (this.isActive) {\n//   this.setState({ isLoading: false });\n// }\n});};_this.modalDeleteHandler=function(){console.log(\"deleting appointment...selectedAppointment:  \",_this.context.selectedAppointment);var userId=_this.context.userId;var selectedAppointmentId=_this.context.selectedAppointment._id;if(_this.context.user.role!=='admin'){console.log(\"Not the Admin! No edit permission!!\");_this.setState({userAlert:\"Not the Admin! No edit permission!!\"});}_this.setState({deleting:true});var requestBody={query:\"\\n          mutation {deleteAppointment(userId:\\\"\".concat(userId,\"\\\",appointmentId:\\\"\").concat(selectedAppointmentId,\"\\\")\\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important,notes}}\\n        \")};fetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+_this.context.token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"resData:  \",resData);// console.log(\"resData.data.deleteAppointment:  \", resData.data.deleteAppointment);\nvar deletedAppointment=resData.data.deleteAppointment;console.log(deletedAppointment);var responseAlert=JSON.stringify(resData.data).slice(2,15);_this.setState({userAlert:responseAlert});var deletedAppointmentId=deletedAppointment._id;deletedAppointment=_this.state.appointments.find(function(e){return e._id===deletedAppointmentId;});var deletedAppointmentPos=_this.state.appointments.indexOf(deletedAppointment);var slicedArray=_this.state.appointments.splice(deletedAppointmentPos,1);console.log(\"deletedAppointment:  \",JSON.stringify(deletedAppointment),\"  deletedUserPos:  \",deletedAppointmentPos,\"  slicedArray:  \",slicedArray);_this.setState({deleting:false});_this.fetchAppointments();}).catch(function(err){console.log(err);_this.setState({userAlert:err});if(_this.isActive){_this.setState({deleting:false});}});};_this.showDetailHandler=function(appointmentId){_this.setState(function(prevState){var selectedAppointment=prevState.appointments.find(function(e){return e._id===appointmentId;});_this.setState({selectedAppointment:selectedAppointment});_this.context.selectedAppointment=selectedAppointment;console.log(\"selectedAppointment:  \",selectedAppointment);return{selecteAppointment:selectedAppointment};});};_this.createPdf=function(appointment){console.log(\"\\n        creating pdf...\\n        user: \".concat(JSON.stringify(appointment),\"\\n      \"));var pdfData={title:\"This pdf is supplied with Appointment data...\",appointment:{_id:appointment._id,title:appointment.title,type:appointment.type,date:appointment.date,time:appointment.time,seenTime:appointment.seenTime,checkinTime:appointment.checkinTime,location:appointment.location,description:appointment.description,patient:{_id:appointment.patient._id,name:appointment.patient.name,contact:{email:appointment.patient.contact.email,phone:appointment.patient.contact.phone}},inProgress:appointment.inProgress,attended:appointment.attended,important:appointment.important,notes:appointment.notes}};_this.setState({createPdf:true,pdfData:pdfData});};_this.closePdfCreator=function(){console.log(\"\\n      closing pdf creator...\\n      \");_this.setState({createPdf:false,pdfData:null});};return _this;}_createClass(AppointmentsPage,[{key:\"componentDidMount\",// constructor(props) {\n//   super(props);\n// }\nvalue:function componentDidMount(){this.fetchAppointments();this.fetchAppointmentToday();this.fetchAppointmentInProgress();if(this.context.user.name===\"Lord-of-the-Manor\"){this.setState({canDelete:true});}// this.setState({selectedPatient: this.context.selectedPatient});\n// console.log(`\n//   context.selectedPatient: ${JSON.stringify(this.context.selectedPatient)},\n//   state.selectedPatient: ${JSON.stringify(this.state.selectedPatient)},\n//   `);\n}},{key:\"fetchAppointments\",value:function fetchAppointments(){var _this2=this;console.log(\"'fetch appointments function' context object... \"+JSON.stringify(this.context));var userId=this.context.userId;this.setState({isLoading:true});var requestBody={query:\"\\n            query {appointments(userId:\\\"\".concat(userId,\"\\\")\\n            {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,contact{email,phone},consultant{reference{_id,name,role}}},inProgress,attended,important,notes}}\\n        \")};fetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+this.context.token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){var appointments=resData.data.appointments;console.log(appointments);var responseAlert=JSON.stringify(resData.data).slice(2,15);_this2.setState({userAlert:responseAlert});_this2.context.appointments=_this2.state.appointments;if(_this2.isActive){_this2.setState({appointments:appointments,isLoading:false});}}).catch(function(err){console.log(err);_this2.setState({userAlert:err});if(_this2.isActive){_this2.setState({isLoading:false});}});}},{key:\"updateAppointmentSpecial\",value:function updateAppointmentSpecial(event){console.log(\"special field to update:  \",event.target.value);var field=event.target.value;this.setState({appointmentUpdateField:field});}},{key:\"fetchAppointmentToday\",value:function fetchAppointmentToday(){var _this3=this;console.log(\"fetching todays appts function:  \");var token=this.context.token;var userId=this.context.userId;var requestBody={query:\"\\n          query {getAppointmentToday(userId:\\\"\".concat(userId,\"\\\")\\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\\n        \")};fetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){_this3.context.appointmentsToday=resData.data.getAppointmentToday;console.log(\"context today's appts:  \",JSON.stringify(_this3.context.appointmentsToday));var responseAlert=JSON.stringify(resData.data).slice(2,15);_this3.setState({userAlert:responseAlert});}).catch(function(err){console.log(err);_this3.setState({userAlert:err});});}},{key:\"fetchAppointmentInProgress\",value:function fetchAppointmentInProgress(){var _this4=this;console.log(\"fetching inProgress appts function:  \");var token=this.context.token;var userId=this.context.userId;var requestBody={query:\"\\n          query {getAppointmentField(userId:\\\"\".concat(userId,\"\\\",field:\\\"inProgress\\\",query:\\\"true\\\"){_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\\n        \")};fetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){_this4.context.appointmentsInProgress=resData.data.getAppointmentField;console.log(\"context in progress appts:  \",JSON.stringify(_this4.context.appointmentsInProgress));var responseAlert=JSON.stringify(resData.data).slice(2,15);_this4.setState({userAlert:responseAlert});if(_this4.state.selectedPatient==={}||_this4.context.selectedstate===null){_this4.setState({userAlert:\"No Patient Selected\"});}console.log(\"\\n          context.selectedPatient: \".concat(JSON.stringify(_this4.context.selectedPatient),\",\\n          state.selectedPatient: \").concat(JSON.stringify(_this4.state.selectedPatient),\",\\n          \"));}).catch(function(err){console.log(err);_this4.setState({userAlert:err});});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.isActive=false;}},{key:\"render\",value:function render(){return React.createElement(React.Fragment,null,this.state.createPdf===true&&React.createElement(PdfCreator,{pdfData:this.state.pdfData,onClosePdfCreator:this.closePdfCreator}),React.createElement(Accordion,null,React.createElement(Row,null,React.createElement(Col,{md:3,className:\"MasterCol1\"},React.createElement(AlertBox,{authUserId:this.context.userId,alert:this.state.userAlert}),React.createElement(SidebarPage,null)),React.createElement(Col,{md:9,className:\"MasterCol2\"},React.createElement(Container,{className:\"containerCombinedDetail\"},React.createElement(Tab.Container,{id:\"left-tabs-example\",defaultActiveKey:\"appointmentDetail\"},React.createElement(Row,null,React.createElement(Col,{sm:2},React.createElement(Nav,{variant:\"pills\",className:\"flex-column\"},React.createElement(Nav.Item,null,React.createElement(Nav.Link,{eventKey:\"MasterList\"},\"MASTER LIST\")),React.createElement(Nav.Item,null,React.createElement(Nav.Link,{eventKey:\"appointmentDetail\"},\"Selected\")),React.createElement(Nav.Item,null,React.createElement(Nav.Link,{eventKey:\"appointmentCreate\"},\"Create New\")),React.createElement(Nav.Item,null,React.createElement(Nav.Link,{eventKey:\"disabled\",disabled:true},\"Edit:\")),React.createElement(Nav.Item,null,React.createElement(Nav.Link,{eventKey:\"appointmentEditBasic\"},\"Basic Info\")),React.createElement(Nav.Item,null,React.createElement(Nav.Link,{eventKey:\"appointmentEditField\"},\"Single Field\")),React.createElement(Nav.Item,null,React.createElement(Nav.Link,{eventKey:\"appointmentEditPatient\"},\"Patient\")),React.createElement(Nav.Item,null,React.createElement(Nav.Link,{eventKey:\"disabled\",disabled:true},\"Search:\")),React.createElement(Nav.Item,null,React.createElement(Nav.Link,{eventKey:\"SearchInput\"},\"Input\")),React.createElement(Nav.Item,null,React.createElement(Nav.Link,{eventKey:\"SearchResult\"},\"Results\")))),React.createElement(Col,{sm:10},React.createElement(Tab.Content,null,React.createElement(Tab.Pane,{eventKey:\"appointmentDetail\"},this.state.selectedAppointment===null&&React.createElement(Button,{variant:\"outline-warning\",size:\"lg\",className:\"confirmEditButton\"},\"Select an Appointment from the Master List\"),this.state.isLoading===false&&this.state.selectedAppointment!==null&&React.createElement(AppointmentDetail,{authUserId:this.context.userId,appointment:this.state.selectedAppointment,onEdit:this.startUpdateAppointmentHandler,canDelete:this.state.canDelete,onDelete:this.modalDeleteHandler,onCreatePdf:this.createPdf})),React.createElement(Tab.Pane,{eventKey:\"appointmentCreate\"},React.createElement(Button,{variant:\"outline-primary\",size:\"lg\",className:\"confirmEditButton\",onClick:this.startCreateAppointmentHandler},\"Create New\"),this.state.creating&&this.context.selectedPatient._id!==null&&React.createElement(CreateAppointmentForm,{canCancel:true,canConfirm:true,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmHandler,onSubmit:this.modalConfirmHandler,confirmText:\"Confirm\",selectedPatient:this.context.selectedPatient})),React.createElement(Tab.Pane,{eventKey:\"appointmentEditBasic\"},this.state.selectedAppointment===null&&React.createElement(Button,{variant:\"outline-warning\",size:\"lg\",className:\"confirmEditButton\"},\"Select an Appointment from the Master List\"),this.state.selectedAppointment!==null&&React.createElement(Button,{variant:\"outline-primary\",size:\"lg\",className:\"confirmEditButton\",onClick:this.startUpdateAppointmentHandler},\"Edit Basic Data\"),this.state.updating&&this.state.selectedAppointment!==null&&React.createElement(UpdateAppointmentForm,{authUserId:this.context.userId,canCancel:true,canConfirm:true,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmUpdateHandler,confirmText:\"Confirm\",appointment:this.state.selectedAppointment})),React.createElement(Tab.Pane,{eventKey:\"appointmentEditField\"},this.state.selectedAppointment===null&&React.createElement(Button,{variant:\"outline-warning\",size:\"lg\",className:\"confirmEditButton\"},\"Select an Appointment from the Master List\"),this.state.selectedAppointment!==null&&React.createElement(Button,{variant:\"outline-primary\",size:\"lg\",className:\"confirmEditButton\",onClick:this.startUpdateAppointmentHandler},\"Edit a Single Field\"),this.state.updating&&this.state.selectedAppointment!==null&&React.createElement(UpdateAppointmentFieldForm,{authUserId:this.context.userId,canCancel:true,canConfirm:true,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmUpdateFieldHandler,confirmText:\"Confirm\",appointment:this.state.selectedAppointment})),React.createElement(Tab.Pane,{eventKey:\"appointmentEditPatient\"},this.state.selectedAppointment===null&&React.createElement(Button,{variant:\"outline-warning\",size:\"lg\",className:\"confirmEditButton\"},\"Select an Appointment from the Master List\"),this.state.selectedAppointment!==null&&React.createElement(Button,{variant:\"outline-primary\",size:\"lg\",className:\"confirmEditButton\",value:\"patient\",onClick:this.updateAppointmentSpecial.bind(this)},\"Change Patient:\"),this.state.selecteAppointment!==null&&this.context.selectedPatient===null&&this.state.appointmentUpdateField===\"patient\"&&React.createElement(Button,{variant:\"outline-warning\",size:\"lg\",className:\"confirmEditButton\"},\"Select someone from the Patients page\"),this.state.selectedAppointment!==null&&this.context.selectedPatient!==null&&this.state.appointmentUpdateField===\"patient\"&&React.createElement(Row,null,React.createElement(Col,{md:8,className:\"updateUserColAdd\"},React.createElement(\"p\",null,React.createElement(\"span\",{className:\"bold\"},\"Add Patient :\"),\" \",this.context.selectedPatient.name),React.createElement(\"p\",null,React.createElement(\"span\",{className:\"bold\"},\"To Appointment :\"),\" \",this.state.selectedAppointment.title,\"  \",React.createElement(\"span\",{className:\"bold\"},\"On :\"),\" \",new Date(this.state.selecteAppointment.date.substr(0,10)*1000).toISOString().slice(0,10),\" \",React.createElement(\"span\",{className:\"bold\"},\"At :\"),\" \",this.state.selecteAppointment.time,\" ??\"),React.createElement(Button,{variant:\"success\",onClick:this.updateAppointmentPatientHandler},\"Yes\")))),React.createElement(Tab.Pane,{eventKey:\"MasterList\"},React.createElement(Container,{className:\"containerUserMasterList\"},React.createElement(Row,{className:\"searchListRow\"},React.createElement(Button,{variant:\"primary\",size:\"sm\",onClick:this.fetchAppointmentsAsc},\"Sort Asc\"),React.createElement(Button,{variant:\"info\",size:\"sm\",onClick:this.fetchAppointmentsDesc},\"Sort Desc\"),this.state.isLoading?React.createElement(Spinner,null):React.createElement(AppointmentList,{appointments:this.state.appointments,authUserId:this.context.userId,onViewDetail:this.showDetailHandler})))),React.createElement(Tab.Pane,{eventKey:\"SearchInput\"},React.createElement(Container,{className:\"containerSearchUserInput\"},React.createElement(Row,{className:\"searchUserRowAdd\"},React.createElement(Button,{variant:\"primary\",onClick:this.startSearchAppointmentHandler},\"Search\")),React.createElement(Row,{className:\"searchUserRowForm\"},React.createElement(Col,{md:10,className:\"searchUserColForm\"},React.createElement(Tabs,{defaultActiveKey:\"Field\",id:\"uncontrolled-tab-example\"},React.createElement(Tab,{eventKey:\"Search\",title:\"Search:\",disabled:true}),React.createElement(Tab,{eventKey:\"Field\",title:\"Search by Field:\"},this.state.searching!==true&&React.createElement(Button,{variant:\"outline-warning\",className:\"confirmEditButton\",size:\"lg\"},\"Click the 'Search' Button start\"),this.state.searching===true&&React.createElement(SearchAppointmentForm,{authUserId:this.context.userId,canCancel:true,canConfirm:true,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchHandler,confirmText:\"Search\",appointment:this.context.selectedAppointment})),React.createElement(Tab,{eventKey:\"Id\",title:\"Search by Id:\"},this.state.searching!==true&&React.createElement(Button,{variant:\"outline-warning\",className:\"confirmEditButton\",size:\"lg\"},\"Click the 'Search' Button start\"),this.state.searching===true&&React.createElement(SearchAppointmentIdForm,{authUserId:this.context.userId,canCancel:true,canConfirm:true,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchIdHandler,confirmText:\"Search\",appointment:this.context.selectedAppointment})),React.createElement(Tab,{eventKey:\"Patient\",title:\"Search by Patient:\"},this.state.searching!==true&&React.createElement(Button,{variant:\"outline-warning\",className:\"confirmEditButton\",size:\"lg\"},\"Click the 'Search' Button start\"),this.state.searching===true&&React.createElement(SearchAppointmentPatientForm,{authUserId:this.context.userId,canCancel:true,canConfirm:true,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchPatientHandler,confirmText:\"Search\",appointment:this.context.selectedAppointment})),React.createElement(Tab,{eventKey:\"Date\",title:\"Search by Date:\"},this.state.searching!==true&&React.createElement(Button,{variant:\"outline-warning\",className:\"confirmEditButton\",size:\"lg\"},\"Click the 'Search' Button start\"),this.state.searching===true&&React.createElement(SearchAppointmentDateForm,{authUserId:this.context.userId,canCancel:true,canConfirm:true,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchDateHandler,confirmText:\"Search\",appointment:this.context.selectedAppointment})),React.createElement(Tab,{eventKey:\"Date Range\",title:\"Search by Date Range:\"},this.state.searching!==true&&React.createElement(Button,{variant:\"outline-warning\",className:\"confirmEditButton\",size:\"lg\"},\"Click the 'Search' Button start\"),this.state.searching===true&&React.createElement(SearchAppointmentDateRangeForm,{authUserId:this.context.userId,canCancel:true,canConfirm:true,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchDateRangeHandler,confirmText:\"Search\",appointment:this.context.selectedAppointment})))),React.createElement(Col,{md:10})))),React.createElement(Tab.Pane,{eventKey:\"SearchResult\"},React.createElement(Container,{className:\"containerSearchUserResults\"},React.createElement(Row,null,React.createElement(Card,{className:\"searchCard\"},React.createElement(Card.Body,{className:\"searchCardBody\"},React.createElement(Card.Title,null,\"Your Search\"),React.createElement(Card.Text,null,\"Field: \",this.state.appointmentSearchField),React.createElement(Card.Text,null,\"Query: \",this.state.appointmentSearchQuery)))),React.createElement(Row,{className:\"searchListRow\"},this.state.searchAppointments!==[]&&React.createElement(SearchAppointmentList,{searchAppointments:this.state.searchAppointments,authUserId:this.context.userId,onCancel:this.modalCancelHandler,onViewDetail:this.showDetailHandler})))))))))))));}}]);return AppointmentsPage;}(Component);AppointmentsPage.contextType=AuthContext;export default AppointmentsPage;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/Appointments.js"],"names":["React","Component","Container","Row","Col","Button","Accordion","SidebarPage","Tabs","Tab","Nav","Card","AlertBox","PdfCreator","AppointmentList","AppointmentDetail","Spinner","AuthContext","SearchAppointmentList","SearchAppointmentForm","SearchAppointmentIdForm","SearchAppointmentPatientForm","SearchAppointmentDateForm","SearchAppointmentDateRangeForm","CreateAppointmentForm","UpdateAppointmentForm","UpdateAppointmentFieldForm","AppointmentsPage","state","creating","updating","deleting","searching","searchAppointments","appointments","isLoading","selectedAppointment","selectedPatient","appointmentUpdateField","appointmentSearchField","appointmentSearchQuery","canDelete","userAlert","createPdf","pdfData","isActive","startCreateAppointmentHandler","setState","console","log","context","startUpdateAppointmentHandler","startSearchAppointmentHandler","modalConfirmHandler","event","target","formGridTitle","value","userId","selectedPatientId","_id","undefined","title","type","formGridType","date","formGridDate","formGridDateTodayCheckbox","checked","Date","toISOString","slice","time","formGridTime","seenTime","formGridSeenTime","checkinTime","formGridCheckinTime","location","formGridLocation","description","formGridDescription","inProgress","formGridInProgress","attended","formGridAttended","important","formGridImportant","trim","length","requestBody","query","token","fetch","method","body","JSON","stringify","headers","Authorization","then","res","status","Error","json","resData","data","createAppointment","responseAlert","push","fetchAppointments","catch","err","modalCancelHandler","modalConfirmUpdateHandler","user","role","appointmentId","updatedAppointmentId","updateAppointment","updatedAppointment","find","e","updatedAppointmentPos","indexOf","slicedArray","splice","updateAppointmentPatientHandler","selectedAppointmentId","patientUpdateField","updateAppointmentPatient","modalConfirmUpdateFieldHandler","preventDefault","formGridField","field","formGridQuery","formGridFieldSelect","updateAppointmentField","modalConfirmSearchHandler","formBasicField","formBasicQuery","formBasicFieldSelect","search","getAppointmentField","modalConfirmSearchIdHandler","formBasicId","getAppointmentId","modalConfirmSearchPatientHandler","formBasicPatientId","getAppointmentPatient","searchApointments","modalConfirmSearchDateHandler","appointmentDate","formBasicDate","formBasicDateTodayCheckbox","getAppointmentDate","modalConfirmSearchDateRangeHandler","appointmentStartDate","formBasicStartDate","appointmentEndDate","formBasicEndDate","getAppointmentDateRange","fetchAppointmentsAsc","appointmentsDateAsc","fetchAppointmentsDesc","appointmentsDateDesc","modalDeleteHandler","deletedAppointment","deleteAppointment","deletedAppointmentId","deletedAppointmentPos","showDetailHandler","prevState","selecteAppointment","appointment","patient","name","contact","email","phone","notes","closePdfCreator","fetchAppointmentToday","fetchAppointmentInProgress","appointmentsToday","getAppointmentToday","appointmentsInProgress","selectedstate","updateAppointmentSpecial","bind","substr","contextType"],"mappings":"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","sourcesContent":["// import ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport SidebarPage from './Sidebar';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\n// import TabContainer from 'react-bootstrap/TabContainer';\n// import TabContent from 'react-bootstrap/TabContent';\n// import TabPane from 'react-bootstrap/TabPane';\nimport Nav from 'react-bootstrap/Nav';\nimport Card from 'react-bootstrap/Card';\n\n// import Modal from '../components/Modal/Modal';\n// import Backdrop from '../components/Backdrop/Backdrop';\nimport AlertBox from '../components/AlertBox';\nimport PdfCreator from '../components/PdfCreator';\n\nimport AppointmentList from '../components/Appointments/AppointmentList/AppointmentList';\nimport AppointmentDetail from '../components/Appointments/AppointmentDetail';\n// import PatientDetail from '../components/Patients/PatientDetail';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport SearchAppointmentList from '../components/Appointments/AppointmentList/SearchAppointmentList';\nimport SearchAppointmentForm from '../components/Forms/SearchAppointmentForm';\nimport SearchAppointmentIdForm from '../components/Forms/SearchAppointmentIdForm';\nimport SearchAppointmentPatientForm from '../components/Forms/SearchAppointmentPatientForm';\nimport SearchAppointmentDateForm from '../components/Forms/SearchAppointmentDateForm';\nimport SearchAppointmentDateRangeForm from '../components/Forms/SearchAppointmentDateRangeForm';\n\nimport CreateAppointmentForm from '../components/Forms/CreateAppointmentForm';\nimport UpdateAppointmentForm from '../components/Forms/UpdateAppointmentForm';\nimport UpdateAppointmentFieldForm from '../components/Forms/UpdateAppointmentFieldForm';\nimport './Users.css';\n\nclass AppointmentsPage extends Component {\n  state = {\n    creating: false,\n    updating: false,\n    deleting: false,\n    searching: false,\n    searchAppointments: [],\n    appointments: [],\n    isLoading: false,\n    selectedAppointment: null,\n    selectedPatient: null,\n    appointmentUpdateField: null,\n    appointmentSearchField: null,\n    appointmentSearchQuery: null,\n    canDelete: null,\n    userAlert: null,\n    createPdf: false,\n    pdfData: null,\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  componentDidMount() {\n    this.fetchAppointments();\n    this.fetchAppointmentToday();\n    this.fetchAppointmentInProgress();\n    if (this.context.user.name === \"Lord-of-the-Manor\"){\n      this.setState({canDelete: true})\n    }\n    // this.setState({selectedPatient: this.context.selectedPatient});\n    // console.log(`\n    //   context.selectedPatient: ${JSON.stringify(this.context.selectedPatient)},\n    //   state.selectedPatient: ${JSON.stringify(this.state.selectedPatient)},\n    //   `);\n  }\n\n\n  startCreateAppointmentHandler = () => {\n    this.setState({ creating: true });\n    console.log(\"CreateAppointmentForm...\", this.context.selectedPatient);\n  };\n  startUpdateAppointmentHandler = () => {\n    this.setState({ updating: true });\n    console.log(\"UpdateAppointmentForm...\");\n  };\n  startSearchAppointmentHandler = () => {\n    this.setState({ searching: true });\n    console.log(\"SearchAppointmentForm...\");\n  };\n\n  modalConfirmHandler = (event) => {\n\n    console.log(\"CreateAppointmentFormData:  \", event.target.formGridTitle.value);\n\n    this.setState({ creating: false });\n    const userId = this.context.userId;\n    const selectedPatientId = this.context.selectedPatient._id;\n    console.log(`\n        userId: ${userId}\n        patientId: ${selectedPatientId}\n      `);\n\n      if (selectedPatientId === undefined) {\n        console.log(`\n          select a Patient before creating an Appointment!!\n          `);\n          this.setState({userAlert: \"select a Patient before creating an Appointment!!...\"});\n          return\n      }\n    const title = event.target.formGridTitle.value;\n    const type = event.target.formGridType.value;\n\n    let date = event.target.formGridDate.value;\n    if (event.target.formGridDateTodayCheckbox.checked === true) {\n      date = new Date().toISOString().slice(0,10);\n    }\n    const time = event.target.formGridTime.value;\n    const seenTime = event.target.formGridSeenTime.value;\n    const checkinTime = event.target.formGridCheckinTime.value;\n    const location = event.target.formGridLocation.value;\n    const description = event.target.formGridDescription.value;\n    const inProgress = event.target.formGridInProgress.value;\n    const attended = event.target.formGridAttended.value;\n    const important = event.target.formGridImportant.value;\n\n    if (\n      title.trim().length === 0 ||\n      type.trim().length === 0 ||\n      date.trim().length === 0 ||\n      time.trim().length === 0 ||\n      location.trim().length === 0 ||\n      description.trim().length === 0 ||\n      inProgress.trim().length === 0 ||\n      attended.trim().length === 0 ||\n      important.trim().length === 0\n    ) {\n      console.log(\"blank fields detected!!!...Please try again...\");\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"});\n      return\n    }\n\n\n    console.log(`\n        creating appointment...\n        title: ${title},\n        type: ${type},\n        date: ${date},\n        time: ${time},\n        seenTime: ${seenTime},\n        checkinTime: ${checkinTime},\n        location: ${location},\n        description: ${description},\n        inProgress: ${inProgress},\n        attended: ${attended},\n        important: ${important},\n      `);\n      this.setState({userAlert: \"creating appointment...\"});\n\n    const requestBody = {\n      query: `\n          mutation {createAppointment(userId:\"${userId}\",patientId:\"${selectedPatientId}\",appointmentInput:{title:\"${title}\",type:\"${type}\",date:\"${date}\",time:\"${time}\",seenTime:\"${seenTime}\",checkinTime:\"${checkinTime}\",location:\"${location}\",description:\"${description}\",inProgress:${inProgress},attended:${attended},important:${important},})\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important}}\n        `,\n    };\n\n    const token = this.context.token;\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data.createAppointment));\n        const responseAlert = JSON.stringify(resData.data).slice(2,15);\n        this.setState({userAlert: responseAlert});\n\n        this.state.appointments.push(resData.data.createAppointment);\n        // this.setState(prevState => {\n        //   const updatedAppointments = [...prevState.appointments];\n        //   updatedAppointments.push(resData.data.createAppointment);\n        //\n        //   return { appointments: updatedAppointments };\n        // });\n        this.context.appointments = this.state.appointments;\n        this.fetchAppointments();\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n      });\n  };\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, updating: false, searching: false, selectedAppointment: null });\n  };\n\n\n  modalConfirmUpdateHandler = (event) => {\n\n    if(this.context.user.role !== 'admin') {\n      console.log(\"Not the Admin! No edit permission!!\");\n      this.setState({userAlert: \"Not the Admin! No edit permission!!\"});\n    }\n\n    const userId = this.context.userId;\n    const appointmentId = this.context.selectedAppointment._id;\n    // const selectedPatientId = this.context.selectedPatientId;\n    console.log(`\n        userId: ${userId}\n        appointmentd: ${appointmentId},\n      `);\n\n    // console.log(\"UpdateUserFormData:  \", event);\n    console.log(\"UpdateAppointmentFormData:  \", event.target.formGridTitle.value);\n\n\n    this.setState({ updating: false });\n    let title = event.target.formGridTitle.value;\n    let type = event.target.formGridType.value;\n\n    let date = event.target.formGridDate.value;\n    if (event.target.formGridDateTodayCheckbox.checked === true) {\n      date = new Date().toISOString().slice(0,10);\n    }\n\n    let time = event.target.formGridTime.value;\n    let seenTime = event.target.formGridSeenTime.value;\n    let checkinTime = event.target.formGridCheckinTime.value;\n    let location = event.target.formGridLocation.value;\n    let description = event.target.formGridDescription.value;\n    let inProgress = event.target.formGridInProgress.value;\n    let attended = event.target.formGridAttended.value;\n    let important = event.target.formGridImportant.value;\n\n    if (title.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      title  = this.context.selectedAppointment.title;\n      // return;\n    }\n    if (type.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      type  = this.context.selectedAppointment.type;\n    }\n    if (date.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      date  = this.context.selectedAppointment.date;\n    }\n    if (time.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      time  = this.context.selectedAppointment.time;\n    }\n    if (seenTime.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      seenTime  = this.context.selectedAppointment.seenTime;\n    }\n    if (checkinTime.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      checkinTime  = this.context.selectedAppointment.checkinTime;\n    }\n    if (location.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      location  = this.context.selectedAppointment.location;\n    }\n    if (description.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      description  = this.context.selectedAppointment.description;\n    }\n    if (inProgress.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      inProgress  = this.context.selectedAppointment.inProgress;\n    }\n    if (attended.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      attended  = this.context.selectedAppointment.attended;\n    }\n    if (important.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      important  = this.context.selectedAppointment.important;\n    }\n\n    console.log(`\n        updating appointment...\n        title: ${title},\n        type: ${type},\n        date: ${date},\n        time: ${time},\n        seenTime: ${seenTime},\n        checkinTime: ${checkinTime},\n        location: ${location},\n        description: ${description},\n        inProgress: ${inProgress},\n        attended: ${attended},\n        important: ${important},\n      `);\n      this.setState({userAlert: \"updating appointment...\"});\n\n    const requestBody = {\n      query: `\n      mutation {updateAppointment(userId:\"${userId}\",appointmentId:\"${appointmentId}\",appointmentInput:{title:\"${title}\",type:\"${type}\",date:\"${date}\",time:\"${time}\",seenTime:\"${seenTime}\",checkinTime:\"${checkinTime}\",location:\"${location}\",description:\"${description}\",inProgress:${inProgress},attended:${attended},important:${important},})\n      {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important,notes}}\n        `\n    };\n\n    const token = this.context.token;\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n\n        const updatedAppointmentId = resData.data.updateAppointment._id;\n        const updatedAppointment = this.state.appointments.find(e => e._id === updatedAppointmentId);\n        const updatedAppointmentPos = this.state.appointments.indexOf(updatedAppointment);\n        const slicedArray = this.state.appointments.splice(updatedAppointmentPos, 1);\n        console.log(\"updatedAppointment:  \", JSON.stringify(updatedAppointment),\"  updatedPatientPos:  \", updatedAppointmentPos, \"  slicedArray:  \", slicedArray);\n\n        this.state.appointments.push(resData.data.updateAppointment);\n        const responseAlert = JSON.stringify(resData.data).slice(2,25);\n        this.setState({ userAlert: responseAlert})\n        this.fetchAppointments();\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n      });\n  };\n\n\n  updateAppointmentPatientHandler = (event) => {\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n    let selectedAppointmentId = this.context.selectedAppointment._id;\n    let selectedPatientId = this.context.selectedPatient._id;\n    if(\n      this.context.user.role !== 'admin'\n    ) {\n      console.log(\"No edit permission!!\");\n      this.setState({userAlert: \"No edit permission!!\"});\n      return;\n    }\n\n    if (selectedPatientId === undefined) {\n      console.log(`\n        select a Patient before creating an Appointment!!\n        `);\n        this.setState({userAlert: \"select a Patient before creating an Appointment!!...\"});\n        return\n    }\n\n    this.setState({ updating: false , patientUpdateField: null });\n\n    console.log(`\n      updating appointment patient...\n      userId: ${userId},\n      appointmentId: ${selectedAppointmentId},\n      patientId: ${selectedPatientId},\n      `);\n      this.setState({userAlert: \"updating appointment patient...\"});\n\n      const requestBody = {\n        query:`\n        mutation {updateAppointmentPatient(userId:\"${userId}\",appointmentId:\"${selectedAppointmentId}\",patientId:\"${selectedPatientId}\")\n        {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title},consultant{reference{_id,name,role}}},inProgress,attended,important}}\n        `\n      }\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData));\n\n          const updatedAppointmentId = resData.data.updateAppointmentPatient._id;\n          const updatedAppointment = this.state.appointments.find(e => e._id === updatedAppointmentId);\n          const updatedAppointmentPos = this.state.appointments.indexOf(updatedAppointment);\n          const slicedArray = this.state.appointments.splice(updatedAppointmentPos, 1);\n          console.log(\"updatedAppointment:  \", JSON.stringify(updatedAppointment),\"  updatedPatientPos:  \", updatedAppointmentPos, \"  slicedArray:  \", slicedArray);\n\n          this.state.appointments.push(resData.data.updateAppointmentPatient);\n          const responseAlert = JSON.stringify(resData.data).slice(2,25);\n          this.setState({ userAlert: responseAlert})\n          this.fetchAppointments();\n\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n\n\n  }\n\n\n  modalConfirmUpdateFieldHandler = (event) => {\n    event.preventDefault();\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n    let selectedAppointmentId = this.context.selectedAppointment._id;\n    if( this.context.user.role !== 'admin') {\n      console.log(\"Not the creator or Admin! No edit permission!!\");\n      selectedAppointmentId = null;\n    }\n\n      console.log(\"UpdateAppointmentFieldFormData:  \", event.target.formGridField.value);\n      this.setState({ updating: false });\n\n      let field = null;\n      let query = event.target.formGridQuery.value;\n      if (event.target.formGridFieldSelect.value === \"select\") {\n        field = event.target.formGridField.value;\n      } else {\n        field = event.target.formGridFieldSelect.value;\n      }\n\n      const requestBody = {\n        query:`\n        mutation {updateAppointmentField(userId:\"${userId}\",appointmentId:\"${selectedAppointmentId}\",field:\"${field}\",query:\"${query}\")\n        {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important,notes}}\n        `};\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData.data.updateAppointmentField));\n\n          const responseAlert = JSON.stringify(resData.data).slice(2,25);\n          this.setState({ userAlert: responseAlert})\n          // this.setState({ userAlert: responseAlert, selectedAppointment: resData.data.updateAppointmentField})\n\n          const updatedAppointmentId = resData.data.updateAppointmentField._id;\n          const updatedAppointment = this.state.appointments.find(e => e._id === updatedAppointmentId);\n          const updatedAppointmentPos = this.state.appointments.indexOf(updatedAppointment);\n          const slicedArray = this.state.appointments.splice(updatedAppointmentPos, 1);\n          console.log(\"updatedAppointment:  \", JSON.stringify(updatedAppointment),\"  updatedAppointmentPos:  \", updatedAppointmentPos, \"  slicedArray:  \", slicedArray);\n\n          this.state.appointments.push(resData.data.updateAppointmentField);\n          this.context.appointments = this.state.appointments;\n\n          this.fetchAppointments();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n\n  }\n\n\n  modalConfirmSearchHandler = (event) => {\n    console.log(\"SearchAppointmentForm:  \");\n\n\n    let userId = this.context.userId;\n\n      console.log(\"SearchAppointmentFormData:  \", event.target.formBasicField.value);\n      this.setState({ searching: false });\n\n      let field = null;\n      let query = event.target.formBasicQuery.value;\n      if (event.target.formBasicFieldSelect.value === \"select\") {\n        field = event.target.formBasicField.value;\n      } else {\n        field = event.target.formBasicFieldSelect.value;\n      }\n\n      if (\n        field.trim().length === 0 ||\n        query.trim().length === 0\n      ) {\n        console.log(\"blank fields detected!!!...Please try again...\");\n        this.setState({userAlert: \"blank fields detected!!!...Please try again...\"});\n        return;\n      }\n\n      const search = { field, query }\n      console.log(\"Searching for Appointment:  \", JSON.stringify(search));\n\n      const requestBody = {\n        query: `\n          query {getAppointmentField(userId:\"${userId}\", field:\"${field}\", query:\"${query}\")\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title},consultant{reference{_id,name,role}}},inProgress,attended,important}}\n        `}\n\n      const token = this.context.token;\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData));\n          const responseAlert = JSON.stringify(resData.data).slice(2,15);\n          this.setState({userAlert: responseAlert});\n\n          const searchAppointments = resData.data.getAppointmentField;\n\n          this.setState({ searchAppointments: searchAppointments})\n          console.log(\"state.searchAppointments:  \", this.state.searchAppointments);\n          // this.fetchAppointments();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n  }\n\n  modalConfirmSearchIdHandler = (event) => {\n    console.log(`\n      SearchAppointmentIdFormData\n      `);\n\n      let userId = this.context.userId;\n      this.setState({ searching: false });\n      let selectedAppointmentId = event.target.formBasicId.value;\n\n      const requestBody = {\n        query: `\n          query {getAppointmentId(userId:\"${userId}\", appointmentId:\"${selectedAppointmentId}\")\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        `}\n\n      const token = this.context.token;\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData));\n          const responseAlert = JSON.stringify(resData.data).slice(2,15);\n          this.setState({userAlert: responseAlert});\n\n          const searchAppointments = resData.data.getAppointmentId;\n\n          this.setState({ searchAppointments: [searchAppointments]})\n          console.log(\"state.searchAppointments:  \", this.state.searchAppointments);\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n  }\n\n  modalConfirmSearchPatientHandler = (event) => {\n    console.log(`\n      SearchAppointmentPatientFormData\n      `);\n\n      let userId = this.context.userId;\n      this.setState({ searching: false });\n      let selectedPatientId = event.target.formBasicPatientId.value;\n\n      const requestBody = {\n        query: `\n          query {getAppointmentPatient(userId:\"${userId}\", patientId:\"${selectedPatientId}\")\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        `}\n\n      const token = this.context.token;\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData));\n          const responseAlert = JSON.stringify(resData.data).slice(2,15);\n          // const responseAlert = JSON.stringify(resData.errors).slice(2,15);\n          this.setState({userAlert: responseAlert});\n\n          const searchAppointments = resData.data.getAppointmentPatient;\n\n          this.setState({ searchAppointments: searchAppointments })\n          // this.state.searchApointments.push(searchAppointments)\n          console.log(\"state.searchApointments:  \", this.state.searchApointments);\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n\n  }\n  modalConfirmSearchDateHandler = (event) => {\n    console.log(`\n      SearchAppointmentDateFormData\n      `);\n\n      let userId = this.context.userId;\n      this.setState({ searching: false });\n\n      let appointmentDate = event.target.formBasicDate.value;\n      if (event.target.formBasicDateTodayCheckbox.checked === true) {\n        appointmentDate = new Date().toISOString().slice(0,10);\n      }\n\n      const requestBody = {\n        query: `\n          query {getAppointmentDate(userId:\"${userId}\",date:\"${appointmentDate}\")\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        `}\n\n      const token = this.context.token;\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData));\n          const responseAlert = JSON.stringify(resData.data).slice(2,15);\n          this.setState({userAlert: responseAlert});\n\n          const searchAppointments = resData.data.getAppointmentDate;\n\n          this.setState({ searchAppointments: searchAppointments})\n          console.log(\"state.searchAppointments:  \", this.state.searchAppointments);\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n\n  }\n  modalConfirmSearchDateRangeHandler = (event) => {\n    console.log(`\n      SearchAppointmentDateRangeFormData\n      `);\n\n      let userId = this.context.userId;\n      this.setState({ searching: false });\n      let appointmentStartDate = event.target.formBasicStartDate.value;\n      let appointmentEndDate = event.target.formBasicEndDate.value;\n\n      const requestBody = {\n        query: `\n          query {getAppointmentDateRange(userId:\"${userId}\",startDate:\"${appointmentStartDate}\",endDate:\"${appointmentEndDate}\")\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        `}\n\n      const token = this.context.token;\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData));\n          const responseAlert = JSON.stringify(resData.data).slice(2,15);\n          this.setState({userAlert: responseAlert});\n\n          const searchAppointments = resData.data.getAppointmentDateRange;\n\n          this.setState({ searchAppointments: searchAppointments})\n          console.log(\"state.searchApointments:  \", this.state.searchAppointments);\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n\n\n  }\n\n\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, updating: false, searching: false, selectedAppointment: null });\n  };\n\n\n  fetchAppointments() {\n    console.log(\"'fetch appointments function' context object... \" + JSON.stringify(this.context));\n    const userId = this.context.userId;\n\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n            query {appointments(userId:\"${userId}\")\n            {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,contact{email,phone},consultant{reference{_id,name,role}}},inProgress,attended,important,notes}}\n        `};\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const appointments = resData.data.appointments;\n        console.log(appointments);\n        const responseAlert = JSON.stringify(resData.data).slice(2,15);\n        this.setState({userAlert: responseAlert});\n\n        this.context.appointments = this.state.appointments;\n        if (this.isActive) {\n          this.setState({ appointments: appointments, isLoading: false });\n        }\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  fetchAppointmentsAsc = () => {\n    console.log(\"'fetch appointments function' context object... \" + JSON.stringify(this.context));\n    const userId = this.context.userId;\n\n    // this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n            query {appointmentsDateAsc(userId:\"${userId}\")\n            {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,contact{email,phone},consultant{reference{_id,name,role}}},inProgress,attended,important,notes}}\n        `};\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const appointments = resData.data.appointmentsDateAsc;\n        console.log(appointments);\n        const responseAlert = JSON.stringify(resData.data).slice(2,15);\n        this.setState({userAlert: responseAlert});\n\n        this.context.appointments = appointments;\n        this.setState({appointments: appointments})\n        // if (this.isActive) {\n        //   this.setState({ appointments: appointments, isLoading: false });\n        // }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n        // if (this.isActive) {\n        //   this.setState({ isLoading: false });\n        // }\n      });\n  }\n  fetchAppointmentsDesc = () => {\n    console.log(\"'fetch appointments function' context object... \" + JSON.stringify(this.context));\n    const userId = this.context.userId;\n\n    // this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n            query {appointmentsDateDesc(userId:\"${userId}\")\n            {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,contact{email,phone},consultant{reference{_id,name,role}}},inProgress,attended,important,notes}}\n        `};\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const appointments = resData.data.appointmentsDateDesc;\n        console.log(appointments);\n        const responseAlert = JSON.stringify(resData.data).slice(2,15);\n        this.setState({userAlert: responseAlert});\n\n        this.context.appointments = appointments;\n        this.setState({appointments: appointments})\n        // if (this.isActive) {\n        //   this.setState({ appointments: appointments, isLoading: false });\n        // }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n        // if (this.isActive) {\n        //   this.setState({ isLoading: false });\n        // }\n      });\n  }\n\n  modalDeleteHandler = () => {\n    console.log(\"deleting appointment...selectedAppointment:  \", this.context.selectedAppointment);\n\n    const userId = this.context.userId;\n    const selectedAppointmentId = this.context.selectedAppointment._id;\n\n    if(this.context.user.role !== 'admin') {\n      console.log(\"Not the Admin! No edit permission!!\");\n      this.setState({userAlert: \"Not the Admin! No edit permission!!\"});\n    }\n\n    this.setState({deleting: true});\n\n\n    const requestBody = {\n      query: `\n          mutation {deleteAppointment(userId:\"${userId}\",appointmentId:\"${selectedAppointmentId}\")\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important,notes}}\n        `};\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"resData:  \", resData);\n        // console.log(\"resData.data.deleteAppointment:  \", resData.data.deleteAppointment);\n        let deletedAppointment = resData.data.deleteAppointment;\n        console.log(deletedAppointment);\n        const responseAlert = JSON.stringify(resData.data).slice(2,15);\n        this.setState({userAlert: responseAlert});\n\n        let deletedAppointmentId = deletedAppointment._id;\n        deletedAppointment = this.state.appointments.find(e => e._id === deletedAppointmentId);\n        const deletedAppointmentPos = this.state.appointments.indexOf(deletedAppointment);\n        const slicedArray = this.state.appointments.splice(deletedAppointmentPos, 1);\n        console.log(\"deletedAppointment:  \", JSON.stringify(deletedAppointment),\"  deletedUserPos:  \", deletedAppointmentPos, \"  slicedArray:  \", slicedArray);\n\n        this.setState({ deleting: false });\n\n        this.fetchAppointments();\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ deleting: false });\n        }\n      });\n\n\n  }\n\n  updateAppointmentSpecial (event) {\n\n    console.log(\"special field to update:  \", event.target.value);\n    const field = event.target.value;\n    this.setState({ appointmentUpdateField: field});\n\n  }\n\n\n  showDetailHandler = appointmentId => {\n\n    this.setState(prevState => {\n      const selectedAppointment = prevState.appointments.find(e => e._id === appointmentId);\n      this.setState({selectedAppointment: selectedAppointment});\n      this.context.selectedAppointment = selectedAppointment;\n      console.log(\"selectedAppointment:  \", selectedAppointment);\n      return { selecteAppointment: selectedAppointment };\n    });\n  };\n\n\n  fetchAppointmentToday() {\n    console.log(\"fetching todays appts function:  \");\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n\n    const requestBody = {\n      query: `\n          query {getAppointmentToday(userId:\"${userId}\")\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        `\n    };\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.context.appointmentsToday = resData.data.getAppointmentToday;\n        console.log(\"context today's appts:  \", JSON.stringify(this.context.appointmentsToday));\n\n        const responseAlert = JSON.stringify(resData.data).slice(2,15);\n        this.setState({userAlert: responseAlert});\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n      });\n\n\n  }\n\n\n  fetchAppointmentInProgress() {\n    console.log(\"fetching inProgress appts function:  \");\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n\n    const requestBody = {\n      query: `\n          query {getAppointmentField(userId:\"${userId}\",field:\"inProgress\",query:\"true\"){_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        `\n    };\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.context.appointmentsInProgress = resData.data.getAppointmentField;\n        console.log(\"context in progress appts:  \", JSON.stringify(this.context.appointmentsInProgress));\n\n        const responseAlert = JSON.stringify(resData.data).slice(2,15);\n        this.setState({userAlert: responseAlert});\n\n        if (this.state.selectedPatient === {} || this.context.selectedstate === null) {\n          this.setState({userAlert: \"No Patient Selected\"})\n        }\n        console.log(`\n          context.selectedPatient: ${JSON.stringify(this.context.selectedPatient)},\n          state.selectedPatient: ${JSON.stringify(this.state.selectedPatient)},\n          `);\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n      });\n\n\n  }\n\n  createPdf = (appointment) => {\n    console.log(`\n        creating pdf...\n        user: ${JSON.stringify(appointment)}\n      `);\n\n      const pdfData = {\n        title: \"This pdf is supplied with Appointment data...\",\n        appointment: {\n          _id: appointment._id,\n          title: appointment.title,\n          type: appointment.type,\n          date: appointment.date,\n          time: appointment.time,\n          seenTime: appointment.seenTime,\n          checkinTime: appointment.checkinTime,\n          location: appointment.location,\n          description: appointment.description,\n          patient:{\n            _id: appointment.patient._id,\n            name: appointment.patient.name,\n            contact:\n            {\n              email: appointment.patient.contact.email,\n              phone: appointment.patient.contact.phone\n            }},\n              inProgress: appointment.inProgress,\n              attended: appointment.attended,\n              important: appointment.important,\n              notes: appointment.notes\n            }\n        }\n\n    this.setState({createPdf: true, pdfData: pdfData})\n  }\n\n  closePdfCreator = () => {\n    console.log(`\n      closing pdf creator...\n      `);\n      this.setState({createPdf: false, pdfData: null})\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n\n      {this.state.createPdf === true && (\n          <PdfCreator\n            pdfData={this.state.pdfData}\n            onClosePdfCreator={this.closePdfCreator}\n          />\n      )}\n\n      <Accordion>\n\n      <Row>\n\n      <Col md={3} className=\"MasterCol1\">\n\n      <AlertBox\n            authUserId={this.context.userId}\n            alert={this.state.userAlert}\n          />\n      <SidebarPage/>\n\n      </Col>\n\n      <Col md={9} className=\"MasterCol2\">\n\n          <Container className=\"containerCombinedDetail\">\n\n          <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"appointmentDetail\">\n            <Row>\n              <Col sm={2}>\n                <Nav variant=\"pills\" className=\"flex-column\">\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"MasterList\">MASTER LIST</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"appointmentDetail\">Selected</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"appointmentCreate\">Create New</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"disabled\" disabled>Edit:</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"appointmentEditBasic\">Basic Info</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"appointmentEditField\">Single Field</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"appointmentEditPatient\">Patient</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"disabled\" disabled>Search:</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"SearchInput\">Input</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"SearchResult\">Results</Nav.Link>\n                  </Nav.Item>\n                </Nav>\n              </Col>\n              <Col sm={10}>\n                <Tab.Content>\n                  <Tab.Pane eventKey=\"appointmentDetail\">\n                    {this.state.selectedAppointment === null && (\n                      <Button variant=\"outline-warning\" size=\"lg\" className=\"confirmEditButton\">\n                        Select an Appointment from the Master List\n                      </Button>\n                    )}\n                    {\n                      this.state.isLoading === false &&\n                      this.state.selectedAppointment !== null\n                      &&\n                      (\n                        <AppointmentDetail\n                        authUserId={this.context.userId}\n                        appointment={this.state.selectedAppointment}\n                        onEdit={this.startUpdateAppointmentHandler}\n                        canDelete={this.state.canDelete}\n                        onDelete={this.modalDeleteHandler}\n                        onCreatePdf={this.createPdf}\n                        />\n                    )}\n                  </Tab.Pane>\n\n                  <Tab.Pane eventKey=\"appointmentCreate\">\n                    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={this.startCreateAppointmentHandler} >Create New</Button>\n                    {\n                      this.state.creating &&\n                      this.context.selectedPatient._id !== null\n                      && (\n                        <CreateAppointmentForm\n                        canCancel\n                          canConfirm\n                          onCancel={this.modalCancelHandler}\n                          onConfirm={this.modalConfirmHandler}\n                          onSubmit={this.modalConfirmHandler}\n                          confirmText=\"Confirm\"\n                          selectedPatient={this.context.selectedPatient}\n                        />\n                    )}\n                  </Tab.Pane>\n\n                  <Tab.Pane eventKey=\"appointmentEditBasic\">\n                    {this.state.selectedAppointment === null && (\n                      <Button variant=\"outline-warning\" size=\"lg\" className=\"confirmEditButton\">\n                        Select an Appointment from the Master List\n                      </Button>\n                    )}\n                    {this.state.selectedAppointment !== null && (\n                      <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={this.startUpdateAppointmentHandler}>Edit Basic Data</Button>\n                    )}\n                    {this.state.updating &&\n                      this.state.selectedAppointment !== null\n                      && (\n                      <UpdateAppointmentForm\n                      authUserId={this.context.userId}\n                      canCancel\n                        canConfirm\n                        onCancel={this.modalCancelHandler}\n                        onConfirm={this.modalConfirmUpdateHandler}\n                        confirmText=\"Confirm\"\n                        appointment={this.state.selectedAppointment}\n                      />\n                    )}\n                  </Tab.Pane>\n\n                  <Tab.Pane eventKey=\"appointmentEditField\">\n                    {this.state.selectedAppointment === null && (\n                      <Button variant=\"outline-warning\" size=\"lg\" className=\"confirmEditButton\">\n                        Select an Appointment from the Master List\n                      </Button>\n                    )}\n                    {this.state.selectedAppointment !== null && (\n                      <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={this.startUpdateAppointmentHandler}>Edit a Single Field</Button>\n                    )}\n                    {this.state.updating &&\n                      this.state.selectedAppointment !== null\n                      && (\n                        <UpdateAppointmentFieldForm\n                          authUserId={this.context.userId}\n                          canCancel\n                          canConfirm\n                          onCancel={this.modalCancelHandler}\n                          onConfirm={this.modalConfirmUpdateFieldHandler}\n                          confirmText=\"Confirm\"\n                          appointment={this.state.selectedAppointment}\n                        />\n                    )}\n                  </Tab.Pane>\n\n                  <Tab.Pane eventKey=\"appointmentEditPatient\">\n                    {this.state.selectedAppointment === null && (\n                      <Button variant=\"outline-warning\" size=\"lg\" className=\"confirmEditButton\">\n                        Select an Appointment from the Master List\n                      </Button>\n                    )}\n                    {this.state.selectedAppointment !== null && (\n                      <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" value='patient' onClick={this.updateAppointmentSpecial.bind(this)}>Change Patient:</Button>\n                    )}\n                    {this.state.selecteAppointment !== null &&\n                      this.context.selectedPatient === null &&\n                      this.state.appointmentUpdateField === \"patient\" && (\n                        <Button variant=\"outline-warning\" size=\"lg\" className=\"confirmEditButton\">\n                          Select someone from the Patients page\n                        </Button>\n                      )}\n                    {this.state.selectedAppointment !== null &&\n                      this.context.selectedPatient !== null &&\n                      this.state.appointmentUpdateField === \"patient\" && (\n                      <Row>\n                      <Col md={8} className=\"updateUserColAdd\">\n                      <p><span className=\"bold\">Add Patient :</span> {this.context.selectedPatient.name}</p>\n                      <p><span className=\"bold\">To Appointment :</span> {this.state.selectedAppointment.title}  <span className=\"bold\">On :</span> {new Date(this.state.selecteAppointment.date.substr(0,10)*1000).toISOString().slice(0,10)} <span className=\"bold\">At :</span> {this.state.selecteAppointment.time} ??</p>\n                      <Button variant=\"success\" onClick={this.updateAppointmentPatientHandler}>\n                        Yes\n                      </Button>\n                      </Col>\n                      </Row>\n                    )}\n                  </Tab.Pane>\n\n                  <Tab.Pane eventKey=\"MasterList\">\n                    <Container className=\"containerUserMasterList\">\n                    <Row className=\"searchListRow\">\n                    <Button variant=\"primary\" size=\"sm\" onClick={this.fetchAppointmentsAsc}>\n                       Sort Asc\n                     </Button>\n                    <Button variant=\"info\" size=\"sm\" onClick={this.fetchAppointmentsDesc}>\n                       Sort Desc\n                     </Button>\n                    {this.state.isLoading ? (\n                      <Spinner />\n                    ) :\n                    (\n                      <AppointmentList\n                        appointments={this.state.appointments}\n                        authUserId={this.context.userId}\n                        onViewDetail={this.showDetailHandler}\n                      />\n                    )}\n                    </Row>\n                    </Container>\n                  </Tab.Pane>\n\n                  <Tab.Pane eventKey=\"SearchInput\">\n                    <Container className=\"containerSearchUserInput\">\n                    <Row className=\"searchUserRowAdd\">\n                    <Button variant=\"primary\" onClick={this.startSearchAppointmentHandler}>Search</Button>\n                    </Row>\n\n                    <Row className=\"searchUserRowForm\">\n                    <Col md={10} className=\"searchUserColForm\">\n                    <Tabs defaultActiveKey=\"Field\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"Search\" title=\"Search:\" disabled>\n                    </Tab>\n                    <Tab eventKey=\"Field\" title=\"Search by Field:\">\n                    {this.state.searching !== true && (\n                      <Button variant=\"outline-warning\" className=\"confirmEditButton\" size=\"lg\">\n                        Click the 'Search' Button start\n                      </Button>\n                    )}\n                    {this.state.searching === true && (\n                      <SearchAppointmentForm\n                      authUserId={this.context.userId}\n                      canCancel\n                        canConfirm\n                        onCancel={this.modalCancelHandler}\n                        onConfirm={this.modalConfirmSearchHandler}\n                        confirmText=\"Search\"\n                        appointment={this.context.selectedAppointment}\n                      />\n                    )}\n                    </Tab>\n                    <Tab eventKey=\"Id\" title=\"Search by Id:\">\n                    {this.state.searching !== true && (\n                      <Button variant=\"outline-warning\" className=\"confirmEditButton\" size=\"lg\">\n                        Click the 'Search' Button start\n                      </Button>\n                    )}\n                      {this.state.searching === true && (\n                        <SearchAppointmentIdForm\n                        authUserId={this.context.userId}\n                        canCancel\n                          canConfirm\n                          onCancel={this.modalCancelHandler}\n                          onConfirm={this.modalConfirmSearchIdHandler}\n                          confirmText=\"Search\"\n                          appointment={this.context.selectedAppointment}\n                        />\n                      )}\n                    </Tab>\n                    <Tab eventKey=\"Patient\" title=\"Search by Patient:\">\n                    {this.state.searching !== true && (\n                      <Button variant=\"outline-warning\" className=\"confirmEditButton\" size=\"lg\">\n                        Click the 'Search' Button start\n                      </Button>\n                    )}\n                      {this.state.searching === true && (\n                        <SearchAppointmentPatientForm\n                        authUserId={this.context.userId}\n                        canCancel\n                          canConfirm\n                          onCancel={this.modalCancelHandler}\n                          onConfirm={this.modalConfirmSearchPatientHandler}\n                          confirmText=\"Search\"\n                          appointment={this.context.selectedAppointment}\n                        />\n                      )}\n                    </Tab>\n                    <Tab eventKey=\"Date\" title=\"Search by Date:\">\n                    {this.state.searching !== true && (\n                      <Button variant=\"outline-warning\" className=\"confirmEditButton\" size=\"lg\">\n                        Click the 'Search' Button start\n                      </Button>\n                    )}\n                      {this.state.searching === true && (\n                        <SearchAppointmentDateForm\n                        authUserId={this.context.userId}\n                        canCancel\n                          canConfirm\n                          onCancel={this.modalCancelHandler}\n                          onConfirm={this.modalConfirmSearchDateHandler}\n                          confirmText=\"Search\"\n                          appointment={this.context.selectedAppointment}\n                        />\n                      )}\n                    </Tab>\n                    <Tab eventKey=\"Date Range\" title=\"Search by Date Range:\">\n                    {this.state.searching !== true && (\n                      <Button variant=\"outline-warning\" className=\"confirmEditButton\" size=\"lg\">\n                        Click the 'Search' Button start\n                      </Button>\n                    )}\n                      {this.state.searching === true && (\n                        <SearchAppointmentDateRangeForm\n                        authUserId={this.context.userId}\n                        canCancel\n                          canConfirm\n                          onCancel={this.modalCancelHandler}\n                          onConfirm={this.modalConfirmSearchDateRangeHandler}\n                          confirmText=\"Search\"\n                          appointment={this.context.selectedAppointment}\n                        />\n                      )}\n                    </Tab>\n                    </Tabs>\n                    </Col>\n                    <Col md={10}>\n                    </Col>\n                    </Row>\n                    </Container>\n                  </Tab.Pane>\n\n                  <Tab.Pane eventKey=\"SearchResult\">\n                    <Container className=\"containerSearchUserResults\">\n                    <Row>\n                      <Card className=\"searchCard\">\n                        <Card.Body className=\"searchCardBody\">\n                          <Card.Title>Your Search</Card.Title>\n                          <Card.Text>\n                            Field: {this.state.appointmentSearchField}\n                          </Card.Text>\n                          <Card.Text>\n                            Query: {this.state.appointmentSearchQuery}\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Row>\n                    <Row className=\"searchListRow\">\n                    {\n                      this.state.searchAppointments !== [] && (\n                      <SearchAppointmentList\n                        searchAppointments={this.state.searchAppointments}\n                        authUserId={this.context.userId}\n                        onCancel={this.modalCancelHandler}\n                          onViewDetail={this.showDetailHandler}\n                      />\n                    )}\n                    </Row>\n                    </Container>\n                  </Tab.Pane>\n                </Tab.Content>\n              </Col>\n            </Row>\n          </Tab.Container>\n\n\n          </Container>\n\n      </Col>\n    </Row>\n\n  </Accordion>\n\n        {\n        //   this.state.isLoading === false &&\n        //   (<PatientDetail\n        //     authUserId={this.context.userId}\n        //     patient={this.context.selectedPatient}\n        //     className=\"PatientDetailBox2\"\n        // />)\n      }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AppointmentsPage;\n"]},"metadata":{},"sourceType":"module"}