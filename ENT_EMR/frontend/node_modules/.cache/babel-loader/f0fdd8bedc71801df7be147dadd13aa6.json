{"ast":null,"code":"import _extends from \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdatePatientDiagnosisForm.js\";\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport AuthContext from '../../context/auth-context';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst UpdatePatientDiagnosisForm = props => {\n  const _useState = useState(new Date()),\n        _useState2 = _slicedToArray(_useState, 2),\n        investigationDate = _useState2[0],\n        setInvestigationDate = _useState2[1];\n\n  const handleChangeInvestigationDate = date => {\n    setInvestigationDate(date);\n    console.log(`investigationDate ${investigationDate}`);\n  };\n\n  const patient = _extends({}, props.patient);\n\n  return React.createElement(\"div\", {\n    className: \"UpdateFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: props.onConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, !props.visit && React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridDiagnosisDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Date\"), React.createElement(Form.Control, {\n    type: \"date\",\n    placeholder: \"DiagnosisDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), !props.visit && React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridDiagnosisDateTodayCheckbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Today ?\"), React.createElement(Form.Control, {\n    type: \"checkbox\",\n    onChange: e => {\n      console.log(e.target.checked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), props.visit && React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridDiagnosisDateTodayCheckbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Today ?\"), React.createElement(Form.Control, {\n    type: \"checkbox\",\n    defaultChecked: true,\n    onChange: e => {\n      console.log(e.target.checked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridDiagnosisTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Title\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"DiagnosisTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridDiagnosisType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Type\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"DiagnosisType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridDiagnosisDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Description\"), React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"7\",\n    placeholder: \"DiagnosisDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridDiagnosisAttachmentFormat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Attachment Format\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"DiagnosisAttachmentFormat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridDiagnosisAttachmentFile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"File\"), React.createElement(Form.Control, {\n    type: \"file\",\n    placeholder: \"File\",\n    onChange: e => {\n      console.log(e.target.files[0]);\n      AuthContext._currentValue.file = e.target.files[0];\n      console.log(AuthContext._currentValue.file);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, props.canCancel && React.createElement(Button, {\n    variant: \"danger\",\n    className: \"formButton\",\n    onClick: props.onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Cancel\"), props.canConfirm && React.createElement(Button, {\n    variant: \"primary\",\n    className: \"formButton\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Submit\"), props.visit && React.createElement(Button, {\n    variant: \"success\",\n    className: \"formButton\",\n    onClick: props.onCreateVisitChecklistUpdate.bind(this, \"diagnosis\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Done adding Diagnosis\"))));\n};\n\nexport default UpdatePatientDiagnosisForm;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdatePatientDiagnosisForm.js"],"names":["React","useState","Form","Button","Col","Accordion","AuthContext","DatePicker","UpdatePatientDiagnosisForm","props","Date","investigationDate","setInvestigationDate","handleChangeInvestigationDate","date","console","log","patient","onConfirm","visit","e","target","checked","files","_currentValue","file","canCancel","onCancel","canConfirm","onCreateVisitChecklistUpdate","bind"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport AuthContext from '../../context/auth-context';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst UpdatePatientDiagnosisForm = (props) => {\n\n  const [investigationDate, setInvestigationDate] = useState(new Date());\n\n  const handleChangeInvestigationDate = date => {\n    setInvestigationDate(date);\n    console.log(`investigationDate ${investigationDate}`);\n   }\n\nconst {...patient} = props.patient;\n\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  {!props.visit && (\n  <Form.Group as={Col} controlId=\"formGridDiagnosisDate\">\n    <Form.Label>Date</Form.Label>\n    <Form.Control type=\"date\" placeholder=\"DiagnosisDate\"/>\n  </Form.Group>\n  )}\n  {!props.visit && (\n  <Form.Group as={Col} controlId=\"formGridDiagnosisDateTodayCheckbox\">\n    <Form.Label>Today ?</Form.Label>\n    <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n  </Form.Group>\n  )}\n  {props.visit && (\n  <Form.Group as={Col} controlId=\"formGridDiagnosisDateTodayCheckbox\">\n    <Form.Label>Today ?</Form.Label>\n    <Form.Control type=\"checkbox\" defaultChecked={true} onChange={(e) => {console.log(e.target.checked)}}/>\n  </Form.Group>\n  )}\n\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridDiagnosisTitle\">\n    <Form.Label>Title</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"DiagnosisTitle\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridDiagnosisType\">\n    <Form.Label>Type</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"DiagnosisType\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridDiagnosisDescription\">\n    <Form.Label>Description</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"7\" placeholder=\"DiagnosisDescription\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n\n  <Form.Group as={Col} controlId=\"formGridDiagnosisAttachmentFormat\">\n    <Form.Label>Attachment Format</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"DiagnosisAttachmentFormat\"/>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridDiagnosisAttachmentFile\">\n    <Form.Label>File</Form.Label>\n    <Form.Control type=\"file\" placeholder=\"File\" onChange={(e) => {console.log(e.target.files[0]);AuthContext._currentValue.file = e.target.files[0];console.log(AuthContext._currentValue.file);}}/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n\n  {props.visit && (\n    <Button variant=\"success\" className=\"formButton\" onClick={props.onCreateVisitChecklistUpdate.bind(this, \"diagnosis\")}>\n    Done adding Diagnosis\n    </Button>\n  )}\n  </Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default UpdatePatientDiagnosisForm;\n"]},"metadata":{},"sourceType":"module"}