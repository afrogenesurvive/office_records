{"ast":null,"code":"import _toConsumableArray from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import ReactDOM from'react-dom';import React,{Component}from'react';import Container from'react-bootstrap/Container';import Row from'react-bootstrap/Row';import Col from'react-bootstrap/Col';import Button from'react-bootstrap/Button';import Accordion from'react-bootstrap/Accordion';import SidebarPage from'./Sidebar';import Tabs from'react-bootstrap/Tabs';import Tab from'react-bootstrap/Tab';import Card from'react-bootstrap/Card';// import Modal from '../components/Modal/Modal';\n// import Backdrop from '../components/Backdrop/Backdrop';\nimport AlertBox from'../components/AlertBox';import PdfCreator from'../components/PdfCreator';import AppointmentList from'../components/Appointments/AppointmentList/AppointmentList';import AppointmentDetail from'../components/Appointments/AppointmentDetail';import PatientDetail from'../components/Patients/PatientDetail';import Spinner from'../components/Spinner/Spinner';import AuthContext from'../context/auth-context';import SearchAppointmentList from'../components/Appointments/AppointmentList/SearchAppointmentList';import SearchAppointmentForm from'../components/Forms/SearchAppointmentForm';import SearchAppointmentIdForm from'../components/Forms/SearchAppointmentIdForm';import SearchAppointmentPatientForm from'../components/Forms/SearchAppointmentPatientForm';import SearchAppointmentDateForm from'../components/Forms/SearchAppointmentDateForm';import SearchAppointmentDateRangeForm from'../components/Forms/SearchAppointmentDateRangeForm';import CreateAppointmentForm from'../components/Forms/CreateAppointmentForm';import UpdateAppointmentForm from'../components/Forms/UpdateAppointmentForm';import UpdateAppointmentFieldForm from'../components/Forms/UpdateAppointmentFieldForm';import'./Users.css';var AppointmentsPage=/*#__PURE__*/function(_Component){_inherits(AppointmentsPage,_Component);function AppointmentsPage(){var _getPrototypeOf2;var _this;_classCallCheck(this,AppointmentsPage);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(AppointmentsPage)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={creating:false,updating:false,deleting:false,searching:false,searchAppointments:[],appointments:[],isLoading:false,selectedAppointment:null,selectedPatient:null,appointmentUpdateField:null,appointmentSearchField:null,appointmentSearchQuery:null,canDelete:null,userAlert:null,createPdf:false,pdfData:null};_this.isActive=true;_this.startCreateAppointmentHandler=function(){_this.setState({creating:true});console.log(\"CreateAppointmentForm...\",_this.context.selectedPatient);};_this.startUpdateAppointmentHandler=function(){_this.setState({updating:true});console.log(\"UpdateAppointmentForm...\");};_this.startSearchAppointmentHandler=function(){_this.setState({searching:true});console.log(\"SearchAppointmentForm...\");};_this.modalConfirmHandler=function(event){console.log(\"CreateAppointmentFormData:  \",event.target.formGridTitle.value);_this.setState({creating:false});var userId=_this.context.userId;var selectedPatientId=_this.context.selectedPatient._id;console.log(\"\\n        userId: \".concat(userId,\"\\n        patientId: \").concat(selectedPatientId,\"\\n      \"));if(selectedPatientId===undefined){console.log(\"\\n          select a Patient before creating an Appointment!!\\n          \");_this.setState({userAlert:\"select a Patient before creating an Appointment!!...\"});return;}var title=event.target.formGridTitle.value;var type=event.target.formGridType.value;var date=event.target.formGridDate.value;var time=event.target.formGridTime.value;var seenTime=event.target.formGridSeenTime.value;var checkinTime=event.target.formGridCheckinTime.value;var location=event.target.formGridLocation.value;var description=event.target.formGridDescription.value;var inProgress=event.target.formGridInProgress.value;var attended=event.target.formGridAttended.value;var important=event.target.formGridImportant.value;if(title.trim().length===0||type.trim().length===0||date.trim().length===0||time.trim().length===0||location.trim().length===0||description.trim().length===0||inProgress.trim().length===0||attended.trim().length===0||important.trim().length===0){console.log(\"blank fields detected!!!...Please try again...\");_this.setState({userAlert:\"blank fields detected!!!...Please try again...\"});return;}var appointment={title:title,type:type,date:date,time:time,seenTime:seenTime,checkinTime:checkinTime,location:location,description:description,inProgress:inProgress,attended:attended,important:important};console.log(\"\\n        creating appointment...\\n        title: \".concat(title,\",\\n        type: \").concat(type,\",\\n        date: \").concat(date,\",\\n        time: \").concat(time,\",\\n        seenTime: \").concat(seenTime,\",\\n        checkinTime: \").concat(checkinTime,\",\\n        location: \").concat(location,\",\\n        description: \").concat(description,\",\\n        inProgress: \").concat(inProgress,\",\\n        attended: \").concat(attended,\",\\n        important: \").concat(important,\",\\n      \"));_this.setState({userAlert:\"creating appointment...\"});var requestBody={query:\"\\n          mutation {createAppointment(userId:\\\"\".concat(userId,\"\\\",patientId:\\\"\").concat(selectedPatientId,\"\\\",appointmentInput:{title:\\\"\").concat(title,\"\\\",type:\\\"\").concat(type,\"\\\",date:\\\"\").concat(date,\"\\\",time:\\\"\").concat(time,\"\\\",seenTime:\\\"\").concat(seenTime,\"\\\",checkinTime:\\\"\").concat(checkinTime,\"\\\",location:\\\"\").concat(location,\"\\\",description:\\\"\").concat(description,\"\\\",inProgress:\").concat(inProgress,\",attended:\").concat(attended,\",important:\").concat(important,\",})\\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important}}\\n        \")};var token=_this.context.token;// fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\nfetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+_this.context.token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData.data.createAppointment));var responseAlert=JSON.stringify(resData.data).slice(2,15);_this.setState({userAlert:responseAlert});_this.setState(function(prevState){var updatedAppointments=_toConsumableArray(prevState.appointments);updatedAppointments.push(resData.data.createAppointment);return{appointments:updatedAppointments};});_this.context.appointments=_this.state.appointments;// this.fetchAppointments();\n}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};_this.modalCancelHandler=function(){_this.setState({creating:false,updating:false,searching:false,selectedAppointment:null});};_this.modalConfirmUpdateHandler=function(event){if(_this.context.user.role!=='admin'){console.log(\"Not the Admin! No edit permission!!\");_this.setState({userAlert:\"Not the Admin! No edit permission!!\"});}var userId=_this.context.userId;var appointmentId=_this.context.selectedAppointment._id;var selectedPatientId=_this.context.selectedPatientId;console.log(\"\\n        userId: \".concat(userId,\"\\n        appointmentd: \").concat(appointmentId,\",\\n      \"));// console.log(\"UpdateUserFormData:  \", event);\nconsole.log(\"UpdateAppointmentFormData:  \",event.target.formGridTitle.value);_this.setState({updating:false});var title=event.target.formGridTitle.value;var type=event.target.formGridType.value;var date=event.target.formGridDate.value;var time=event.target.formGridTime.value;var seenTime=event.target.formGridSeenTime.value;var checkinTime=event.target.formGridCheckinTime.value;var location=event.target.formGridLocation.value;var description=event.target.formGridDescription.value;var inProgress=event.target.formGridInProgress.value;var attended=event.target.formGridAttended.value;var important=event.target.formGridImportant.value;if(title.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");title=_this.context.selectedAppointment.title;// return;\n}if(type.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");type=_this.context.selectedAppointment.type;}if(date.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");date=_this.context.selectedAppointment.date;}if(time.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");time=_this.context.selectedAppointment.time;}if(seenTime.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");seenTime=_this.context.selectedAppointment.seenTime;}if(checkinTime.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");checkinTime=_this.context.selectedAppointment.checkinTime;}if(location.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");location=_this.context.selectedAppointment.location;}if(description.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");description=_this.context.selectedAppointment.description;}if(inProgress.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");inProgress=_this.context.selectedAppointment.inProgress;}if(attended.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");attended=_this.context.selectedAppointment.attended;}if(important.trim().length===0){console.log(\"blank fields detected!!!...filling w/ previous data...\");important=_this.context.selectedAppointment.important;}var appointment={title:title,type:type,date:date,time:time,seenTime:seenTime,checkinTime:checkinTime,location:location,description:description,inProgress:inProgress,attended:attended,important:important};console.log(\"\\n        updating appointment...\\n        title: \".concat(title,\",\\n        type: \").concat(type,\",\\n        date: \").concat(date,\",\\n        time: \").concat(time,\",\\n        seenTime: \").concat(seenTime,\",\\n        checkinTime: \").concat(checkinTime,\",\\n        location: \").concat(location,\",\\n        description: \").concat(description,\",\\n        inProgress: \").concat(inProgress,\",\\n        attended: \").concat(attended,\",\\n        important: \").concat(important,\",\\n      \"));_this.setState({userAlert:\"updating appointment...\"});var requestBody={query:\"\\n      mutation {updateAppointment(userId:\\\"\".concat(userId,\"\\\",appointmentId:\\\"\").concat(appointmentId,\"\\\",appointmentInput:{title:\\\"\").concat(title,\"\\\",type:\\\"\").concat(type,\"\\\",date:\\\"\").concat(date,\"\\\",time:\\\"\").concat(time,\"\\\",seenTime:\\\"\").concat(seenTime,\"\\\",checkinTime:\\\"\").concat(checkinTime,\"\\\",location:\\\"\").concat(location,\"\\\",description:\\\"\").concat(description,\"\\\",inProgress:\").concat(inProgress,\",attended:\").concat(attended,\",important:\").concat(important,\",})\\n      {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important,notes}}\\n        \")};var token=_this.context.token;// fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\nfetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData));var updatedAppointmentId=resData.data.updateAppointment._id;var updatedAppointment=_this.state.appointments.find(function(e){return e._id===updatedAppointmentId;});var updatedAppointmentPos=_this.state.appointments.indexOf(updatedAppointment);var slicedArray=_this.state.appointments.splice(updatedAppointmentPos,1);console.log(\"updatedAppointment:  \",JSON.stringify(updatedAppointment),\"  updatedPatientPos:  \",updatedAppointmentPos,\"  slicedArray:  \",slicedArray);_this.state.appointments.push(resData.data.updateAppointment);var responseAlert=JSON.stringify(resData.data).slice(2,25);_this.setState({userAlert:responseAlert,selectedAppointment:resData.data.updateAppointment});_this.fetchAppointments();}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};_this.updateAppointmentPatientHandler=function(event){var token=_this.context.token;var userId=_this.context.userId;var selectedAppointmentId=_this.context.selectedAppointment._id;var selectedPatientId=_this.context.selectedPatient._id;if(_this.context.user.role!=='admin'){console.log(\"No edit permission!!\");_this.setState({userAlert:\"No edit permission!!\"});return;}if(selectedPatientId===undefined){console.log(\"\\n        select a Patient before creating an Appointment!!\\n        \");_this.setState({userAlert:\"select a Patient before creating an Appointment!!...\"});return;}_this.setState({updating:false,patientUpdateField:null});console.log(\"\\n      updating appointment patient...\\n      userId: \".concat(userId,\",\\n      appointmentId: \").concat(selectedAppointmentId,\",\\n      patientId: \").concat(selectedPatientId,\",\\n      \"));_this.setState({userAlert:\"updating appointment patient...\"});var requestBody={query:\"\\n        mutation {updateAppointmentPatient(userId:\\\"\".concat(userId,\"\\\",appointmentId:\\\"\").concat(selectedAppointmentId,\"\\\",patientId:\\\"\").concat(selectedPatientId,\"\\\")\\n        {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title},consultant{reference{_id,name,role}}},inProgress,attended,important}}\\n        \")};// fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\nfetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData));var updatedAppointmentId=resData.data.updateAppointmentPatient._id;var updatedAppointment=_this.state.appointments.find(function(e){return e._id===updatedAppointmentId;});var updatedAppointmentPos=_this.state.appointments.indexOf(updatedAppointment);var slicedArray=_this.state.appointments.splice(updatedAppointmentPos,1);console.log(\"updatedAppointment:  \",JSON.stringify(updatedAppointment),\"  updatedPatientPos:  \",updatedAppointmentPos,\"  slicedArray:  \",slicedArray);_this.state.appointments.push(resData.data.updateAppointmentPatient);var responseAlert=JSON.stringify(resData.data).slice(2,25);_this.setState({userAlert:responseAlert,selectedAppointment:resData.data.updateAppointmentPatient});_this.fetchAppointments();}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};_this.modalConfirmUpdateFieldHandler=function(event){var token=_this.context.token;var userId=_this.context.userId;var selectedAppointmentId=_this.context.selectedAppointment._id;if(_this.context.user.role!=='admin'){console.log(\"Not the creator or Admin! No edit permission!!\");selectedAppointmentId=null;}console.log(\"UpdateAppointmentFieldFormData:  \",event.target.formGridField.value);_this.setState({updating:false});var field=null;var query=event.target.formGridQuery.value;if(event.target.formGridFieldSelect.value===\"select\"){field=event.target.formGridField.value;}else{field=event.target.formGridFieldSelect.value;}var requestBody={query:\"\\n        mutation {updateAppointmentField(userId:\\\"\".concat(userId,\"\\\",appointmentId:\\\"\").concat(selectedAppointmentId,\"\\\",field:\\\"\").concat(field,\"\\\",query:\\\"\").concat(query,\"\\\")\\n        {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important,notes}}\\n        \")};// fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\nfetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData.data.updateAppointmentField));var updatedAppointmentId=resData.data.updateAppointmentField._id;var updatedAppointment=_this.state.appointments.find(function(e){return e._id===updatedAppointmentId;});var updatedAppointmentPos=_this.state.appointments.indexOf(updatedAppointment);var slicedArray=_this.state.appointments.splice(updatedAppointmentPos,1);console.log(\"updatedAppointment:  \",JSON.stringify(updatedAppointment),\"  updatedAppointmentPos:  \",updatedAppointmentPos,\"  slicedArray:  \",slicedArray);_this.state.appointments.push(resData.data.updateAppointmentField);_this.context.appointments=_this.state.appointments;var responseAlert=JSON.stringify(resData.data).slice(2,25);_this.setState({userAlert:responseAlert,selectedAppointment:resData.data.updateAppointmentField});_this.fetchAppointments();}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};_this.modalConfirmSearchHandler=function(event){console.log(\"SearchAppointmentForm:  \");var userId=_this.context.userId;console.log(\"SearchAppointmentFormData:  \",event.target.formBasicField.value);_this.setState({searching:false});var field=null;var query=event.target.formBasicQuery.value;if(event.target.formBasicFieldSelect.value===\"select\"){field=event.target.formBasicField.value;}else{field=event.target.formBasicFieldSelect.value;}if(field.trim().length===0||query.trim().length===0){console.log(\"blank fields detected!!!...Please try again...\");_this.setState({userAlert:\"blank fields detected!!!...Please try again...\"});return;}var search={field:field,query:query};console.log(\"Searching for Appointment:  \",JSON.stringify(search));var requestBody={query:\"\\n          query {getAppointmentField(userId:\\\"\".concat(userId,\"\\\", field:\\\"\").concat(field,\"\\\", query:\\\"\").concat(query,\"\\\")\\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title},consultant{reference{_id,name,role}}},inProgress,attended,important}}\\n        \")};var token=_this.context.token;// fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\nfetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData));var responseAlert=JSON.stringify(resData.data).slice(2,15);_this.setState({userAlert:responseAlert});var searchAppointments=resData.data.getAppointmentField;_this.setState({searchAppointments:searchAppointments});console.log(\"state.searchAppointments:  \",_this.state.searchAppointments);// this.fetchAppointments();\n}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};_this.modalConfirmSearchIdHandler=function(event){console.log(\"\\n      SearchAppointmentIdFormData\\n      \");var userId=_this.context.userId;_this.setState({searching:false});var selectedAppointmentId=event.target.formBasicId.value;var requestBody={query:\"\\n          query {getAppointmentId(userId:\\\"\".concat(userId,\"\\\", appointmentId:\\\"\").concat(selectedAppointmentId,\"\\\")\\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\\n        \")};var token=_this.context.token;// fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\nfetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData));var responseAlert=JSON.stringify(resData.data).slice(2,15);_this.setState({userAlert:responseAlert});var searchAppointments=resData.data.getAppointmentId;_this.setState({searchAppointments:[searchAppointments]});console.log(\"state.searchAppointments:  \",_this.state.searchAppointments);// this.fetchUsers();\n}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};_this.modalConfirmSearchPatientHandler=function(event){console.log(\"\\n      SearchAppointmentPatientFormData\\n      \");var userId=_this.context.userId;_this.setState({searching:false});var selectedPatientId=event.target.formBasicPatientId.value;var requestBody={query:\"\\n          query {getAppointmentPatient(userId:\\\"\".concat(userId,\"\\\", patientId:\\\"\").concat(selectedPatientId,\"\\\")\\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\\n        \")};var token=_this.context.token;// fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\nfetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData));var responseAlert=JSON.stringify(resData.data).slice(2,15);// const responseAlert = JSON.stringify(resData.errors).slice(2,15);\n_this.setState({userAlert:responseAlert});var searchAppointments=resData.data.getAppointmentPatient;_this.setState({searchAppointments:searchAppointments});// this.state.searchApointments.push(searchAppointments)\nconsole.log(\"state.searchApointments:  \",_this.state.searchApointments);// this.fetchUsers();\n}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};_this.modalConfirmSearchDateHandler=function(event){console.log(\"\\n      SearchAppointmentDateFormData\\n      \");var userId=_this.context.userId;_this.setState({searching:false});var appointmentDate=event.target.formBasicDate.value;var requestBody={query:\"\\n          query {getAppointmentDate(userId:\\\"\".concat(userId,\"\\\",date:\\\"\").concat(appointmentDate,\"\\\")\\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\\n        \")};var token=_this.context.token;// fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\nfetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData));var responseAlert=JSON.stringify(resData.data).slice(2,15);_this.setState({userAlert:responseAlert});var searchAppointments=resData.data.getAppointmentDate;_this.setState({searchAppointments:searchAppointments});console.log(\"state.searchAppointments:  \",_this.state.searchAppointments);// this.fetchUsers();\n}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};_this.modalConfirmSearchDateRangeHandler=function(event){console.log(\"\\n      SearchAppointmentDateRangeFormData\\n      \");var userId=_this.context.userId;_this.setState({searching:false});var appointmentStartDate=event.target.formBasicStartDate.value;var appointmentEndDate=event.target.formBasicEndDate.value;var requestBody={query:\"\\n          query {getAppointmentDateRange(userId:\\\"\".concat(userId,\"\\\",startDate:\\\"\").concat(appointmentStartDate,\"\\\",endDate:\\\"\").concat(appointmentEndDate,\"\\\")\\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\\n        \")};var token=_this.context.token;// fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\nfetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"response data... \"+JSON.stringify(resData));var responseAlert=JSON.stringify(resData.data).slice(2,15);_this.setState({userAlert:responseAlert});var searchApointments=resData.data.getApointmentId;_this.setState({searchApointments:searchApointments});console.log(\"state.searchApointments:  \",_this.state.searchApointments);// this.fetchUsers();\n}).catch(function(err){console.log(err);_this.setState({userAlert:err});});};_this.modalCancelHandler=function(){_this.setState({creating:false,updating:false,searching:false,selectedAppointment:null});};_this.fetchAppointmentsAsc=function(){console.log(\"'fetch appointments function' context object... \"+JSON.stringify(_this.context));var userId=_this.context.userId;// this.setState({ isLoading: true });\nvar requestBody={query:\"\\n            query {appointmentsDateAsc(userId:\\\"\".concat(userId,\"\\\")\\n            {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,consultant{reference{_id,name,role}}},inProgress,attended,important,notes}}\\n        \")};// fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\nfetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+_this.context.token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){var appointments=resData.data.appointmentsDateAsc;console.log(appointments);var responseAlert=JSON.stringify(resData.data).slice(2,15);_this.setState({userAlert:responseAlert});_this.context.appointments=appointments;_this.setState({appointments:appointments});// if (this.isActive) {\n//   this.setState({ appointments: appointments, isLoading: false });\n// }\n}).catch(function(err){console.log(err);_this.setState({userAlert:err});// if (this.isActive) {\n//   this.setState({ isLoading: false });\n// }\n});};_this.fetchAppointmentsDesc=function(){console.log(\"'fetch appointments function' context object... \"+JSON.stringify(_this.context));var userId=_this.context.userId;// this.setState({ isLoading: true });\nvar requestBody={query:\"\\n            query {appointmentsDateDesc(userId:\\\"\".concat(userId,\"\\\")\\n            {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,consultant{reference{_id,name,role}}},inProgress,attended,important,notes}}\\n        \")};// fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\nfetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+_this.context.token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){var appointments=resData.data.appointmentsDateDesc;console.log(appointments);var responseAlert=JSON.stringify(resData.data).slice(2,15);_this.setState({userAlert:responseAlert});_this.context.appointments=appointments;_this.setState({appointments:appointments});// if (this.isActive) {\n//   this.setState({ appointments: appointments, isLoading: false });\n// }\n}).catch(function(err){console.log(err);_this.setState({userAlert:err});// if (this.isActive) {\n//   this.setState({ isLoading: false });\n// }\n});};_this.modalDeleteHandler=function(){console.log(\"deleting appointment...selectedAppointment:  \",_this.context.selectedAppointment);var userId=_this.context.userId;var selectedAppointmentId=_this.context.selectedAppointment._id;if(_this.context.user.role!=='admin'){console.log(\"Not the Admin! No edit permission!!\");_this.setState({userAlert:\"Not the Admin! No edit permission!!\"});}_this.setState({deleting:true});var requestBody={query:\"\\n          mutation {deleteAppointment(userId:\\\"\".concat(userId,\"\\\",appointmentId:\\\"\").concat(selectedAppointmentId,\"\\\")\\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important,notes}}\\n        \")};// fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\nfetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+_this.context.token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){console.log(\"resData:  \",resData);// console.log(\"resData.data.deleteAppointment:  \", resData.data.deleteAppointment);\nvar deletedAppointment=resData.data.deleteAppointment;console.log(deletedAppointment);var responseAlert=JSON.stringify(resData.data).slice(2,15);_this.setState({userAlert:responseAlert});var deletedAppointmentId=deletedAppointment._id;deletedAppointment=_this.state.appointments.find(function(e){return e._id===deletedAppointmentId;});var deletedAppointmentPos=_this.state.appointments.indexOf(deletedAppointment);var slicedArray=_this.state.appointments.splice(deletedAppointmentPos,1);console.log(\"deletedAppointment:  \",JSON.stringify(deletedAppointment),\"  deletedUserPos:  \",deletedAppointmentPos,\"  slicedArray:  \",slicedArray);_this.setState({deleting:false});_this.fetchAppointments();}).catch(function(err){console.log(err);_this.setState({userAlert:err});if(_this.isActive){_this.setState({deleting:false});}});};_this.showDetailHandler=function(appointmentId){_this.setState(function(prevState){var selectedAppointment=prevState.appointments.find(function(e){return e._id===appointmentId;});_this.setState({selectedAppointment:selectedAppointment});_this.context.selectedAppointment=selectedAppointment;console.log(\"selectedAppointment:  \",selectedAppointment);return{selecteAppointment:selectedAppointment};});};_this.createPdf=function(appointment){console.log(\"\\n        creating pdf...\\n        user: \".concat(JSON.stringify(appointment),\"\\n      \"));var pdfData={title:appointment.title,body:appointment.date};_this.setState({createPdf:true,pdfData:pdfData});};_this.closePdfCreator=function(){console.log(\"\\n      closing pdf creator...\\n      \");_this.setState({createPdf:false,pdfData:null});};return _this;}_createClass(AppointmentsPage,[{key:\"componentDidMount\",// constructor(props) {\n//   super(props);\n// }\nvalue:function componentDidMount(){this.fetchAppointments();this.fetchAppointmentToday();this.fetchAppointmentInProgress();if(this.context.user.name==='admin579'){this.setState({canDelete:true});}// this.setState({selectedPatient: this.context.selectedPatient});\n// console.log(`\n//   context.selectedPatient: ${JSON.stringify(this.context.selectedPatient)},\n//   state.selectedPatient: ${JSON.stringify(this.state.selectedPatient)},\n//   `);\n}},{key:\"fetchAppointments\",value:function fetchAppointments(){var _this2=this;console.log(\"'fetch appointments function' context object... \"+JSON.stringify(this.context));var userId=this.context.userId;this.setState({isLoading:true});var requestBody={query:\"\\n            query {appointments(userId:\\\"\".concat(userId,\"\\\")\\n            {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,consultant{reference{_id,name,role}}},inProgress,attended,important,notes}}\\n        \")};// fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\nfetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+this.context.token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){var appointments=resData.data.appointments;console.log(appointments);var responseAlert=JSON.stringify(resData.data).slice(2,15);_this2.setState({userAlert:responseAlert});_this2.context.appointments=_this2.state.appointments;if(_this2.isActive){_this2.setState({appointments:appointments,isLoading:false});}}).catch(function(err){console.log(err);_this2.setState({userAlert:err});if(_this2.isActive){_this2.setState({isLoading:false});}});}},{key:\"updateAppointmentSpecial\",value:function updateAppointmentSpecial(event){console.log(\"special field to update:  \",event.target.value);var field=event.target.value;this.setState({appointmentUpdateField:field});}},{key:\"fetchAppointmentToday\",value:function fetchAppointmentToday(){var _this3=this;console.log(\"fetching todays appts function:  \");var token=this.context.token;var userId=this.context.userId;var requestBody={query:\"\\n          query {getAppointmentToday(userId:\\\"\".concat(userId,\"\\\")\\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\\n        \")};// fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\nfetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){_this3.context.appointmentsToday=resData.data.getAppointmentToday;console.log(\"context today's appts:  \",JSON.stringify(_this3.context.appointmentsToday));var responseAlert=JSON.stringify(resData.data).slice(2,15);_this3.setState({userAlert:responseAlert});}).catch(function(err){console.log(err);_this3.setState({userAlert:err});});}},{key:\"fetchAppointmentInProgress\",value:function fetchAppointmentInProgress(){var _this4=this;console.log(\"fetching inProgress appts function:  \");var token=this.context.token;var userId=this.context.userId;var requestBody={query:\"\\n          query {getAppointmentField(userId:\\\"\".concat(userId,\"\\\",field:\\\"inProgress\\\",query:\\\"true\\\"){_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\\n        \")};// fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\nfetch('http://localhost:10000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json',Authorization:'Bearer '+token}}).then(function(res){if(res.status!==200&&res.status!==201){throw new Error('Failed!');}return res.json();}).then(function(resData){_this4.context.appointmentsInProgress=resData.data.getAppointmentField;console.log(\"context in progress appts:  \",JSON.stringify(_this4.context.appointmentsInProgress));var responseAlert=JSON.stringify(resData.data).slice(2,15);_this4.setState({userAlert:responseAlert});if(_this4.state.selectedPatient==={}||_this4.context.selectedstate===null){_this4.setState({userAlert:\"No Patient Selected\"});}console.log(\"\\n          context.selectedPatient: \".concat(JSON.stringify(_this4.context.selectedPatient),\",\\n          state.selectedPatient: \").concat(JSON.stringify(_this4.state.selectedPatient),\",\\n          \"));}).catch(function(err){console.log(err);_this4.setState({userAlert:err});});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.isActive=false;}},{key:\"render\",value:function render(){return React.createElement(React.Fragment,null,this.state.createPdf===true&&React.createElement(PdfCreator,{pdfData:this.state.pdfData,onClosePdfCreator:this.closePdfCreator}),React.createElement(Accordion,null,React.createElement(Row,null,React.createElement(Col,{md:3,className:\"MasterCol1\"},React.createElement(AlertBox,{authUserId:this.context.userId,alert:this.state.userAlert}),React.createElement(SidebarPage,null)),React.createElement(Col,{md:9,className:\"MasterCol2\"},React.createElement(Container,{className:\"containerCombinedDetail\"},React.createElement(Tabs,{defaultActiveKey:\"appointmentDetail\",id:\"uncontrolled-tab-example\"},React.createElement(Tab,{eventKey:\"appointmentDetail\",title:\"Selected Appointment Data\"},this.state.selectedAppointment===null&&React.createElement(Button,{variant:\"outline-warning\",size:\"lg\",className:\"confirmEditButton\"},\"Select an Appointment from the Master List\"),this.state.isLoading===false&&this.state.selectedAppointment!==null&&React.createElement(AppointmentDetail,{authUserId:this.context.userId,appointment:this.state.selectedAppointment,onEdit:this.startUpdateAppointmentHandler,canDelete:this.state.canDelete,onDelete:this.modalDeleteHandler,onCreatePdf:this.createPdf})),React.createElement(Tab,{eventKey:\"appointmentCreate\",title:\"Create New\"},React.createElement(Button,{variant:\"outline-primary\",size:\"lg\",className:\"confirmEditButton\",onClick:this.startCreateAppointmentHandler},\"Create New\"),this.state.creating&&this.context.selectedPatient._id!==null&&React.createElement(CreateAppointmentForm,{canCancel:true,canConfirm:true,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmHandler,onSubmit:this.modalConfirmHandler,confirmText:\"Confirm\",selectedPatient:this.context.selectedPatient})),React.createElement(Tab,{eventKey:\"appointmentEditBasic\",title:\"Edit Basic Data\"},this.state.selectedAppointment===null&&React.createElement(Button,{variant:\"outline-warning\",size:\"lg\",className:\"confirmEditButton\"},\"Select an Appointment from the Master List\"),this.state.selectedAppointment!==null&&React.createElement(Button,{variant:\"outline-primary\",size:\"lg\",className:\"confirmEditButton\",onClick:this.startUpdateAppointmentHandler},\"Edit Basic Data\"),this.state.updating&&this.state.selectedAppointment!==null&&React.createElement(UpdateAppointmentForm,{authUserId:this.context.userId,canCancel:true,canConfirm:true,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmUpdateHandler,confirmText:\"Confirm\",appointment:this.state.selectedAppointment})),React.createElement(Tab,{eventKey:\"appointmentEditField\",title:\"Edit a Single Field\"},this.state.selectedAppointment===null&&React.createElement(Button,{variant:\"outline-warning\",size:\"lg\",className:\"confirmEditButton\"},\"Select an Appointment from the Master List\"),this.state.selectedAppointment!==null&&React.createElement(Button,{variant:\"outline-primary\",size:\"lg\",className:\"confirmEditButton\",onClick:this.startUpdateAppointmentHandler},\"Edit a Single Field\"),this.state.updating&&this.state.selectedAppointment!==null&&React.createElement(UpdateAppointmentFieldForm,{authUserId:this.context.userId,canCancel:true,canConfirm:true,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmUpdateFieldHandler,confirmText:\"Confirm\",appointment:this.state.selectedAppointment})),React.createElement(Tab,{eventKey:\"appointmentEditPatient\",title:\"Change Patient\"},this.state.selectedAppointment===null&&React.createElement(Button,{variant:\"outline-warning\",size:\"lg\",className:\"confirmEditButton\"},\"Select an Appointment from the Master List\"),this.state.selectedAppointment!==null&&React.createElement(Button,{variant:\"outline-primary\",size:\"lg\",className:\"confirmEditButton\",value:\"patient\",onClick:this.updateAppointmentSpecial.bind(this)},\"Change Patient:\"),this.state.selecteAppointment!==null&&this.context.selectedPatient===null&&this.state.appointmentUpdateField===\"patient\"&&React.createElement(Button,{variant:\"outline-warning\",size:\"lg\",className:\"confirmEditButton\"},\"Select someone from the Patients page\"),this.state.selectedAppointment!==null&&this.context.selectedPatient!==null&&this.state.appointmentUpdateField===\"patient\"&&React.createElement(Row,null,React.createElement(Col,{md:8,className:\"updateUserColAdd\"},React.createElement(\"p\",null,React.createElement(\"span\",{className:\"bold\"},\"Add Patient :\"),\" \",this.context.selectedPatient.name),React.createElement(\"p\",null,React.createElement(\"span\",{className:\"bold\"},\"To Appointment :\"),\" \",this.state.selectedAppointment.title,\"  \",React.createElement(\"span\",{className:\"bold\"},\"On :\"),\" \",new Date(this.state.selecteAppointment.date.substr(0,10)*1000).toISOString().slice(0,10),\" \",React.createElement(\"span\",{className:\"bold\"},\"At :\"),\" \",this.state.selecteAppointment.time,\" ??\"),React.createElement(Button,{variant:\"success\",onClick:this.updateAppointmentPatientHandler},\"Yes\")))),React.createElement(Tab,{eventKey:\"MasterList\",title:\"MASTER LIST\"},React.createElement(Container,{className:\"containerUserMasterList\"},React.createElement(Row,{className:\"searchListRow\"},React.createElement(Button,{variant:\"primary\",size:\"sm\",onClick:this.fetchAppointmentsAsc},\"Sort Asc\"),React.createElement(Button,{variant:\"info\",size:\"sm\",onClick:this.fetchAppointmentsDesc},\"Sort Desc\"),this.state.isLoading?React.createElement(Spinner,null):React.createElement(AppointmentList,{appointments:this.state.appointments,authUserId:this.context.userId,onViewDetail:this.showDetailHandler})))),React.createElement(Tab,{eventKey:\"SearchInput\",title:\"Search\"},React.createElement(Container,{className:\"containerSearchUserInput\"},React.createElement(Row,{className:\"searchUserRowAdd\"},React.createElement(Button,{variant:\"primary\",onClick:this.startSearchAppointmentHandler},\"Search\")),React.createElement(Row,{className:\"searchUserRowForm\"},React.createElement(Col,{md:10,className:\"searchUserColForm\"},React.createElement(Tabs,{defaultActiveKey:\"Field\",id:\"uncontrolled-tab-example\"},React.createElement(Tab,{eventKey:\"Search\",title:\"Search:\",disabled:true}),React.createElement(Tab,{eventKey:\"Field\",title:\"Search by Field:\"},this.state.searching!==true&&React.createElement(Button,{variant:\"outline-warning\",className:\"confirmEditButton\",size:\"lg\"},\"Click the 'Search' Button start\"),this.state.searching===true&&React.createElement(SearchAppointmentForm,{authUserId:this.context.userId,canCancel:true,canConfirm:true,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchHandler,confirmText:\"Search\",appointment:this.context.selectedAppointment})),React.createElement(Tab,{eventKey:\"Id\",title:\"Search by Id:\"},this.state.searching!==true&&React.createElement(Button,{variant:\"outline-warning\",className:\"confirmEditButton\",size:\"lg\"},\"Click the 'Search' Button start\"),this.state.searching===true&&React.createElement(SearchAppointmentIdForm,{authUserId:this.context.userId,canCancel:true,canConfirm:true,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchIdHandler,confirmText:\"Search\",appointment:this.context.selectedAppointment})),React.createElement(Tab,{eventKey:\"Patient\",title:\"Search by Patient:\"},this.state.searching!==true&&React.createElement(Button,{variant:\"outline-warning\",className:\"confirmEditButton\",size:\"lg\"},\"Click the 'Search' Button start\"),this.state.searching===true&&React.createElement(SearchAppointmentPatientForm,{authUserId:this.context.userId,canCancel:true,canConfirm:true,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchPatientHandler,confirmText:\"Search\",appointment:this.context.selectedAppointment})),React.createElement(Tab,{eventKey:\"Date\",title:\"Search by Date:\"},this.state.searching!==true&&React.createElement(Button,{variant:\"outline-warning\",className:\"confirmEditButton\",size:\"lg\"},\"Click the 'Search' Button start\"),this.state.searching===true&&React.createElement(SearchAppointmentDateForm,{authUserId:this.context.userId,canCancel:true,canConfirm:true,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchDateHandler,confirmText:\"Search\",appointment:this.context.selectedAppointment})),React.createElement(Tab,{eventKey:\"Date Range\",title:\"Search by Date Range:\"},this.state.searching!==true&&React.createElement(Button,{variant:\"outline-warning\",className:\"confirmEditButton\",size:\"lg\"},\"Click the 'Search' Button start\"),this.state.searching===true&&React.createElement(SearchAppointmentDateRangeForm,{authUserId:this.context.userId,canCancel:true,canConfirm:true,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchDateRangeHandler,confirmText:\"Search\",appointment:this.context.selectedAppointment})))),React.createElement(Col,{md:10})))),React.createElement(Tab,{eventKey:\"SearchResult\",title:\"Search Results\"},React.createElement(Container,{className:\"containerSearchUserResults\"},React.createElement(Row,null,React.createElement(Card,{className:\"searchCard\"},React.createElement(Card.Body,{className:\"searchCardBody\"},React.createElement(Card.Title,null,\"Your Search\"),React.createElement(Card.Text,null,\"Field: \",this.state.appointmentSearchField),React.createElement(Card.Text,null,\"Query: \",this.state.appointmentSearchQuery)))),React.createElement(Row,{className:\"searchListRow\"},this.state.searchAppointments!==[]&&React.createElement(SearchAppointmentList,{searchAppointments:this.state.searchAppointments,authUserId:this.context.userId,onCancel:this.modalCancelHandler,onViewDetail:this.showDetailHandler}))))))))));}}]);return AppointmentsPage;}(Component);AppointmentsPage.contextType=AuthContext;export default AppointmentsPage;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/Appointments.js"],"names":["ReactDOM","React","Component","Container","Row","Col","Button","Accordion","SidebarPage","Tabs","Tab","Card","AlertBox","PdfCreator","AppointmentList","AppointmentDetail","PatientDetail","Spinner","AuthContext","SearchAppointmentList","SearchAppointmentForm","SearchAppointmentIdForm","SearchAppointmentPatientForm","SearchAppointmentDateForm","SearchAppointmentDateRangeForm","CreateAppointmentForm","UpdateAppointmentForm","UpdateAppointmentFieldForm","AppointmentsPage","state","creating","updating","deleting","searching","searchAppointments","appointments","isLoading","selectedAppointment","selectedPatient","appointmentUpdateField","appointmentSearchField","appointmentSearchQuery","canDelete","userAlert","createPdf","pdfData","isActive","startCreateAppointmentHandler","setState","console","log","context","startUpdateAppointmentHandler","startSearchAppointmentHandler","modalConfirmHandler","event","target","formGridTitle","value","userId","selectedPatientId","_id","undefined","title","type","formGridType","date","formGridDate","time","formGridTime","seenTime","formGridSeenTime","checkinTime","formGridCheckinTime","location","formGridLocation","description","formGridDescription","inProgress","formGridInProgress","attended","formGridAttended","important","formGridImportant","trim","length","appointment","requestBody","query","token","fetch","method","body","JSON","stringify","headers","Authorization","then","res","status","Error","json","resData","data","createAppointment","responseAlert","slice","prevState","updatedAppointments","push","catch","err","modalCancelHandler","modalConfirmUpdateHandler","user","role","appointmentId","updatedAppointmentId","updateAppointment","updatedAppointment","find","e","updatedAppointmentPos","indexOf","slicedArray","splice","fetchAppointments","updateAppointmentPatientHandler","selectedAppointmentId","patientUpdateField","updateAppointmentPatient","modalConfirmUpdateFieldHandler","formGridField","field","formGridQuery","formGridFieldSelect","updateAppointmentField","modalConfirmSearchHandler","formBasicField","formBasicQuery","formBasicFieldSelect","search","getAppointmentField","modalConfirmSearchIdHandler","formBasicId","getAppointmentId","modalConfirmSearchPatientHandler","formBasicPatientId","getAppointmentPatient","searchApointments","modalConfirmSearchDateHandler","appointmentDate","formBasicDate","getAppointmentDate","modalConfirmSearchDateRangeHandler","appointmentStartDate","formBasicStartDate","appointmentEndDate","formBasicEndDate","getApointmentId","fetchAppointmentsAsc","appointmentsDateAsc","fetchAppointmentsDesc","appointmentsDateDesc","modalDeleteHandler","deletedAppointment","deleteAppointment","deletedAppointmentId","deletedAppointmentPos","showDetailHandler","selecteAppointment","closePdfCreator","fetchAppointmentToday","fetchAppointmentInProgress","name","appointmentsToday","getAppointmentToday","appointmentsInProgress","selectedstate","updateAppointmentSpecial","bind","Date","substr","toISOString","contextType"],"mappings":"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","sourcesContent":["import ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport SidebarPage from './Sidebar';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Card from 'react-bootstrap/Card';\n\n// import Modal from '../components/Modal/Modal';\n// import Backdrop from '../components/Backdrop/Backdrop';\nimport AlertBox from '../components/AlertBox';\nimport PdfCreator from '../components/PdfCreator';\n\nimport AppointmentList from '../components/Appointments/AppointmentList/AppointmentList';\nimport AppointmentDetail from '../components/Appointments/AppointmentDetail';\nimport PatientDetail from '../components/Patients/PatientDetail';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport SearchAppointmentList from '../components/Appointments/AppointmentList/SearchAppointmentList';\nimport SearchAppointmentForm from '../components/Forms/SearchAppointmentForm';\nimport SearchAppointmentIdForm from '../components/Forms/SearchAppointmentIdForm';\nimport SearchAppointmentPatientForm from '../components/Forms/SearchAppointmentPatientForm';\nimport SearchAppointmentDateForm from '../components/Forms/SearchAppointmentDateForm';\nimport SearchAppointmentDateRangeForm from '../components/Forms/SearchAppointmentDateRangeForm';\n\nimport CreateAppointmentForm from '../components/Forms/CreateAppointmentForm';\nimport UpdateAppointmentForm from '../components/Forms/UpdateAppointmentForm';\nimport UpdateAppointmentFieldForm from '../components/Forms/UpdateAppointmentFieldForm';\nimport './Users.css';\n\nclass AppointmentsPage extends Component {\n  state = {\n    creating: false,\n    updating: false,\n    deleting: false,\n    searching: false,\n    searchAppointments: [],\n    appointments: [],\n    isLoading: false,\n    selectedAppointment: null,\n    selectedPatient: null,\n    appointmentUpdateField: null,\n    appointmentSearchField: null,\n    appointmentSearchQuery: null,\n    canDelete: null,\n    userAlert: null,\n    createPdf: false,\n    pdfData: null,\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  componentDidMount() {\n    this.fetchAppointments();\n    this.fetchAppointmentToday();\n    this.fetchAppointmentInProgress();\n    if (this.context.user.name === 'admin579'){\n      this.setState({canDelete: true})\n    }\n    // this.setState({selectedPatient: this.context.selectedPatient});\n    // console.log(`\n    //   context.selectedPatient: ${JSON.stringify(this.context.selectedPatient)},\n    //   state.selectedPatient: ${JSON.stringify(this.state.selectedPatient)},\n    //   `);\n  }\n\n\n  startCreateAppointmentHandler = () => {\n    this.setState({ creating: true });\n    console.log(\"CreateAppointmentForm...\", this.context.selectedPatient);\n  };\n  startUpdateAppointmentHandler = () => {\n    this.setState({ updating: true });\n    console.log(\"UpdateAppointmentForm...\");\n  };\n  startSearchAppointmentHandler = () => {\n    this.setState({ searching: true });\n    console.log(\"SearchAppointmentForm...\");\n  };\n\n  modalConfirmHandler = (event) => {\n\n    console.log(\"CreateAppointmentFormData:  \", event.target.formGridTitle.value);\n\n    this.setState({ creating: false });\n    const userId = this.context.userId;\n    const selectedPatientId = this.context.selectedPatient._id;\n    console.log(`\n        userId: ${userId}\n        patientId: ${selectedPatientId}\n      `);\n\n      if (selectedPatientId === undefined) {\n        console.log(`\n          select a Patient before creating an Appointment!!\n          `);\n          this.setState({userAlert: \"select a Patient before creating an Appointment!!...\"});\n          return\n      }\n    const title = event.target.formGridTitle.value;\n    const type = event.target.formGridType.value;\n    const date = event.target.formGridDate.value;\n    const time = event.target.formGridTime.value;\n    const seenTime = event.target.formGridSeenTime.value;\n    const checkinTime = event.target.formGridCheckinTime.value;\n    const location = event.target.formGridLocation.value;\n    const description = event.target.formGridDescription.value;\n    const inProgress = event.target.formGridInProgress.value;\n    const attended = event.target.formGridAttended.value;\n    const important = event.target.formGridImportant.value;\n\n    if (\n      title.trim().length === 0 ||\n      type.trim().length === 0 ||\n      date.trim().length === 0 ||\n      time.trim().length === 0 ||\n      location.trim().length === 0 ||\n      description.trim().length === 0 ||\n      inProgress.trim().length === 0 ||\n      attended.trim().length === 0 ||\n      important.trim().length === 0\n    ) {\n      console.log(\"blank fields detected!!!...Please try again...\");\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"});\n      return\n    }\n\n    const appointment = { title, type, date, time, seenTime, checkinTime, location, description, inProgress, attended, important };\n    console.log(`\n        creating appointment...\n        title: ${title},\n        type: ${type},\n        date: ${date},\n        time: ${time},\n        seenTime: ${seenTime},\n        checkinTime: ${checkinTime},\n        location: ${location},\n        description: ${description},\n        inProgress: ${inProgress},\n        attended: ${attended},\n        important: ${important},\n      `);\n      this.setState({userAlert: \"creating appointment...\"});\n\n    const requestBody = {\n      query: `\n          mutation {createAppointment(userId:\\\"${userId}\\\",patientId:\\\"${selectedPatientId}\\\",appointmentInput:{title:\\\"${title}\\\",type:\\\"${type}\\\",date:\\\"${date}\\\",time:\\\"${time}\\\",seenTime:\\\"${seenTime}\\\",checkinTime:\\\"${checkinTime}\\\",location:\\\"${location}\\\",description:\\\"${description}\\\",inProgress:${inProgress},attended:${attended},important:${important},})\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important}}\n        `,\n    };\n\n    const token = this.context.token;\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data.createAppointment));\n        const responseAlert = JSON.stringify(resData.data).slice(2,15);\n        this.setState({userAlert: responseAlert});\n\n        this.setState(prevState => {\n          const updatedAppointments = [...prevState.appointments];\n          updatedAppointments.push(resData.data.createAppointment);\n\n          return { appointments: updatedAppointments };\n        });\n        this.context.appointments = this.state.appointments;\n        // this.fetchAppointments();\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n      });\n  };\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, updating: false, searching: false, selectedAppointment: null });\n  };\n\n\n  modalConfirmUpdateHandler = (event) => {\n\n    if(this.context.user.role !== 'admin') {\n      console.log(\"Not the Admin! No edit permission!!\");\n      this.setState({userAlert: \"Not the Admin! No edit permission!!\"});\n    }\n\n    const userId = this.context.userId;\n    const appointmentId = this.context.selectedAppointment._id;\n    const selectedPatientId = this.context.selectedPatientId;\n    console.log(`\n        userId: ${userId}\n        appointmentd: ${appointmentId},\n      `);\n\n    // console.log(\"UpdateUserFormData:  \", event);\n    console.log(\"UpdateAppointmentFormData:  \", event.target.formGridTitle.value);\n\n\n    this.setState({ updating: false });\n    let title = event.target.formGridTitle.value;\n    let type = event.target.formGridType.value;\n    let date = event.target.formGridDate.value;\n    let time = event.target.formGridTime.value;\n    let seenTime = event.target.formGridSeenTime.value;\n    let checkinTime = event.target.formGridCheckinTime.value;\n    let location = event.target.formGridLocation.value;\n    let description = event.target.formGridDescription.value;\n    let inProgress = event.target.formGridInProgress.value;\n    let attended = event.target.formGridAttended.value;\n    let important = event.target.formGridImportant.value;\n\n    if (title.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      title  = this.context.selectedAppointment.title;\n      // return;\n    }\n    if (type.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      type  = this.context.selectedAppointment.type;\n    }\n    if (date.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      date  = this.context.selectedAppointment.date;\n    }\n    if (time.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      time  = this.context.selectedAppointment.time;\n    }\n    if (seenTime.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      seenTime  = this.context.selectedAppointment.seenTime;\n    }\n    if (checkinTime.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      checkinTime  = this.context.selectedAppointment.checkinTime;\n    }\n    if (location.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      location  = this.context.selectedAppointment.location;\n    }\n    if (description.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      description  = this.context.selectedAppointment.description;\n    }\n    if (inProgress.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      inProgress  = this.context.selectedAppointment.inProgress;\n    }\n    if (attended.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      attended  = this.context.selectedAppointment.attended;\n    }\n    if (important.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      important  = this.context.selectedAppointment.important;\n    }\n\n    const appointment = { title, type, date, time, seenTime, checkinTime, location, description, inProgress, attended, important, };\n    console.log(`\n        updating appointment...\n        title: ${title},\n        type: ${type},\n        date: ${date},\n        time: ${time},\n        seenTime: ${seenTime},\n        checkinTime: ${checkinTime},\n        location: ${location},\n        description: ${description},\n        inProgress: ${inProgress},\n        attended: ${attended},\n        important: ${important},\n      `);\n      this.setState({userAlert: \"updating appointment...\"});\n\n    const requestBody = {\n      query: `\n      mutation {updateAppointment(userId:\\\"${userId}\\\",appointmentId:\\\"${appointmentId}\\\",appointmentInput:{title:\\\"${title}\\\",type:\\\"${type}\\\",date:\\\"${date}\\\",time:\\\"${time}\\\",seenTime:\\\"${seenTime}\\\",checkinTime:\\\"${checkinTime}\\\",location:\\\"${location}\\\",description:\\\"${description}\\\",inProgress:${inProgress},attended:${attended},important:${important},})\n      {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important,notes}}\n        `\n    };\n\n    const token = this.context.token;\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n\n        const updatedAppointmentId = resData.data.updateAppointment._id;\n        const updatedAppointment = this.state.appointments.find(e => e._id === updatedAppointmentId);\n        const updatedAppointmentPos = this.state.appointments.indexOf(updatedAppointment);\n        const slicedArray = this.state.appointments.splice(updatedAppointmentPos, 1);\n        console.log(\"updatedAppointment:  \", JSON.stringify(updatedAppointment),\"  updatedPatientPos:  \", updatedAppointmentPos, \"  slicedArray:  \", slicedArray);\n\n        this.state.appointments.push(resData.data.updateAppointment);\n        const responseAlert = JSON.stringify(resData.data).slice(2,25);\n        this.setState({ userAlert: responseAlert, selectedAppointment: resData.data.updateAppointment})\n        this.fetchAppointments();\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n      });\n  };\n\n\n  updateAppointmentPatientHandler = (event) => {\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n    let selectedAppointmentId = this.context.selectedAppointment._id;\n    let selectedPatientId = this.context.selectedPatient._id;\n    if(\n      this.context.user.role !== 'admin'\n    ) {\n      console.log(\"No edit permission!!\");\n      this.setState({userAlert: \"No edit permission!!\"});\n      return;\n    }\n\n    if (selectedPatientId === undefined) {\n      console.log(`\n        select a Patient before creating an Appointment!!\n        `);\n        this.setState({userAlert: \"select a Patient before creating an Appointment!!...\"});\n        return\n    }\n\n    this.setState({ updating: false , patientUpdateField: null });\n\n    console.log(`\n      updating appointment patient...\n      userId: ${userId},\n      appointmentId: ${selectedAppointmentId},\n      patientId: ${selectedPatientId},\n      `);\n      this.setState({userAlert: \"updating appointment patient...\"});\n\n      const requestBody = {\n        query:`\n        mutation {updateAppointmentPatient(userId:\\\"${userId}\\\",appointmentId:\\\"${selectedAppointmentId}\\\",patientId:\\\"${selectedPatientId}\\\")\n        {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title},consultant{reference{_id,name,role}}},inProgress,attended,important}}\n        `\n      }\n\n      // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData));\n\n          const updatedAppointmentId = resData.data.updateAppointmentPatient._id;\n          const updatedAppointment = this.state.appointments.find(e => e._id === updatedAppointmentId);\n          const updatedAppointmentPos = this.state.appointments.indexOf(updatedAppointment);\n          const slicedArray = this.state.appointments.splice(updatedAppointmentPos, 1);\n          console.log(\"updatedAppointment:  \", JSON.stringify(updatedAppointment),\"  updatedPatientPos:  \", updatedAppointmentPos, \"  slicedArray:  \", slicedArray);\n\n          this.state.appointments.push(resData.data.updateAppointmentPatient);\n          const responseAlert = JSON.stringify(resData.data).slice(2,25);\n          this.setState({ userAlert: responseAlert, selectedAppointment: resData.data.updateAppointmentPatient})\n          this.fetchAppointments();\n\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n\n\n  }\n\n\n  modalConfirmUpdateFieldHandler = (event) => {\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n    let selectedAppointmentId = this.context.selectedAppointment._id;\n    if( this.context.user.role !== 'admin') {\n      console.log(\"Not the creator or Admin! No edit permission!!\");\n      selectedAppointmentId = null;\n    }\n\n      console.log(\"UpdateAppointmentFieldFormData:  \", event.target.formGridField.value);\n      this.setState({ updating: false });\n\n      let field = null;\n      let query = event.target.formGridQuery.value;\n      if (event.target.formGridFieldSelect.value === \"select\") {\n        field = event.target.formGridField.value;\n      } else {\n        field = event.target.formGridFieldSelect.value;\n      }\n\n      const requestBody = {\n        query:`\n        mutation {updateAppointmentField(userId:\\\"${userId}\\\",appointmentId:\\\"${selectedAppointmentId}\\\",field:\\\"${field}\\\",query:\\\"${query}\\\")\n        {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important,notes}}\n        `};\n\n      // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData.data.updateAppointmentField));\n\n          const updatedAppointmentId = resData.data.updateAppointmentField._id;\n          const updatedAppointment = this.state.appointments.find(e => e._id === updatedAppointmentId);\n          const updatedAppointmentPos = this.state.appointments.indexOf(updatedAppointment);\n          const slicedArray = this.state.appointments.splice(updatedAppointmentPos, 1);\n          console.log(\"updatedAppointment:  \", JSON.stringify(updatedAppointment),\"  updatedAppointmentPos:  \", updatedAppointmentPos, \"  slicedArray:  \", slicedArray);\n\n          this.state.appointments.push(resData.data.updateAppointmentField);\n          this.context.appointments = this.state.appointments;\n          const responseAlert = JSON.stringify(resData.data).slice(2,25);\n          this.setState({ userAlert: responseAlert, selectedAppointment: resData.data.updateAppointmentField})\n          this.fetchAppointments();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n\n  }\n\n\n  modalConfirmSearchHandler = (event) => {\n    console.log(\"SearchAppointmentForm:  \");\n\n\n    let userId = this.context.userId;\n\n      console.log(\"SearchAppointmentFormData:  \", event.target.formBasicField.value);\n      this.setState({ searching: false });\n\n      let field = null;\n      let query = event.target.formBasicQuery.value;\n      if (event.target.formBasicFieldSelect.value === \"select\") {\n        field = event.target.formBasicField.value;\n      } else {\n        field = event.target.formBasicFieldSelect.value;\n      }\n\n      if (\n        field.trim().length === 0 ||\n        query.trim().length === 0\n      ) {\n        console.log(\"blank fields detected!!!...Please try again...\");\n        this.setState({userAlert: \"blank fields detected!!!...Please try again...\"});\n        return;\n      }\n\n      const search = { field, query }\n      console.log(\"Searching for Appointment:  \", JSON.stringify(search));\n\n      const requestBody = {\n        query: `\n          query {getAppointmentField(userId:\"${userId}\", field:\"${field}\", query:\"${query}\")\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title},consultant{reference{_id,name,role}}},inProgress,attended,important}}\n        `}\n\n      const token = this.context.token;\n\n      // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData));\n          const responseAlert = JSON.stringify(resData.data).slice(2,15);\n          this.setState({userAlert: responseAlert});\n\n          const searchAppointments = resData.data.getAppointmentField;\n\n          this.setState({ searchAppointments: searchAppointments})\n          console.log(\"state.searchAppointments:  \", this.state.searchAppointments);\n          // this.fetchAppointments();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n  }\n\n  modalConfirmSearchIdHandler = (event) => {\n    console.log(`\n      SearchAppointmentIdFormData\n      `);\n\n      let userId = this.context.userId;\n      this.setState({ searching: false });\n      let selectedAppointmentId = event.target.formBasicId.value;\n\n      const requestBody = {\n        query: `\n          query {getAppointmentId(userId:\"${userId}\", appointmentId:\"${selectedAppointmentId}\")\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        `}\n\n      const token = this.context.token;\n\n      // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData));\n          const responseAlert = JSON.stringify(resData.data).slice(2,15);\n          this.setState({userAlert: responseAlert});\n\n          const searchAppointments = resData.data.getAppointmentId;\n\n          this.setState({ searchAppointments: [searchAppointments]})\n          console.log(\"state.searchAppointments:  \", this.state.searchAppointments);\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n  }\n\n  modalConfirmSearchPatientHandler = (event) => {\n    console.log(`\n      SearchAppointmentPatientFormData\n      `);\n\n      let userId = this.context.userId;\n      this.setState({ searching: false });\n      let selectedPatientId = event.target.formBasicPatientId.value;\n\n      const requestBody = {\n        query: `\n          query {getAppointmentPatient(userId:\"${userId}\", patientId:\"${selectedPatientId}\")\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        `}\n\n      const token = this.context.token;\n\n      // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData));\n          const responseAlert = JSON.stringify(resData.data).slice(2,15);\n          // const responseAlert = JSON.stringify(resData.errors).slice(2,15);\n          this.setState({userAlert: responseAlert});\n\n          const searchAppointments = resData.data.getAppointmentPatient;\n\n          this.setState({ searchAppointments: searchAppointments })\n          // this.state.searchApointments.push(searchAppointments)\n          console.log(\"state.searchApointments:  \", this.state.searchApointments);\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n\n  }\n  modalConfirmSearchDateHandler = (event) => {\n    console.log(`\n      SearchAppointmentDateFormData\n      `);\n\n      let userId = this.context.userId;\n      this.setState({ searching: false });\n      let appointmentDate = event.target.formBasicDate.value;\n\n      const requestBody = {\n        query: `\n          query {getAppointmentDate(userId:\"${userId}\",date:\"${appointmentDate}\")\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        `}\n\n      const token = this.context.token;\n\n      // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData));\n          const responseAlert = JSON.stringify(resData.data).slice(2,15);\n          this.setState({userAlert: responseAlert});\n\n          const searchAppointments = resData.data.getAppointmentDate;\n\n          this.setState({ searchAppointments: searchAppointments})\n          console.log(\"state.searchAppointments:  \", this.state.searchAppointments);\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n\n  }\n  modalConfirmSearchDateRangeHandler = (event) => {\n    console.log(`\n      SearchAppointmentDateRangeFormData\n      `);\n\n      let userId = this.context.userId;\n      this.setState({ searching: false });\n      let appointmentStartDate = event.target.formBasicStartDate.value;\n      let appointmentEndDate = event.target.formBasicEndDate.value;\n\n      const requestBody = {\n        query: `\n          query {getAppointmentDateRange(userId:\"${userId}\",startDate:\"${appointmentStartDate}\",endDate:\"${appointmentEndDate}\")\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        `}\n\n      const token = this.context.token;\n\n      // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData));\n          const responseAlert = JSON.stringify(resData.data).slice(2,15);\n          this.setState({userAlert: responseAlert});\n\n          const searchApointments = resData.data.getApointmentId;\n\n          this.setState({ searchApointments: searchApointments})\n          console.log(\"state.searchApointments:  \", this.state.searchApointments);\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n\n\n  }\n\n\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, updating: false, searching: false, selectedAppointment: null });\n  };\n\n\n  fetchAppointments() {\n    console.log(\"'fetch appointments function' context object... \" + JSON.stringify(this.context));\n    const userId = this.context.userId;\n\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n            query {appointments(userId:\"${userId}\")\n            {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,consultant{reference{_id,name,role}}},inProgress,attended,important,notes}}\n        `};\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const appointments = resData.data.appointments;\n        console.log(appointments);\n        const responseAlert = JSON.stringify(resData.data).slice(2,15);\n        this.setState({userAlert: responseAlert});\n\n        this.context.appointments = this.state.appointments;\n        if (this.isActive) {\n          this.setState({ appointments: appointments, isLoading: false });\n        }\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  fetchAppointmentsAsc = () => {\n    console.log(\"'fetch appointments function' context object... \" + JSON.stringify(this.context));\n    const userId = this.context.userId;\n\n    // this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n            query {appointmentsDateAsc(userId:\"${userId}\")\n            {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,consultant{reference{_id,name,role}}},inProgress,attended,important,notes}}\n        `};\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const appointments = resData.data.appointmentsDateAsc;\n        console.log(appointments);\n        const responseAlert = JSON.stringify(resData.data).slice(2,15);\n        this.setState({userAlert: responseAlert});\n\n        this.context.appointments = appointments;\n        this.setState({appointments: appointments})\n        // if (this.isActive) {\n        //   this.setState({ appointments: appointments, isLoading: false });\n        // }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n        // if (this.isActive) {\n        //   this.setState({ isLoading: false });\n        // }\n      });\n  }\n  fetchAppointmentsDesc = () => {\n    console.log(\"'fetch appointments function' context object... \" + JSON.stringify(this.context));\n    const userId = this.context.userId;\n\n    // this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n            query {appointmentsDateDesc(userId:\"${userId}\")\n            {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,consultant{reference{_id,name,role}}},inProgress,attended,important,notes}}\n        `};\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const appointments = resData.data.appointmentsDateDesc;\n        console.log(appointments);\n        const responseAlert = JSON.stringify(resData.data).slice(2,15);\n        this.setState({userAlert: responseAlert});\n\n        this.context.appointments = appointments;\n        this.setState({appointments: appointments})\n        // if (this.isActive) {\n        //   this.setState({ appointments: appointments, isLoading: false });\n        // }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n        // if (this.isActive) {\n        //   this.setState({ isLoading: false });\n        // }\n      });\n  }\n\n  modalDeleteHandler = () => {\n    console.log(\"deleting appointment...selectedAppointment:  \", this.context.selectedAppointment);\n\n    const userId = this.context.userId;\n    const selectedAppointmentId = this.context.selectedAppointment._id;\n\n    if(this.context.user.role !== 'admin') {\n      console.log(\"Not the Admin! No edit permission!!\");\n      this.setState({userAlert: \"Not the Admin! No edit permission!!\"});\n    }\n\n    this.setState({deleting: true});\n\n\n    const requestBody = {\n      query: `\n          mutation {deleteAppointment(userId:\"${userId}\",appointmentId:\"${selectedAppointmentId}\")\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important,notes}}\n        `};\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"resData:  \", resData);\n        // console.log(\"resData.data.deleteAppointment:  \", resData.data.deleteAppointment);\n        let deletedAppointment = resData.data.deleteAppointment;\n        console.log(deletedAppointment);\n        const responseAlert = JSON.stringify(resData.data).slice(2,15);\n        this.setState({userAlert: responseAlert});\n\n        let deletedAppointmentId = deletedAppointment._id;\n        deletedAppointment = this.state.appointments.find(e => e._id === deletedAppointmentId);\n        const deletedAppointmentPos = this.state.appointments.indexOf(deletedAppointment);\n        const slicedArray = this.state.appointments.splice(deletedAppointmentPos, 1);\n        console.log(\"deletedAppointment:  \", JSON.stringify(deletedAppointment),\"  deletedUserPos:  \", deletedAppointmentPos, \"  slicedArray:  \", slicedArray);\n\n        this.setState({ deleting: false });\n\n        this.fetchAppointments();\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ deleting: false });\n        }\n      });\n\n\n  }\n\n  updateAppointmentSpecial (event) {\n\n    console.log(\"special field to update:  \", event.target.value);\n    const field = event.target.value;\n    this.setState({ appointmentUpdateField: field});\n\n  }\n\n\n  showDetailHandler = appointmentId => {\n\n    this.setState(prevState => {\n      const selectedAppointment = prevState.appointments.find(e => e._id === appointmentId);\n      this.setState({selectedAppointment: selectedAppointment});\n      this.context.selectedAppointment = selectedAppointment;\n      console.log(\"selectedAppointment:  \", selectedAppointment);\n      return { selecteAppointment: selectedAppointment };\n    });\n  };\n\n\n  fetchAppointmentToday() {\n    console.log(\"fetching todays appts function:  \");\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n\n    const requestBody = {\n      query: `\n          query {getAppointmentToday(userId:\"${userId}\")\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        `\n    };\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.context.appointmentsToday = resData.data.getAppointmentToday;\n        console.log(\"context today's appts:  \", JSON.stringify(this.context.appointmentsToday));\n\n        const responseAlert = JSON.stringify(resData.data).slice(2,15);\n        this.setState({userAlert: responseAlert});\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n      });\n\n\n  }\n\n\n  fetchAppointmentInProgress() {\n    console.log(\"fetching inProgress appts function:  \");\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n\n    const requestBody = {\n      query: `\n          query {getAppointmentField(userId:\\\"${userId}\\\",field:\\\"inProgress\\\",query:\\\"true\\\"){_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        `\n    };\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.context.appointmentsInProgress = resData.data.getAppointmentField;\n        console.log(\"context in progress appts:  \", JSON.stringify(this.context.appointmentsInProgress));\n\n        const responseAlert = JSON.stringify(resData.data).slice(2,15);\n        this.setState({userAlert: responseAlert});\n\n        if (this.state.selectedPatient === {} || this.context.selectedstate === null) {\n          this.setState({userAlert: \"No Patient Selected\"})\n        }\n        console.log(`\n          context.selectedPatient: ${JSON.stringify(this.context.selectedPatient)},\n          state.selectedPatient: ${JSON.stringify(this.state.selectedPatient)},\n          `);\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n      });\n\n\n  }\n\n  createPdf = (appointment) => {\n    console.log(`\n        creating pdf...\n        user: ${JSON.stringify(appointment)}\n      `);\n\n      const pdfData = {\n        title: appointment.title,\n        body: appointment.date,\n      };\n\n    this.setState({createPdf: true, pdfData: pdfData})\n  }\n\n  closePdfCreator = () => {\n    console.log(`\n      closing pdf creator...\n      `);\n      this.setState({createPdf: false, pdfData: null})\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n\n      {this.state.createPdf === true && (\n          <PdfCreator\n            pdfData={this.state.pdfData}\n            onClosePdfCreator={this.closePdfCreator}\n          />\n      )}\n\n      <Accordion>\n\n      <Row>\n\n      <Col md={3} className=\"MasterCol1\">\n\n      <AlertBox\n            authUserId={this.context.userId}\n            alert={this.state.userAlert}\n          />\n      <SidebarPage/>\n\n      </Col>\n\n      <Col md={9} className=\"MasterCol2\">\n\n          <Container className=\"containerCombinedDetail\">\n            <Tabs defaultActiveKey=\"appointmentDetail\" id=\"uncontrolled-tab-example\">\n              <Tab eventKey=\"appointmentDetail\" title=\"Selected Appointment Data\">\n                  {this.state.selectedAppointment === null && (\n                    <Button variant=\"outline-warning\" size=\"lg\" className=\"confirmEditButton\">\n                      Select an Appointment from the Master List\n                    </Button>\n                  )}\n                  {\n                    this.state.isLoading === false &&\n                    this.state.selectedAppointment !== null\n                    &&\n                    (\n                      <AppointmentDetail\n                      authUserId={this.context.userId}\n                      appointment={this.state.selectedAppointment}\n                      onEdit={this.startUpdateAppointmentHandler}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.modalDeleteHandler}\n                      onCreatePdf={this.createPdf}\n                  />\n                )}\n              </Tab>\n\n              <Tab eventKey=\"appointmentCreate\" title=\"Create New\">\n              <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={this.startCreateAppointmentHandler} >Create New</Button>\n              {\n                this.state.creating &&\n                this.context.selectedPatient._id !== null\n                && (\n                  <CreateAppointmentForm\n                  canCancel\n                    canConfirm\n                    onCancel={this.modalCancelHandler}\n                    onConfirm={this.modalConfirmHandler}\n                    onSubmit={this.modalConfirmHandler}\n                    confirmText=\"Confirm\"\n                    selectedPatient={this.context.selectedPatient}\n                  />\n              )}\n              </Tab>\n\n              <Tab eventKey=\"appointmentEditBasic\" title=\"Edit Basic Data\">\n              {this.state.selectedAppointment === null && (\n                <Button variant=\"outline-warning\" size=\"lg\" className=\"confirmEditButton\">\n                  Select an Appointment from the Master List\n                </Button>\n              )}\n              {this.state.selectedAppointment !== null && (\n                <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={this.startUpdateAppointmentHandler}>Edit Basic Data</Button>\n              )}\n              {this.state.updating &&\n                this.state.selectedAppointment !== null\n                && (\n                <UpdateAppointmentForm\n                authUserId={this.context.userId}\n                canCancel\n                  canConfirm\n                  onCancel={this.modalCancelHandler}\n                  onConfirm={this.modalConfirmUpdateHandler}\n                  confirmText=\"Confirm\"\n                  appointment={this.state.selectedAppointment}\n                />\n              )}\n              </Tab>\n\n              <Tab eventKey=\"appointmentEditField\" title=\"Edit a Single Field\">\n              {this.state.selectedAppointment === null && (\n                <Button variant=\"outline-warning\" size=\"lg\" className=\"confirmEditButton\">\n                  Select an Appointment from the Master List\n                </Button>\n              )}\n              {this.state.selectedAppointment !== null && (\n                <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={this.startUpdateAppointmentHandler}>Edit a Single Field</Button>\n              )}\n              {this.state.updating &&\n                this.state.selectedAppointment !== null\n                && (\n                  <UpdateAppointmentFieldForm\n                    authUserId={this.context.userId}\n                    canCancel\n                    canConfirm\n                    onCancel={this.modalCancelHandler}\n                    onConfirm={this.modalConfirmUpdateFieldHandler}\n                    confirmText=\"Confirm\"\n                    appointment={this.state.selectedAppointment}\n                  />\n              )}\n              </Tab>\n\n              <Tab eventKey=\"appointmentEditPatient\" title=\"Change Patient\">\n              {this.state.selectedAppointment === null && (\n                <Button variant=\"outline-warning\" size=\"lg\" className=\"confirmEditButton\">\n                  Select an Appointment from the Master List\n                </Button>\n              )}\n              {this.state.selectedAppointment !== null && (\n                <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" value='patient' onClick={this.updateAppointmentSpecial.bind(this)}>Change Patient:</Button>\n              )}\n              {this.state.selecteAppointment !== null &&\n                this.context.selectedPatient === null &&\n                this.state.appointmentUpdateField === \"patient\" && (\n                  <Button variant=\"outline-warning\" size=\"lg\" className=\"confirmEditButton\">\n                    Select someone from the Patients page\n                  </Button>\n                )}\n              {this.state.selectedAppointment !== null &&\n                this.context.selectedPatient !== null &&\n                this.state.appointmentUpdateField === \"patient\" && (\n                <Row>\n                <Col md={8} className=\"updateUserColAdd\">\n                <p><span className=\"bold\">Add Patient :</span> {this.context.selectedPatient.name}</p>\n                <p><span className=\"bold\">To Appointment :</span> {this.state.selectedAppointment.title}  <span className=\"bold\">On :</span> {new Date(this.state.selecteAppointment.date.substr(0,10)*1000).toISOString().slice(0,10)} <span className=\"bold\">At :</span> {this.state.selecteAppointment.time} ??</p>\n                <Button variant=\"success\" onClick={this.updateAppointmentPatientHandler}>\n                  Yes\n                </Button>\n                </Col>\n                </Row>\n              )}\n              </Tab>\n\n              <Tab eventKey=\"MasterList\" title=\"MASTER LIST\">\n              <Container className=\"containerUserMasterList\">\n              <Row className=\"searchListRow\">\n              <Button variant=\"primary\" size=\"sm\" onClick={this.fetchAppointmentsAsc}>\n                 Sort Asc\n               </Button>\n              <Button variant=\"info\" size=\"sm\" onClick={this.fetchAppointmentsDesc}>\n                 Sort Desc\n               </Button>\n              {this.state.isLoading ? (\n                <Spinner />\n              ) :\n              (\n                <AppointmentList\n                  appointments={this.state.appointments}\n                  authUserId={this.context.userId}\n                  onViewDetail={this.showDetailHandler}\n                />\n              )}\n              </Row>\n              </Container>\n              </Tab>\n\n              <Tab eventKey=\"SearchInput\" title=\"Search\">\n              <Container className=\"containerSearchUserInput\">\n              <Row className=\"searchUserRowAdd\">\n              <Button variant=\"primary\" onClick={this.startSearchAppointmentHandler}>Search</Button>\n              </Row>\n\n              <Row className=\"searchUserRowForm\">\n              <Col md={10} className=\"searchUserColForm\">\n              <Tabs defaultActiveKey=\"Field\" id=\"uncontrolled-tab-example\">\n              <Tab eventKey=\"Search\" title=\"Search:\" disabled>\n              </Tab>\n              <Tab eventKey=\"Field\" title=\"Search by Field:\">\n              {this.state.searching !== true && (\n                <Button variant=\"outline-warning\" className=\"confirmEditButton\" size=\"lg\">\n                  Click the 'Search' Button start\n                </Button>\n              )}\n              {this.state.searching === true && (\n                <SearchAppointmentForm\n                authUserId={this.context.userId}\n                canCancel\n                  canConfirm\n                  onCancel={this.modalCancelHandler}\n                  onConfirm={this.modalConfirmSearchHandler}\n                  confirmText=\"Search\"\n                  appointment={this.context.selectedAppointment}\n                />\n              )}\n              </Tab>\n              <Tab eventKey=\"Id\" title=\"Search by Id:\">\n              {this.state.searching !== true && (\n                <Button variant=\"outline-warning\" className=\"confirmEditButton\" size=\"lg\">\n                  Click the 'Search' Button start\n                </Button>\n              )}\n                {this.state.searching === true && (\n                  <SearchAppointmentIdForm\n                  authUserId={this.context.userId}\n                  canCancel\n                    canConfirm\n                    onCancel={this.modalCancelHandler}\n                    onConfirm={this.modalConfirmSearchIdHandler}\n                    confirmText=\"Search\"\n                    appointment={this.context.selectedAppointment}\n                  />\n                )}\n              </Tab>\n              <Tab eventKey=\"Patient\" title=\"Search by Patient:\">\n              {this.state.searching !== true && (\n                <Button variant=\"outline-warning\" className=\"confirmEditButton\" size=\"lg\">\n                  Click the 'Search' Button start\n                </Button>\n              )}\n                {this.state.searching === true && (\n                  <SearchAppointmentPatientForm\n                  authUserId={this.context.userId}\n                  canCancel\n                    canConfirm\n                    onCancel={this.modalCancelHandler}\n                    onConfirm={this.modalConfirmSearchPatientHandler}\n                    confirmText=\"Search\"\n                    appointment={this.context.selectedAppointment}\n                  />\n                )}\n              </Tab>\n              <Tab eventKey=\"Date\" title=\"Search by Date:\">\n              {this.state.searching !== true && (\n                <Button variant=\"outline-warning\" className=\"confirmEditButton\" size=\"lg\">\n                  Click the 'Search' Button start\n                </Button>\n              )}\n                {this.state.searching === true && (\n                  <SearchAppointmentDateForm\n                  authUserId={this.context.userId}\n                  canCancel\n                    canConfirm\n                    onCancel={this.modalCancelHandler}\n                    onConfirm={this.modalConfirmSearchDateHandler}\n                    confirmText=\"Search\"\n                    appointment={this.context.selectedAppointment}\n                  />\n                )}\n              </Tab>\n              <Tab eventKey=\"Date Range\" title=\"Search by Date Range:\">\n              {this.state.searching !== true && (\n                <Button variant=\"outline-warning\" className=\"confirmEditButton\" size=\"lg\">\n                  Click the 'Search' Button start\n                </Button>\n              )}\n                {this.state.searching === true && (\n                  <SearchAppointmentDateRangeForm\n                  authUserId={this.context.userId}\n                  canCancel\n                    canConfirm\n                    onCancel={this.modalCancelHandler}\n                    onConfirm={this.modalConfirmSearchDateRangeHandler}\n                    confirmText=\"Search\"\n                    appointment={this.context.selectedAppointment}\n                  />\n                )}\n              </Tab>\n              </Tabs>\n              </Col>\n              <Col md={10}>\n              </Col>\n              </Row>\n              </Container>\n              </Tab>\n\n              <Tab eventKey=\"SearchResult\" title=\"Search Results\">\n              <Container className=\"containerSearchUserResults\">\n              <Row>\n                <Card className=\"searchCard\">\n                  <Card.Body className=\"searchCardBody\">\n                    <Card.Title>Your Search</Card.Title>\n                    <Card.Text>\n                      Field: {this.state.appointmentSearchField}\n                    </Card.Text>\n                    <Card.Text>\n                      Query: {this.state.appointmentSearchQuery}\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </Row>\n              <Row className=\"searchListRow\">\n              {\n                this.state.searchAppointments !== [] && (\n                <SearchAppointmentList\n                  searchAppointments={this.state.searchAppointments}\n                  authUserId={this.context.userId}\n                  onCancel={this.modalCancelHandler}\n                    onViewDetail={this.showDetailHandler}\n                />\n              )}\n              </Row>\n              </Container>\n              </Tab>\n\n            </Tabs>\n          </Container>\n\n      </Col>\n    </Row>\n\n  </Accordion>\n\n        {\n        //   this.state.isLoading === false &&\n        //   (<PatientDetail\n        //     authUserId={this.context.userId}\n        //     patient={this.context.selectedPatient}\n        //     className=\"PatientDetailBox2\"\n        // />)\n      }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AppointmentsPage;\n"]},"metadata":{},"sourceType":"module"}