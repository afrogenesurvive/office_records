{"ast":null,"code":"var _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport AuthPage from './pages/Auth';\nimport UsersPage from './pages/Users';\nimport PatientsPage from './pages/Patients';\nimport ThisUserPage from './pages/thisUser';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      token: null,\n      userId: null,\n      sessionStorageAuth: null\n    };\n\n    this.login = (token, userId, tokenExpiration) => {\n      this.setState({\n        token: token,\n        userId: userId\n      });\n    };\n\n    this.logout = () => {\n      this.setState({\n        token: null,\n        userId: null\n      });\n      sessionStorage.clear();\n    };\n  }\n\n  // const sessionStorageAuth = sessionStorage.getItem('login info');\n  // console.log(\"sessionStorageAuth:  \", JSON.stringify(sessionStorageAuth));\n  componentDidMount() {\n    this.setState({\n      sessionStorageAuth: sessionStorage.getItem('login info')\n    });\n    console.log(\"sessionStorageAuth:  \", JSON.stringify(sessionStorageAuth));\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(AuthContext.Provider, {\n      value: {\n        token: this.state.token,\n        userId: this.state.userId,\n        user: {},\n        patient: {},\n        appointment: {},\n        login: this.login,\n        logout: this.logout\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(MainNavigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: \"main-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, // logged in -> pages\n    this.state.token && React.createElement(Redirect, {\n      from: \"/\",\n      to: \"/users\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), this.state.token && React.createElement(Route, {\n      path: \"/users\",\n      component: UsersPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), this.state.token && React.createElement(Route, {\n      path: \"/patients\",\n      component: PatientsPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), this.state.token && React.createElement(Route, {\n      path: \"/profile\",\n      component: ThisUserPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), // logged in -> users page from login page\n    this.state.token && React.createElement(Redirect, {\n      from: \"/auth\",\n      to: \"/users\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), //if not logged in -> go to login page\n    !this.state.token && React.createElement(Route, {\n      path: \"/auth\",\n      component: AuthPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), !this.state.token && React.createElement(Redirect, {\n      to: \"/auth\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/App.js"],"names":["React","Component","BrowserRouter","Route","Redirect","Switch","AuthPage","UsersPage","PatientsPage","ThisUserPage","MainNavigation","AuthContext","App","state","token","userId","sessionStorageAuth","login","tokenExpiration","setState","logout","sessionStorage","clear","componentDidMount","getItem","console","log","JSON","stringify","render","user","patient","appointment"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport AuthPage from './pages/Auth';\nimport UsersPage from './pages/Users';\nimport PatientsPage from './pages/Patients';\nimport ThisUserPage from './pages/thisUser';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    userId: null,\n    sessionStorageAuth: null\n  };\n\n  login = (token, userId, tokenExpiration) => {\n    this.setState({ token: token, userId: userId });\n  };\n\n  logout = () => {\n    this.setState({ token: null, userId: null });\n    sessionStorage.clear();\n  };\n\n  // const sessionStorageAuth = sessionStorage.getItem('login info');\n  // console.log(\"sessionStorageAuth:  \", JSON.stringify(sessionStorageAuth));\n  componentDidMount() {\n    this.setState({ sessionStorageAuth: sessionStorage.getItem('login info')});\n    console.log(\"sessionStorageAuth:  \", JSON.stringify(sessionStorageAuth));\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              userId: this.state.userId,\n              user: {},\n              patient: {},\n              appointment: {},\n              login: this.login,\n              logout: this.logout\n            }}\n          >\n            <MainNavigation />\n            <main className=\"main-content\">\n              <Switch>\n\n                { // logged in -> pages\n                this.state.token && <Redirect from=\"/\" to=\"/users\" exact />}\n                {this.state.token && (<Route path=\"/users\" component={UsersPage} />)}\n                {this.state.token && (<Route path=\"/patients\" component={PatientsPage} />)}\n                {this.state.token && (<Route path=\"/profile\" component={ThisUserPage} />)}\n\n                { // logged in -> users page from login page\n                  this.state.token && (<Redirect from=\"/auth\" to=\"/users\" exact />)}\n\n                { //if not logged in -> go to login page\n                  !this.state.token && (<Route path=\"/auth\" component={AuthPage} />)}\n                {!this.state.token && <Redirect to=\"/auth\" exact />}\n              </Switch>\n            </main>\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}