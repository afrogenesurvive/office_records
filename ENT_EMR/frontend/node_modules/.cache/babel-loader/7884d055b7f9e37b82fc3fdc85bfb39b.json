{"ast":null,"code":"import _extends from \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdateUserForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport FormCheck from 'react-bootstrap/FormCheck'; // import AuthContext from '../../context/auth-context';\n\nimport './CreateUserForm.css';\n\nconst UpdateUserForm = props => {\n  console.log(_objectSpread({}, props));\n\n  const user = _extends({}, props.user);\n\n  console.log(_objectSpread({}, user));\n  return React.createElement(\"div\", {\n    className: \"UpdateFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: props.onConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    controlId: \"formGridName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formGridRole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Role\"), React.createElement(Form.Control, {\n    placeholder: \"role\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridCity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"City\"), React.createElement(Form.Control, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridState\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"State\"), React.createElement(Form.Control, {\n    as: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Choose...\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"...\"))), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridZip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Zip\"), React.createElement(Form.Control, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    id: \"formGridCheckbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Form.Check, {\n    type: \"checkbox\",\n    label: \"Check me out\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), props.canCancel && React.createElement(Button, {\n    variant: \"primary\",\n    onClick: props.onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Cancel\"), props.canConfirm && React.createElement(Button, {\n    variant: \"secondary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default UpdateUserForm;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdateUserForm.js"],"names":["React","Form","Button","Col","FormCheck","UpdateUserForm","props","console","log","user","onConfirm","canCancel","onCancel","canConfirm"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB,C,CACA;;AACA,OAAO,sBAAP;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAElCC,EAAAA,OAAO,CAACC,GAAR,mBAAgBF,KAAhB;;AAFkC,QAGxBG,IAHwB,gBAGhBH,KAAK,CAACG,IAHU;;AAIlCF,EAAAA,OAAO,CAACC,GAAR,mBAAgBC,IAAhB;AAGA,SACA;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEH,KAAK,CAACI,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEP,GAAhB;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,WAAW,EAAC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAME,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAC,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,WAAW,EAAC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,CADA,EAaA,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAbA,EAkBA,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,WAAW,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAlBA,EAuBA,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAME,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,EAAE,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CAFF,CANF,EAcE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAdF,CAvBA,EA2CA,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,KAAK,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA3CA,EA+CCG,KAAK,CAACK,SAAN,IACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEL,KAAK,CAACM,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhDF,EAqDCN,KAAK,CAACO,UAAN,IACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtDF,CADA,CADA;AAwEE,CA/EF;;AAiFA,eAAeR,cAAf","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport FormCheck from 'react-bootstrap/FormCheck'\n// import AuthContext from '../../context/auth-context';\nimport './CreateUserForm.css';\n\nconst UpdateUserForm = (props) => {\n\nconsole.log({...props});\nconst {...user} = props.user;\nconsole.log({...user});\n\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridEmail\">\n    <Form.Label>Email</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\"/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Group controlId=\"formGridName\">\n  <Form.Label>Name</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Name\"/>\n</Form.Group>\n\n<Form.Group controlId=\"formGridRole\">\n  <Form.Label>Role</Form.Label>\n  <Form.Control placeholder=\"role\"/>\n</Form.Group>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridCity\">\n    <Form.Label>City</Form.Label>\n    <Form.Control />\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridState\">\n    <Form.Label>State</Form.Label>\n    <Form.Control as=\"select\">\n      <option>Choose...</option>\n      <option>...</option>\n    </Form.Control>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridZip\">\n    <Form.Label>Zip</Form.Label>\n    <Form.Control />\n  </Form.Group>\n</Form.Row>\n\n<Form.Group id=\"formGridCheckbox\">\n  <Form.Check type=\"checkbox\" label=\"Check me out\" />\n</Form.Group>\n\n{props.canCancel && (\n  <Button variant=\"primary\" onClick={props.onCancel}>\n  Cancel\n  </Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"secondary\" type=\"submit\" >\n  Submit\n  </Button>\n)}\n\n</Form>\n{\n  // onChange ={ (e) => {\n  // console.log(\"dynamic value change from prefilled:  \", this.state.value);\n  // }\n\n  // <AuthContext.Consumer>\n// </AuthContext.Consumer>\n}\n</div>\n\n)};\n\nexport default UpdateUserForm;\n"]},"metadata":{},"sourceType":"module"}