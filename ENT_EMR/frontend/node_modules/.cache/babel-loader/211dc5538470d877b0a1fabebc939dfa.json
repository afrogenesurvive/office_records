{"ast":null,"code":"import _extends from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";import _objectSpread from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import Form from'react-bootstrap/Form';import Button from'react-bootstrap/Button';import Col from'react-bootstrap/Col';import Accordion from'react-bootstrap/Accordion';// import FormCheck from 'react-bootstrap/FormCheck'\nimport AuthContext from'../../context/auth-context';import'./CreateUserForm.css';var UpdatePatientSurveyForm=function UpdatePatientSurveyForm(props){console.log(\"UpdatePatientSurveyForm.props:  \",_objectSpread({},props));var patient=_extends({},props.patient);console.log(\"UpdatePatientSurveyForm.props.patient:  \",_objectSpread({},patient));return React.createElement(\"div\",{className:\"UpdateFormContainer\"},React.createElement(Form,{onSubmit:props.onConfirm},React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridSurveyDate\"},React.createElement(Form.Label,null,\"Date\"),React.createElement(Form.Control,{type:\"date\",placeholder:\"SurveyDate\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridSurveyTitle\"},React.createElement(Form.Label,null,\"Title\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"SurveyTitle\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridSurveyDescription\"},React.createElement(Form.Label,null,\"Description\"),React.createElement(Form.Control,{as:\"textarea\",rows:\"3\",placeholder:\"SurveyDescription\"}))),React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridSurveyAttachmentFormat\"},React.createElement(Form.Label,null,\"Attachment Format\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"SurveyAttachmentFormat\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridSurveyAttachmentPath\"},React.createElement(Form.Label,null,\"Attachment Path\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"SurveyAttachmentPath\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridSurveyAttachmentFile\"},React.createElement(Form.Label,null,\"File\"),React.createElement(Form.Control,{type:\"file\",placeholder:\"File\",onChange:function onChange(e){console.log(e.target.files[0]);AuthContext._currentValue.file=e.target.files[0];console.log(AuthContext._currentValue.file);}}))),props.canCancel&&React.createElement(Accordion.Toggle,{as:Button,variant:\"danger\",eventKey:\"9\",className:\"btn\",onClick:props.onCancel},\"Cancel\"),props.canConfirm&&React.createElement(Accordion.Toggle,{as:Button,variant:\"success\",eventKey:\"9\",className:\"btn\",type:\"submit\"},\"Submit\")));};export default UpdatePatientSurveyForm;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdatePatientSurveyForm.js"],"names":["React","Form","Button","Col","Accordion","AuthContext","UpdatePatientSurveyForm","props","console","log","patient","onConfirm","e","target","files","_currentValue","file","canCancel","onCancel","canConfirm"],"mappings":"iXAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CACA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CACA;AACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA,MAAO,sBAAP,CAEA,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,KAAD,CAAW,CAE3CC,OAAO,CAACC,GAAR,CAAY,kCAAZ,kBAAoDF,KAApD,GAF2C,GAGjCG,CAAAA,OAHiC,aAGtBH,KAAK,CAACG,OAHgB,EAI3CF,OAAO,CAACC,GAAR,CAAY,0CAAZ,kBAA4DC,OAA5D,GAGA,MACA,4BAAK,SAAS,CAAC,qBAAf,EACA,oBAAC,IAAD,EAAM,QAAQ,CAAEH,KAAK,CAACI,SAAtB,EACA,oBAAC,IAAD,CAAM,GAAN,MACE,oBAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAER,GAAhB,CAAqB,SAAS,CAAC,oBAA/B,EACE,oBAAC,IAAD,CAAM,KAAN,aADF,CAEE,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,YAAtC,EAFF,CADF,CAKE,oBAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAEA,GAAhB,CAAqB,SAAS,CAAC,qBAA/B,EACE,oBAAC,IAAD,CAAM,KAAN,cADF,CAEE,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,aAAtC,EAFF,CALF,CASE,oBAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAEA,GAAhB,CAAqB,SAAS,CAAC,2BAA/B,EACE,oBAAC,IAAD,CAAM,KAAN,oBADF,CAEE,oBAAC,IAAD,CAAM,OAAN,EAAc,EAAE,CAAC,UAAjB,CAA4B,IAAI,CAAC,GAAjC,CAAqC,WAAW,CAAC,mBAAjD,EAFF,CATF,CADA,CAgBE,oBAAC,IAAD,CAAM,GAAN,MAEA,oBAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAEA,GAAhB,CAAqB,SAAS,CAAC,gCAA/B,EACE,oBAAC,IAAD,CAAM,KAAN,0BADF,CAEE,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,wBAAtC,EAFF,CAFA,CAMA,oBAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAEA,GAAhB,CAAqB,SAAS,CAAC,8BAA/B,EACE,oBAAC,IAAD,CAAM,KAAN,wBADF,CAEE,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,sBAAtC,EAFF,CANA,CAUA,oBAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAEA,GAAhB,CAAqB,SAAS,CAAC,8BAA/B,EACE,oBAAC,IAAD,CAAM,KAAN,aADF,CAEE,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,MAAtC,CAA6C,QAAQ,CAAE,kBAACS,CAAD,CAAO,CAACJ,OAAO,CAACC,GAAR,CAAYG,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAZ,EAA+BT,WAAW,CAACU,aAAZ,CAA0BC,IAA1B,CAAiCJ,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAjC,CAAmDN,OAAO,CAACC,GAAR,CAAYJ,WAAW,CAACU,aAAZ,CAA0BC,IAAtC,EAA6C,CAA9L,EAFF,CAVA,CAhBF,CAiCCT,KAAK,CAACU,SAAN,EACC,oBAAC,SAAD,CAAW,MAAX,EAAkB,EAAE,CAAEf,MAAtB,CAA8B,OAAO,CAAC,QAAtC,CAA+C,QAAQ,CAAC,GAAxD,CAA4D,SAAS,CAAC,KAAtE,CAA4E,OAAO,CAAEK,KAAK,CAACW,QAA3F,WAlCF,CAuCCX,KAAK,CAACY,UAAN,EACC,oBAAC,SAAD,CAAW,MAAX,EAAkB,EAAE,CAAEjB,MAAtB,CAA8B,OAAO,CAAC,SAAtC,CAAgD,QAAQ,CAAC,GAAzD,CAA6D,SAAS,CAAC,KAAvE,CAA6E,IAAI,CAAC,QAAlF,WAxCF,CADA,CADA,CA0DE,CAjEF,CAmEA,cAAeI,CAAAA,uBAAf","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion'\n// import FormCheck from 'react-bootstrap/FormCheck'\nimport AuthContext from '../../context/auth-context';\nimport './CreateUserForm.css';\n\nconst UpdatePatientSurveyForm = (props) => {\n\nconsole.log(\"UpdatePatientSurveyForm.props:  \", {...props});\nconst {...patient} = props.patient;\nconsole.log(\"UpdatePatientSurveyForm.props.patient:  \", {...patient});\n\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridSurveyDate\">\n    <Form.Label>Date</Form.Label>\n    <Form.Control type=\"date\" placeholder=\"SurveyDate\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridSurveyTitle\">\n    <Form.Label>Title</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"SurveyTitle\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridSurveyDescription\">\n    <Form.Label>Description</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"SurveyDescription\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n\n  <Form.Group as={Col} controlId=\"formGridSurveyAttachmentFormat\">\n    <Form.Label>Attachment Format</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"SurveyAttachmentFormat\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridSurveyAttachmentPath\">\n    <Form.Label>Attachment Path</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"SurveyAttachmentPath\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridSurveyAttachmentFile\">\n    <Form.Label>File</Form.Label>\n    <Form.Control type=\"file\" placeholder=\"File\" onChange={(e) => {console.log(e.target.files[0]);AuthContext._currentValue.file = e.target.files[0];console.log(AuthContext._currentValue.file);}}/>\n  </Form.Group>\n  </Form.Row>\n\n\n{props.canCancel && (\n  <Accordion.Toggle as={Button} variant=\"danger\" eventKey=\"9\" className=\"btn\" onClick={props.onCancel}>\n  Cancel\n  </Accordion.Toggle>\n)}\n\n{props.canConfirm && (\n  <Accordion.Toggle as={Button} variant=\"success\" eventKey=\"9\" className=\"btn\" type=\"submit\">\n  Submit\n  </Accordion.Toggle>\n)}\n\n</Form>\n{\n  // <Form.Group as={Col} controlId=\"formGridSurveyAttachmentName\">\n  //   <Form.Label>SurveyAttachmentName</Form.Label>\n  //   <Form.Control type=\"text\" placeholder=\"SurveyAttachmentName\"/>\n  // </Form.Group>\n  // <AuthContext.Consumer>\n// </AuthContext.Consumer>\n}\n</div>\n\n)};\n\nexport default UpdatePatientSurveyForm;\n"]},"metadata":{},"sourceType":"module"}