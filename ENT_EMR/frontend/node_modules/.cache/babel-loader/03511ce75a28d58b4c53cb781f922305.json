{"ast":null,"code":"var _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/Users.js\";\nimport S3 from 'react-aws-s3';\nimport S3FileUpload from 'react-s3';\nimport React, { Component } from 'react'; // import FileViewer from 'react-file-viewer';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'; // import Form from 'react-bootstrap/Form';\n\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Card from 'react-bootstrap/Card'; // import Modal from '../components/Modal/Modal';\n// import Backdrop from '../components/Backdrop/Backdrop';\n\nimport UserList from '../components/Users/UserList/UserList';\nimport SearchUserList from '../components/Users/UserList/SearchUserList';\nimport UserDetail from '../components/Users/UserDetail';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport SidebarPage from './Sidebar';\nimport AlertBox from '../components/AlertBox';\nimport AttachmentViewer from '../components/AttachmentViewer';\nimport CreateUserForm from '../components/Forms/CreateUserForm';\nimport UpdateUserForm from '../components/Forms/UpdateUserForm';\nimport UpdateUserFieldForm from '../components/Forms/UpdateUserFieldForm';\nimport UpdateUserAttendanceForm from '../components/Forms/UpdateUserAttendanceForm';\nimport UpdateUserAttachmentForm from '../components/Forms/UpdateUserAttachmentForm';\nimport UpdateUserLeaveForm from '../components/Forms/UpdateUserLeaveForm';\nimport SearchUserForm from '../components/Forms/SearchUserForm';\nimport SearchUserIdForm from '../components/Forms/SearchUserIdForm';\nimport SearchUserNameForm from '../components/Forms/SearchUserNameForm';\nimport SearchUserAttendanceDateForm from '../components/Forms/SearchUserAttendanceDateForm';\nimport SearchUserLeaveDateRangeForm from '../components/Forms/SearchUserLeaveDateRangeForm';\nimport './Users.css';\n\nclass UsersPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      creating: false,\n      updating: false,\n      deleting: false,\n      searching: false,\n      users: [],\n      searchUsers: [],\n      isLoading: false,\n      isSorting: false,\n      selectedUser: null,\n      userUpdateField: null,\n      userSearchField: null,\n      userSearchQuery: null,\n      canDelete: null,\n      userAlert: null,\n      file: null,\n      showAttachment: false,\n      showThisAttachmentFile: null,\n      showThisAttachmentType: null\n    };\n    this.isActive = true;\n\n    this.startCreateUserHandler = () => {\n      this.setState({\n        creating: true\n      });\n      console.log(\"CreateUserForm...\");\n    };\n\n    this.startUpdateUserHandler = () => {\n      this.setState({\n        updating: true\n      });\n      console.log(\"UpdateUserForm...\");\n    };\n\n    this.startSearchUserHandler = () => {\n      this.setState({\n        searching: true\n      });\n      console.log(\"SearchUserForm...\");\n    };\n\n    this.modalConfirmHandler = event => {\n      console.log(`\n      event: ${JSON.stringify(event)},\n      `);\n      console.log(\"CreateUserFormData:  \", event.target.formGridEmail.value);\n      this.setState({\n        creating: false\n      });\n      const email = event.target.formGridEmail.value;\n      const password = event.target.formGridPassword.value;\n      const name = event.target.formGridName.value;\n      const role = event.target.formGridRole.value;\n      let dob = event.target.formGridDob.value;\n      let phone = event.target.formGridPhone.value;\n      let addressNumber = event.target.formGridAddressNumber.value;\n      let addressStreet = event.target.formGridAddressStreet.value;\n      let addressTown = event.target.formGridAddressTown.value;\n      let addressParish = event.target.formGridAddressParish.value;\n      let addressPostOffice = event.target.formGridAddressPostOffice.value;\n      let employmentDate = event.target.formGridEmploymentDate.value;\n      let terminationDate = event.target.formGridTerminationDate.value;\n\n      if (email.trim().length === 0 || password.trim().length === 0 || name.trim().length === 0 || role.trim().length === 0 || dob.trim().length === 0 || phone.trim().length === 0 || addressNumber.trim().length === 0 || addressStreet.trim().length === 0 || addressTown.trim().length === 0 || addressParish.trim().length === 0 || addressPostOffice.trim().length === 0 || employmentDate.trim().length === 0 || terminationDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...Please try again...\");\n        this.setState({\n          userAlert: \"blank fields detected!!!...Please try again...\"\n        });\n        return;\n      }\n\n      const token = this.context.token;\n      const userId = this.context.userId;\n      const user = {\n        email,\n        password,\n        name,\n        role,\n        dob,\n        phone,\n        addressNumber,\n        addressStreet,\n        addressTown,\n        addressParish,\n        addressPostOffice,\n        employmentDate,\n        terminationDate\n      };\n      console.log(`\n      creating user...\n      userId: ${userId}\n      email: ${email},\n      password: ${password},\n      name: ${name},\n      role: ${role},\n      dob: ${dob},\n      phone: ${phone},\n      addressNumber: ${addressNumber},\n      addressStreet: ${addressStreet},\n      addressTown: ${addressTown},\n      addressParish: ${addressParish},\n      addressPostOffice: ${addressPostOffice},\n      employmentDate: ${employmentDate},\n      terminationDate: ${terminationDate},\n      `);\n      const requestBody = {\n        query: `\n          mutation {\n            createUser(userInput: {email:\"${email}\",password:\"${password}\",name:\"${name}\",role:\"${role}\",dob:\"${dob}\",addressNumber:${addressNumber},addressStreet:\"${addressStreet}\",addressTown:\"${addressTown}\",addressParish:\"${addressParish}\",addressPostOffice:\"${addressPostOffice}\",phone:\"${phone}\",employmentDate:\"${employmentDate}\",terminationDate:\"${terminationDate}\"})\n            {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n          }\n        `\n      };\n      fetch('http://localhost:10000/graphql', {\n        // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"create user response data... \" + JSON.stringify(resData.data.createUser));\n        const responseAlert = JSON.stringify(resData.data).slice(0, 8);\n        this.setState({\n          userAlert: responseAlert\n        });\n        this.setState(prevState => {\n          const updatedUsers = [...prevState.users];\n          updatedUsers.push(resData.data.createUser);\n          return {\n            users: updatedUsers\n          };\n        });\n        this.context.users = this.state.users;\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        });\n      });\n    };\n\n    this.modalConfirmUpdateHandler = event => {\n      const token = this.context.token;\n      const userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id;\n\n      if (userId !== selectedUserId && this.context.user.role !== 'admin') {\n        console.log(\"Not the creator or Admin! No edit permission!!\");\n        this.setState({\n          userAlert: \"Not the creator or Admin! No edit permission!!\"\n        });\n        selectedUserId = null;\n      }\n\n      console.log(\"UpdateUserFormData:  \", event.target.formGridEmail.value);\n      this.setState({\n        updating: false\n      });\n      let email = event.target.formGridEmail.value;\n      let password = event.target.formGridPassword.value;\n      let name = event.target.formGridName.value;\n      let role = this.context.selectedUser.role;\n      let dob = event.target.formGridDob.value;\n      let phone = event.target.formGridPhone.value;\n      let addressNumber = event.target.formGridAddressNumber.value;\n      let addressStreet = event.target.formGridAddressStreet.value;\n      let addressTown = event.target.formGridAddressTown.value;\n      let addressParish = event.target.formGridAddressParish.value;\n      let addressPostOffice = event.target.formGridAddressPostOffice.value;\n      let employmentDate = event.target.formGridEmploymentDate.value;\n      let terminationDate = event.target.formGridTerminationDate.value;\n\n      if (email.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        email = this.context.selectedUser.email;\n      }\n\n      if (password.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        password = this.context.selectedUser.password;\n      }\n\n      if (name.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        name = this.context.selectedUser.name;\n      } // if (role.trim().length === 0) {\n      //   console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      //   role = this.state.selectedUser.role;\n      // }\n\n\n      if (dob.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        dob = this.context.selectedUser.dob;\n      }\n\n      if (phone.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        phone = this.context.selectedUser.phone;\n      }\n\n      if (addressNumber.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressNumber = this.context.selectedUser.address.number;\n      }\n\n      if (addressStreet.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressStreet = this.context.selectedUser.address.street;\n      }\n\n      if (addressTown.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressTown = this.context.selectedUser.address.town;\n      }\n\n      if (addressParish.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressParish = this.context.selectedUser.address.parish;\n      }\n\n      if (addressPostOffice.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressPostOffice = this.context.selectedUser.address.postOffice;\n      }\n\n      if (employmentDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        employmentDate = this.context.selectedUser.employmentDate;\n      }\n\n      if (terminationDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        terminationDate = this.context.selectedUser.terminationDate;\n      }\n\n      const user = {\n        email,\n        password,\n        name,\n        role,\n        dob,\n        phone,\n        addressNumber,\n        addressStreet,\n        addressTown,\n        addressParish,\n        addressPostOffice,\n        employmentDate,\n        terminationDate\n      };\n      console.log(`\n      updating user profile...\n      userId: ${userId}\n      email: ${email},\n      password: ${password},\n      name: ${name},\n      role: ${role},\n      dob: ${dob},\n      phone: ${phone},\n      addressNumber: ${addressNumber},\n      addressStreet: ${addressStreet},\n      addressTown: ${addressTown},\n      addressParish: ${addressParish},\n      addressPostOffice: ${addressPostOffice},\n      employmentDate: ${employmentDate},\n      terminationDate: ${terminationDate},\n      `);\n      this.setState({\n        userAlert: \"updating user profile...\"\n      });\n      const requestBody = {\n        query: `\n      mutation {updateUser(userId:\\\"${userId}\\\",selectedUserId:\\\"${selectedUserId}\\\",userInput: {email:\\\"${email}\\\",password:\\\"${password}\\\",name:\\\"${name}\\\",dob:\\\"${dob}\\\",addressNumber:${addressNumber},addressStreet:\\\"${addressStreet}\\\",addressTown:\\\"${addressTown}\\\",addressParish:\\\"${addressParish}\\\", addressPostOffice:\\\"${addressPostOffice}\\\",phone:\\\"${phone}\\\",role:\\\"${role}\\\",employmentDate:\\\"${employmentDate}\\\",terminationDate:\\\"${terminationDate}\\\"})\n      {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const updatedUser = resData.data.updateUser;\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser));\n        this.setState({\n          user: updatedUser\n        });\n        this.state.users.push(resData.data.updateUser);\n        this.context.users = this.state.users;\n        const responseAlert = JSON.stringify(resData.data).slice(2, 25);\n        this.setState({\n          userAlert: responseAlert,\n          selectedUser: resData.data.updateUser\n        });\n        this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        });\n      });\n    };\n\n    this.modalConfirmUpdateFieldHandler = event => {\n      const token = this.context.token;\n      const userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id; // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      //   console.log(\"Not the creator or Admin! No edit permission!!\");\n      //   selectedUserId = null;\n      // }\n\n      console.log(\"UpdateUserFieldFormData:  \", event.target.formGridField.value, event.target.formGridFieldSelect.value);\n      this.setState({\n        updating: false\n      });\n      let field = null;\n      let query = event.target.formGridQuery.value;\n\n      if (event.target.formGridFieldSelect.value === \"select\") {\n        field = event.target.formGridField.value;\n      } else {\n        field = event.target.formGridFieldSelect.value;\n      }\n\n      console.log(`\n          field: ${field},\n          query: ${query},\n        `);\n      this.setState({\n        userAlert: \"updating user field...\"\n      });\n      const requestBody = {\n        query: `\n          mutation{updateUserField(userId:\"${userId}\",selectedUserId:\"${selectedUserId}\",field:\"${field}\",query:\"${query}\")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n        }\n        `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data.updateUserField));\n        const updatedUserId = resData.data.updateUserField._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(resData.data.updateUserField);\n        this.context.users = this.state.users;\n        const responseAlert = JSON.stringify(resData.data).slice(2, 25);\n        this.setState({\n          userAlert: responseAlert,\n          selectedUser: resData.data.updateUserField\n        });\n        this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        });\n      });\n    };\n\n    this.updateUserAttendanceHandler = event => {\n      const token = this.context.token;\n      const userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id; // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      //   console.log(\"Not the creator or Admin! No edit permission!!\");\n      //   selectedUserId = null;\n      // }\n\n      if (userId !== selectedUserId && this.context.user.role !== \"admin\") {\n        console.log(\"Not the creator or Admin! No edit permission!!\");\n        this.setState({\n          userAlert: \"Not the creator or Admin! No edit permission!!\"\n        });\n        selectedUserId = null;\n      }\n\n      console.log(\"UpdateUserAttendanceFormData:  \", AuthContext._currentValue.fancyDate);\n      this.setState({\n        updating: false,\n        userUpdateField: null\n      }); // FIX ME!!!\n\n      let attendanceDate = AuthContext._currentValue.fancyDate;\n      let attendanceStatus = event.target.formGridAttendanceStatus.value;\n      let attendanceDescription = event.target.formGridAttendanceDescription.value;\n\n      if ( // attendanceDate.trim().length === 0 ||\n      attendanceStatus.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        return;\n      }\n\n      const userAttendance = {\n        attendanceDate,\n        attendanceStatus,\n        attendanceDescription\n      };\n      console.log(`\n      adding user attendance item...\n      userId: ${userId},\n      selectedUserId: ${selectedUserId}\n      attendanceDate: ${attendanceDate},\n      attendanceStatus: ${attendanceStatus},\n      attendanceDescription: ${attendanceDescription}\n      `);\n      this.setState({\n        userAlert: \"adding user attendance item...\"\n      });\n      const requestBody = {\n        query: `\n          mutation {updateUserAttendance(userId:\"${userId}\", selectedUserId:\"${selectedUserId}\",userInput:{attendanceDate:\"${attendanceDate}\",attendanceStatus:\"${attendanceStatus}\",attendanceDescription:\"${attendanceDescription}\"})\n          {_id,name,email,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description}}}\n        `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data.updateUserAttendance));\n        const updatedUserId = resData.data.updateUserAttendance._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(resData.data.updateUserAttendance);\n        this.context.users = this.state.users;\n        const responseAlert = JSON.stringify(resData.data).slice(2, 25);\n        this.setState({\n          userAlert: responseAlert,\n          selectedUser: resData.data.updateUserAttendance\n        });\n        this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        });\n      });\n    };\n\n    this.updateUserAttachmentHandler = event => {\n      const token = this.context.token;\n      const userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id; // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      //   console.log(\"Not the creator or Admin! No edit permission!!\");\n      //   selectedUserId = null;\n      // }\n\n      if (userId !== selectedUserId && this.context.user.role !== \"admin\") {\n        console.log(\"Not the creator or Admin! No edit permission!!\");\n        this.setState({\n          userAlert: \"Not the creator or Admin! No edit permission!!\"\n        });\n        selectedUserId = null;\n      }\n\n      console.log(\"UpdateUserAttachmentFormData:  \");\n      this.setState({\n        updating: false,\n        userUpdateField: null\n      }); // let attachmentName = event.target.formGridAttachmentName.value;\n\n      let attachmentFormat = event.target.formGridAttachmentFormat.value;\n      let attachmentPath = event.target.formGridAttachmentPath.value;\n      let file = AuthContext._currentValue.file;\n      console.log(`\n      uploading to s3...\n      file.name: ${file.name},\n      AuthContext._currentValue.file: ${AuthContext._currentValue.file},\n      `);\n      const config = {\n        bucketName: 'ent-emr-bucket',\n        dirName: attachmentPath,\n        region: 'us-east-2',\n        accessKeyId: \"AKIARFTS6Q6DALQKT4QR\",\n        secretAccessKey: \"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\"\n      };\n      const ReactS3Client = new S3(config);\n      const newFileName = file.name;\n      const attachmentName = newFileName;\n      ReactS3Client.uploadFile(file, newFileName).then(data => {\n        console.log(data);\n        this.setState({\n          userAlert: \"attachment upload success!\"\n        });\n      }).catch(err => {\n        console.error(err);\n        this.setState({\n          userAlert: \"upload error:  \" + err\n        });\n      });\n\n      if (attachmentName.trim().length === 0 || attachmentFormat.trim().length === 0 || attachmentPath.trim().length === 0) {\n        console.log(\"blank fields detected!!! try again\");\n        return;\n      }\n\n      const userAttachment = {\n        attachmentName,\n        attachmentFormat,\n        attachmentPath\n      };\n      console.log(`\n      adding user attachment item...\n      userId: ${userId},\n      selectedUserId: ${selectedUserId}\n      attachmentName: ${attachmentName},\n      attachmentFormat: ${attachmentFormat},\n      attachmentPath: ${attachmentPath},\n      `);\n      this.setState({\n        userAlert: \"adding user attatchment item...\"\n      });\n      const requestBody = {\n        query: `\n          mutation{updateUserAttachment(userId:\\\"${userId}\\\",selectedUserId:\\\"${selectedUserId}\\\",userInput:{attachmentName:\\\"${attachmentName}\\\",attachmentFormat:\\\"${attachmentFormat}\\\",attachmentPath:\\\"${attachmentPath}\\\"})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data.updateUserAttachment));\n        const updatedUserId = resData.data.updateUserAttachment._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(resData.data.updateUserAttachment);\n        this.context.users = this.state.users;\n        const responseAlert = JSON.stringify(resData.data).slice(2, 25);\n        this.setState({\n          userAlert: responseAlert,\n          selectedUser: resData.data.updateUserAttachment\n        });\n        this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        });\n      });\n    };\n\n    this.updateUserLeaveHandler = event => {\n      const token = this.context.token;\n      const userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id; // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      //   console.log(\"Not the creator or Admin! No edit permission!!\");\n      //   selectedUserId = null;\n      // }\n\n      if (userId !== selectedUserId && this.context.user.role !== \"admin\") {\n        console.log(\"Not the creator or Admin! No edit permission!!\");\n        this.setState({\n          userAlert: \"Not the creator or Admin! No edit permission!!\"\n        });\n        selectedUserId = null;\n      }\n\n      console.log(\"UpdateUserLeaveFormData:  \", event.target.formGridLeaveType.value);\n      this.setState({\n        updating: false,\n        userUpdateField: null\n      });\n      let leaveType = event.target.formGridLeaveType.value;\n      let leaveTitle = event.target.formGridLeaveTitle.value;\n      let leaveStartDate = event.target.formGridLeaveStartDate.value;\n      let leaveEndDate = event.target.formGridLeaveEndDate.value;\n\n      if (leaveType.trim().length === 0 || leaveTitle.trim().length === 0 || leaveStartDate.trim().length === 0 || leaveEndDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...try again\");\n        this.setState({\n          userAlert: \"blank fields detected!!!...try again\"\n        });\n        return;\n      }\n\n      const userLeave = {\n        leaveType,\n        leaveTitle,\n        leaveStartDate,\n        leaveEndDate\n      };\n      console.log(`\n      adding user leave item...\n      userId: ${userId},\n      selectedUserId: ${selectedUserId}\n      leave: {\n        type: ${leaveType},\n        title: ${leaveTitle},\n        startDate: ${leaveStartDate},\n        endDate: ${leaveEndDate}\n      }\n      `);\n      this.setState({\n        userAlert: \"adding user leave item...\"\n      });\n      const requestBody = {\n        query: `\n          mutation{updateUserLeave(userId:\\\"${userId}\\\",selectedUserId:\\\"${selectedUserId}\\\",userInput:{leaveType:\\\"${leaveType}\\\",leaveTitle:\\\"${leaveTitle}\\\",leaveStartDate:\\\"${leaveStartDate}\\\",leaveEndDate:\\\"${leaveEndDate}\\\"})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data));\n        const updatedUserId = resData.data.updateUserLeave._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(resData.data.updateUserLeave);\n        this.context.users = this.state.users;\n        const responseAlert = JSON.stringify(resData.data).slice(2, 25);\n        this.setState({\n          userAlert: responseAlert,\n          selectedUser: resData.data.updateUserLeave\n        });\n        this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        });\n      });\n    };\n\n    this.modalConfirmSearchHandler = event => {\n      console.log(\"SearchUserForm:  \");\n      let userId = this.context.userId;\n      console.log(\"SearchUserFormData:  \", event.target.formBasicField.value);\n      this.setState({\n        searching: false\n      });\n      let field = null;\n      let query = event.target.formBasicQuery.value;\n\n      if (event.target.formBasicFieldSelect.value === \"select\") {\n        field = event.target.formBasicField.value;\n      } else {\n        field = event.target.formBasicFieldSelect.value;\n      }\n\n      this.setState({\n        userSearchField: field,\n        userSearchQuery: query\n      });\n\n      if (field.trim().length === 0 || query.trim().length === 0) {\n        console.log(\"blank fields detected!!!...Please try again...\");\n        this.setState({\n          userAlert: \"blank fields detected!!!...Please try again...\"\n        });\n        return;\n      }\n\n      const search = {\n        field,\n        query\n      };\n      console.log(\"Searching for User:  \", JSON.stringify(search));\n      this.setState({\n        userAlert: \"Searching for User...\"\n      });\n      const requestBody = {\n        query: `\n          query {getUserField(userId:\"${userId}\",field:\"${field}\",query:\"${query}\")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `\n      };\n      const token = this.context.token; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const responseAlert = JSON.stringify(resData.data).slice(0, 8);\n        this.setState({\n          userAlert: responseAlert\n        });\n        const searchUsers = resData.data.getUserField;\n        this.setState({\n          searchUsers: searchUsers\n        });\n        console.log(\"state.searchUsers:  \", this.state.searchUsers); // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        });\n      });\n    };\n\n    this.modalConfirmSearchIdHandler = event => {\n      let userId = this.context.userId;\n      this.setState({\n        searching: false\n      });\n      console.log(\"SearchUserIdFormData:\", event.target.formBasicId.value);\n      let selectedUserId = event.target.formBasicId.value;\n      const requestBody = {\n        query: `\n        query {getUserId(userId:\"${userId}\",selectedUserId:\"${selectedUserId}\")\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `\n      };\n      const token = this.context.token; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const responseAlert = JSON.stringify(resData.data).slice(2, 25);\n        this.setState({\n          userAlert: responseAlert\n        });\n        const searchUsers = resData.data.getUserId;\n        this.setState({\n          searchUsers: [searchUsers]\n        });\n        console.log(\"state.searchUsers:  \", this.state.searchUsers); // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        });\n      });\n    };\n\n    this.modalConfirmSearchAttendanceDateHandler = event => {\n      let userId = this.context.userId;\n      this.setState({\n        searching: false\n      });\n      console.log(\"SearchUserAttendanceDateFormData:\");\n      const attendanceDate = event.target.formBasicDate.value;\n      const requestBody = {\n        query: `\n        query {getUserAttendanceDate(userId:\"${userId}\",attendanceDate:\"${attendanceDate}\")\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `\n      };\n      const token = this.context.token; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const responseAlert = JSON.stringify(resData.data).slice(0, 8);\n        this.setState({\n          userAlert: responseAlert\n        });\n        const searchUsers = resData.data.getUserAttendanceDate;\n        this.setState({\n          searchUsers: searchUsers\n        });\n        console.log(\"state.searchUsers:  \", this.state.searchUsers); // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        });\n      });\n    };\n\n    this.modalConfirmSearchLeaveDateRangeHandler = event => {\n      let userId = this.context.userId;\n      this.setState({\n        searching: false\n      });\n      console.log(\"SearchUserLeaveDateRangeFormData:\");\n      const startDate = event.target.formBasicStartDate.value;\n      const endDate = event.target.formBasicEndDate.value;\n      const requestBody = {\n        query: `\n        query{getUserLeaveDateRange(userId:\"${userId}\",startDate:\"${startDate}\",endDate:\"${endDate}\")\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `\n      };\n      const token = this.context.token; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const responseAlert = JSON.stringify(resData.data).slice(0, 8);\n        this.setState({\n          userAlert: responseAlert\n        });\n        const searchUsers = resData.data.getUserLeaveDateRange;\n        this.setState({\n          searchUsers: searchUsers\n        });\n        console.log(\"state.searchUsers:  \", this.state.searchUsers); // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        });\n      });\n    };\n\n    this.modalConfirmSearchNameHandler = event => {\n      console.log(\"SearchUserNameFormData:\", event.target.formBasicName.value);\n      let userId = this.context.userId;\n      this.setState({\n        searching: false\n      });\n      let users = this.state.users;\n      const regex = new RegExp(event.target.formBasicName.value, \"i\");\n      console.log(`\n      regex: ${regex},\n      `);\n      let result = users.filter(user => user.name.match(regex));\n      console.log(`\n        result: ${JSON.stringify(result)}\n        `);\n      this.setState({\n        searchUsers: result\n      });\n    };\n\n    this.modalCancelHandler = () => {\n      this.setState({\n        creating: false,\n        updating: false,\n        deleting: false,\n        searching: false\n      });\n    };\n\n    this.fetchUsersAsc = () => {\n      console.log(\"'fetch usersAsc function' context object... \" + JSON.stringify(this.context));\n      const userId = this.context.userId; // this.setState({ isSorting: true });\n\n      const requestBody = {\n        query: `\n          query {usersNameAsc (userId:\"${userId}\")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.context.token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.context.userAlert = 'Failed!';\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        const users = resData.data.usersNameAsc;\n        console.log(\"resData:  \", resData);\n        console.log(users);\n        const responseAlert = JSON.stringify(resData.data).slice(0, 8);\n        this.setState({\n          userAlert: responseAlert\n        });\n        this.setState({\n          users: users\n        }); // if (this.isActive) {\n        //   this.setState({ users: users, isLoading: false });\n        // }\n\n        this.context.users = this.state.users;\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        }); // if (this.isActive) {\n        //   this.setState({ isLoading: false });\n        // }\n      });\n    };\n\n    this.fetchUsersDesc = () => {\n      console.log(\"'fetch usersDesc function' context object... \" + JSON.stringify(this.context));\n      const userId = this.context.userId; // this.setState({ isLoading: true });\n\n      const requestBody = {\n        query: `\n          query {usersNameDesc (userId:\"${userId}\")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.context.token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.context.userAlert = 'Failed!';\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        const users = resData.data.usersNameDesc;\n        console.log(\"resData:  \", resData);\n        console.log(users);\n        const responseAlert = JSON.stringify(resData.data).slice(0, 8);\n        this.setState({\n          userAlert: responseAlert\n        }); // if (this.isActive) {\n        //   this.setState({ users: users, isLoading: false });\n        // }\n\n        this.setState({\n          users: users\n        });\n        this.context.users = this.state.users;\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        }); // if (this.isActive) {\n        //   this.setState({ isLoading: false });\n        // }\n      });\n    };\n\n    this.modalDeleteHandler = () => {\n      console.log(\"deleting user...selectedUser:  \", this.context.selectedUser);\n      const userId = this.context.userId;\n      const selectedUserId = this.context.selectedUser._id;\n\n      if (this.context.user.role !== 'admin') {\n        console.log(\"Not the Admin! No edit permission!!\");\n        this.setState({\n          userAlert: \"Not the Admin! No edit permission!!\"\n        });\n      }\n\n      this.setState({\n        deleting: true,\n        userAlert: \"deleting user..\"\n      });\n      const requestBody = {\n        query: `\n        mutation {\n          deleteUser(userId: ${userId}, selectedUserId: ${selectedUserId})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n        }\n      `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.context.token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0, 8);\n        this.setState({\n          userAlert: responseAlert\n        });\n        let deletedUser = resData.data.deleteUser;\n        console.log(deletedUser);\n        let deletedUserId = deletedUser._id;\n        deletedUser = this.state.users.find(e => e._id === deletedUserId);\n        const deletedUserPos = this.state.users.indexOf(deletedUser);\n        const slicedArray = this.state.users.splice(deletedUserPos, 1);\n        console.log(\"deletedUser:  \", JSON.stringify(deletedUser), \"  deletedUserPos:  \", deletedUserPos, \"  slicedArray:  \", slicedArray);\n        this.setState({\n          deleting: false,\n          selectedUser: null\n        });\n        this.context.selectedUser = null;\n        this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        });\n\n        if (this.isActive) {\n          this.setState({\n            deleting: false\n          });\n        }\n      });\n    };\n\n    this.deleteUserAttendanceItem = props => {\n      let token = this.context.token;\n      let userId = this.context.userId;\n      let selectedUserId = this.state.selectedUser._id;\n      let date = new Date(props.date.substr(0, 10) * 1000).toISOString().slice(0, 10);\n      console.log(`\n    delete user Attendance item:\n    props: ${JSON.stringify(props)},\n    token: ${token},\n    userId: ${userId},\n    selectedUserId: ${selectedUserId},\n    attandance date: ${date},\n    `);\n      const requestBody = {\n        query: `\n       mutation{deleteUserAttendance(userId:\\\"${userId}\\\",selectedUserId:\\\"${selectedUserId}\\\",attendanceDate:\\\"${date}\\\")\n       {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n    `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        let deletedUser = resData.data.deleteUserAttendance;\n        console.log(\"resData.data:  \", resData.data.deleteUserAttendance);\n        const updatedUserId = resData.data.deleteUserAttendance._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(resData.data.deleteUserAttendance);\n        this.context.users = this.state.users;\n        const responseAlert = JSON.stringify(resData.data).slice(2, 25);\n        this.setState({\n          userAlert: responseAlert\n        }); // this.setState({ userAlert: responseAlert, selectedUser: resData.data.deleteUserAttendance})\n\n        this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.deleteUserLeaveItem = props => {\n      let token = this.context.token;\n      let userId = this.context.userId;\n      let selectedUserId = this.state.selectedUser._id;\n      console.log(`\n    delete user Leave item:\n    props: ${JSON.stringify(props)},\n    token: ${token},\n    userId: ${userId},\n    selectedUserId: ${selectedUserId},\n    `);\n      const requestBody = {\n        query: `\n       mutation{deleteUserLeave(userId:\\\"${userId}\\\",selectedUserId:\\\"${selectedUserId}\\\",leaveTitle:\\\"${props.title}\\\")\n       {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n    `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        let deletedUser = resData.data.deleteUserLeave;\n        console.log(deletedUser);\n        const updatedUserId = resData.data.deleteUserLeave._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(resData.data.deleteUserLeave);\n        this.context.users = this.state.users;\n        const responseAlert = JSON.stringify(resData.data).slice(2, 25);\n        this.setState({\n          userAlert: responseAlert\n        }); // this.setState({ userAlert: responseAlert, selectedUser: resData.data.deleteUserLeave})\n\n        this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.deleteUserAttachmentItem = props => {\n      let token = this.context.token;\n      let userId = this.context.userId;\n      let selectedUserId = this.state.selectedUser._id;\n      console.log(`\n    delete user Attachment item:\n    props: ${JSON.stringify(props)},\n    token: ${token},\n    userId: ${userId},\n    selectedUserId: ${selectedUserId},\n    `); // let file = AuthContext._currentValue.file;\n      //\n      // console.log(`\n      //   uploading to s3...\n      //   file.name: ${file.name},\n      //   AuthContext._currentValue.file: ${AuthContext._currentValue.file},\n      //   `);\n      // const config = {\n      //   bucketName: 'ent-emr-bucket',\n      //   dirName: attachmentPath,\n      //   region: 'us-east-2',\n      //   accessKeyId: \"AKIARFTS6Q6DALQKT4QR\",\n      //   secretAccessKey: \"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\",\n      // }\n      // const ReactS3Client = new S3(config);\n      // const newFileName = file.name;\n      // const attachmentName = newFileName;\n      //\n      // ReactS3Client\n      //     .uploadFile(file, newFileName)\n      //     .then(data => {console.log(data);this.setState({userAlert: \"attachment upload success!\"});})\n      //     .catch(err => {console.error(err);this.setState({userAlert: \"upload error:  \"+err});})\n\n      const requestBody = {\n        query: `\n       mutation{deleteUserAttachment(userId:\\\"${userId}\\\",selectedUserId:\\\"${selectedUserId}\\\",attachmentName:\\\"${props.name}\\\")\n       {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n    `\n      }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        let deletedUser = resData.data.deleteUserAttachment;\n        console.log(deletedUser);\n        const updatedUserId = resData.data.deleteUserAttachment._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(resData.data.deleteUserAttachment);\n        this.context.users = this.state.users;\n        const responseAlert = JSON.stringify(resData.data).slice(2, 25);\n        this.setState({\n          userAlert: responseAlert\n        }); // this.setState({ userAlert: responseAlert, selectedUser: resData.data.deleteUserAttachment})\n\n        this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.showDetailHandler = userId => {\n      this.setState(prevState => {\n        const selectedUser = prevState.users.find(e => e._id === userId);\n        this.context.selectedUser = selectedUser;\n        this.setState({\n          selectedUser: selectedUser\n        });\n        console.log(\"User selected  :  \", selectedUser);\n        return {\n          selectedUser: selectedUser\n        };\n      });\n    };\n\n    this.onViewAttachment = attachment => {\n      console.log(`\n      setting up attachment viewer...\n      attachment: ${JSON.stringify(attachment)}\n      `);\n      this.setState({\n        showAttachment: true\n      });\n      const file = \"https://ent-emr-bucket.s3-us-east-2.amazonaws.com/\" + attachment.path + \"/\" + attachment.name;\n      const type = attachment.format;\n      this.setState({\n        showThisAttachmentFile: file,\n        showThisAttachmentType: type\n      });\n    };\n\n    this.closeAttachmentView = () => {\n      console.log(`\n      closing attachment viewer...\n      `);\n      this.setState({\n        showAttachment: false\n      });\n    };\n  }\n\n  // constructor(props) {\n  //   super(props);\n  // }\n  componentDidMount() {\n    this.fetchUsers();\n\n    if (this.context.user.name === 'admin579') {\n      this.setState({\n        canDelete: true\n      });\n    }\n  }\n\n  fetchUsers() {\n    console.log(\"fetch users:\"); // console.log(\"'fetch users function' context object... \" + JSON.stringify(this.context));\n\n    const userId = this.context.userId;\n    this.setState({\n      isLoading: true\n    });\n    const requestBody = {\n      query: `\n          query {users (userId:\"${userId}\")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `\n    }; // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        this.context.userAlert = 'Failed!';\n        throw new Error('Failed!');\n      }\n\n      return res.json();\n    }).then(resData => {\n      const responseAlert = JSON.stringify(resData.data).slice(0, 8);\n      this.setState({\n        userAlert: responseAlert\n      });\n      const users = resData.data.users;\n      console.log(\"resData:  \", resData);\n      console.log(users);\n\n      if (this.isActive) {\n        this.setState({\n          users: users,\n          isLoading: false\n        });\n      }\n\n      this.context.users = this.state.users;\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        userAlert: err\n      });\n\n      if (this.isActive) {\n        this.setState({\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  updateUserSpecial(event) {\n    console.log(\"special field to update:  \", event.target.value);\n    const field = event.target.value;\n    this.setState({\n      userUpdateField: field\n    });\n  }\n\n  userSearchClearlHandler() {\n    console.log(\"clearing user search results\");\n    this.setState({\n      searchUsers: [],\n      userAlert: \"clearing user search results\"\n    });\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1427\n      },\n      __self: this\n    }, this.state.showAttachment === true && React.createElement(AttachmentViewer, {\n      onCloseAttachmentView: this.closeAttachmentView,\n      attachmentFile: this.state.showThisAttachmentFile,\n      attachmentType: this.state.showThisAttachmentType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1429\n      },\n      __self: this\n    }), React.createElement(Accordion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1436\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1438\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 3,\n      className: \"MasterCol1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1440\n      },\n      __self: this\n    }, React.createElement(AlertBox, {\n      authUserId: this.context.userId,\n      alert: this.state.userAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1442\n      },\n      __self: this\n    }), React.createElement(SidebarPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1447\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 9,\n      className: \"MasterCol2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1451\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"containerCombinedDetail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1453\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"userDetail\",\n      id: \"uncontrolled-tab-example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1454\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      eventKey: \"Edit\",\n      title: \"Edit:\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1455\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      eventKey: \"userDetail\",\n      title: \"Details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1457\n      },\n      __self: this\n    }, this.state.selectedUser === null && React.createElement(Button, {\n      variant: \"outline-warning\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1459\n      },\n      __self: this\n    }, \"Select a Staff member from the Master List below\"), this.state.isLoading === false && this.state.selectedUser !== null && React.createElement(UserDetail, {\n      authUserId: this.context.userId,\n      AuthContext: this.context,\n      user: this.state.selectedUser,\n      onEdit: this.startUpdateUserHandler,\n      canDelete: this.state.canDelete,\n      onDelete: this.modalDeleteHandler,\n      attendanceDelete: this.deleteUserAttendanceItem,\n      leaveDelete: this.deleteUserLeaveItem,\n      attachmentDelete: this.deleteUserAttachmentItem,\n      onViewAttachment: this.onViewAttachment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1466\n      },\n      __self: this\n    })), this.context.user.role === \"admin\" && React.createElement(Tab, {\n      eventKey: \"userCreate\",\n      title: \"New\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1482\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.startCreateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1483\n      },\n      __self: this\n    }, \"Create\"), this.state.creating && React.createElement(CreateUserForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmHandler,\n      onSubmit: this.modalConfirmHandler,\n      confirmText: \"Confirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1485\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"userEditDemographics\",\n      title: \"Demographics\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1498\n      },\n      __self: this\n    }, this.state.selectedUser === null && React.createElement(Button, {\n      variant: \"outline-warning\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1500\n      },\n      __self: this\n    }, \"Select a Staff member from the Master List below\"), this.state.selectedUser !== null && this.context.user.role === \"admin\" && React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.startUpdateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1507\n      },\n      __self: this\n    }, \"Edit Demographics as Admin\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.startUpdateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1512\n      },\n      __self: this\n    }, \"Edit Demographics (your profile)\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1516\n      },\n      __self: this\n    }, \"Your Profile\"), this.state.selectedUser !== null && this.state.selectedUser._id !== this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1522\n      },\n      __self: this\n    }, \"Not my profile\"), this.state.updating && this.state.selectedUser !== null && React.createElement(UpdateUserForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmUpdateHandler,\n      confirmText: \"Confirm\",\n      user: this.context.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1529\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"userEditField\",\n      title: \"Single Field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1542\n      },\n      __self: this\n    }, this.state.selectedUser === null && React.createElement(Button, {\n      variant: \"outline-warning\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1544\n      },\n      __self: this\n    }, \"Select a Staff member from the Master List below\"), this.state.selectedUser !== null && this.context.user.role === \"admin\" && React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.startUpdateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1552\n      },\n      __self: this\n    }, \"Edit Field as Admin\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.startUpdateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1557\n      },\n      __self: this\n    }, \"Edit Field (your profile)\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1561\n      },\n      __self: this\n    }, \"Your Profile\"), this.state.selectedUser !== null && this.state.selectedUser._id !== this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1567\n      },\n      __self: this\n    }, \"Not my profile\"), this.state.updating && this.state.selectedUser !== null && React.createElement(UpdateUserFieldForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmUpdateFieldHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1574\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"userEditAttendance\",\n      title: \"Attendance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1586\n      },\n      __self: this\n    }, this.state.selectedUser === null && React.createElement(Button, {\n      variant: \"outline-warning\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1588\n      },\n      __self: this\n    }, \"Select a Staff member from the Master List below\"), this.state.selectedUser !== null && this.context.user.role === \"admin\" && React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"attendance\",\n      onClick: this.updateUserSpecial.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1596\n      },\n      __self: this\n    }, \"Add Attendance as Admin\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"attendance\",\n      onClick: this.updateUserSpecial.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1601\n      },\n      __self: this\n    }, \"Add Attendance (your profile)\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1605\n      },\n      __self: this\n    }, \"Your Profile\"), this.state.selectedUser !== null && this.state.selectedUser._id !== this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1611\n      },\n      __self: this\n    }, \"Not my profile\"), this.state.userUpdateField === 'attendance' && this.state.selectedUser !== null && React.createElement(UpdateUserAttendanceForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserAttendanceHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1619\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"userEditLeave\",\n      title: \"Leave\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1631\n      },\n      __self: this\n    }, this.state.selectedUser === null && React.createElement(Button, {\n      variant: \"outline-warning\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1633\n      },\n      __self: this\n    }, \"Select a Staff member from the Master List below\"), this.state.selectedUser !== null && this.context.user.role === \"admin\" && React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"leave\",\n      onClick: this.updateUserSpecial.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1641\n      },\n      __self: this\n    }, \"Add Leave as Admin\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"leave\",\n      onClick: this.updateUserSpecial.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1646\n      },\n      __self: this\n    }, \"Add Leave (your profile)\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1650\n      },\n      __self: this\n    }, \"Your Profile\"), this.state.selectedUser !== null && this.state.selectedUser._id !== this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1656\n      },\n      __self: this\n    }, \"Not my profile\"), this.state.userUpdateField === 'leave' && this.state.selectedUser !== null && React.createElement(UpdateUserLeaveForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserLeaveHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1663\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"userEditAttachment\",\n      title: \"Attachment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1673\n      },\n      __self: this\n    }, this.state.selectedUser === null && React.createElement(Button, {\n      variant: \"outline-warning\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1675\n      },\n      __self: this\n    }, \"Select a Staff member from the Master List below\"), this.state.selectedUser !== null && this.context.user.role === \"admin\" && React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"attachments\",\n      onClick: this.updateUserSpecial.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1683\n      },\n      __self: this\n    }, \"Add Attachment as Admin\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"attachments\",\n      onClick: this.updateUserSpecial.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1688\n      },\n      __self: this\n    }, \"Add Attachment (your profile)\"), this.state.selectedUser !== null && this.state.selectedUser._id === this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1692\n      },\n      __self: this\n    }, \"Your Profile\"), this.state.selectedUser !== null && this.state.selectedUser._id !== this.context.user._id && React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1698\n      },\n      __self: this\n    }, \"Not my profile\"), this.state.userUpdateField === 'attachments' && this.state.selectedUser !== null && React.createElement(UpdateUserAttachmentForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserAttachmentHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1705\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"MasterList\",\n      title: \"Master List\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1717\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"containerUserMasterList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1718\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"searchListRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1719\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      size: \"sm\",\n      onClick: this.fetchUsersAsc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1720\n      },\n      __self: this\n    }, \"Sort Asc\"), React.createElement(Button, {\n      variant: \"info\",\n      size: \"sm\",\n      onClick: this.fetchUsersDesc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1723\n      },\n      __self: this\n    }, \"Sort Desc\"), this.state.isLoading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1727\n      },\n      __self: this\n    }) : React.createElement(UserList, {\n      users: this.state.users,\n      authUserId: this.context.userId,\n      onViewDetail: this.showDetailHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1729\n      },\n      __self: this\n    })))), React.createElement(Tab, {\n      eventKey: \"SearchInput\",\n      title: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1740\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"containerSearchUserInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1741\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"searchUserRowAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1743\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.startSearchUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1744\n      },\n      __self: this\n    }, \"Search\")), React.createElement(Row, {\n      className: \"searchUserRowForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1747\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 10,\n      className: \"searchUserColForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1748\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"Field\",\n      id: \"uncontrolled-tab-example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1749\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      eventKey: \"Search\",\n      title: \"Search:\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1750\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      eventKey: \"Field\",\n      title: \"Field:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1752\n      },\n      __self: this\n    }, this.state.searching === true && React.createElement(SearchUserForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmSearchHandler,\n      confirmText: \"Search\",\n      user: this.context.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1754\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Id\",\n      title: \"Id:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1764\n      },\n      __self: this\n    }, this.state.searching === true && React.createElement(SearchUserIdForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmSearchIdHandler,\n      confirmText: \"Search\",\n      user: this.context.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1766\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Attendance\",\n      title: \"Attendance:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1777\n      },\n      __self: this\n    }, this.state.searching === true && React.createElement(SearchUserAttendanceDateForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmSearchAttendanceDateHandler,\n      confirmText: \"Search\",\n      user: this.context.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1779\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Leave\",\n      title: \"Leave:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1790\n      },\n      __self: this\n    }, this.state.searching === true && React.createElement(SearchUserLeaveDateRangeForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmSearchLeaveDateRangeHandler,\n      confirmText: \"Search\",\n      user: this.context.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1792\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Name\",\n      title: \"Name:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1803\n      },\n      __self: this\n    }, this.state.searching === true && React.createElement(SearchUserNameForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmSearchNameHandler,\n      confirmText: \"Search\",\n      user: this.context.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1805\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1818\n      },\n      __self: this\n    })))), React.createElement(Tab, {\n      eventKey: \"SearchResult\",\n      title: \"Search Results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1825\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"containerSearchUserResults\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1826\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1827\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"searchCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1828\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      className: \"searchCardBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1829\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1830\n      },\n      __self: this\n    }, \"Your Search\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1831\n      },\n      __self: this\n    }, \"Field: \", this.state.userSearchField), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1834\n      },\n      __self: this\n    }, \"Query: \", this.state.userSearchQuery)))), React.createElement(Row, {\n      className: \"searchListRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1840\n      },\n      __self: this\n    }, this.state.searchUsers !== [] && React.createElement(SearchUserList, {\n      searchUsers: this.state.searchUsers,\n      authUserId: this.context.userId,\n      onViewDetail: this.showDetailHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1842\n      },\n      __self: this\n    }))))))))));\n  }\n\n}\n\nUsersPage.contextType = AuthContext;\nexport default UsersPage;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/Users.js"],"names":["S3","S3FileUpload","React","Component","Container","Row","Col","Button","Accordion","Tabs","Tab","Card","UserList","SearchUserList","UserDetail","Spinner","AuthContext","SidebarPage","AlertBox","AttachmentViewer","CreateUserForm","UpdateUserForm","UpdateUserFieldForm","UpdateUserAttendanceForm","UpdateUserAttachmentForm","UpdateUserLeaveForm","SearchUserForm","SearchUserIdForm","SearchUserNameForm","SearchUserAttendanceDateForm","SearchUserLeaveDateRangeForm","UsersPage","state","creating","updating","deleting","searching","users","searchUsers","isLoading","isSorting","selectedUser","userUpdateField","userSearchField","userSearchQuery","canDelete","userAlert","file","showAttachment","showThisAttachmentFile","showThisAttachmentType","isActive","startCreateUserHandler","setState","console","log","startUpdateUserHandler","startSearchUserHandler","modalConfirmHandler","event","JSON","stringify","target","formGridEmail","value","email","password","formGridPassword","name","formGridName","role","formGridRole","dob","formGridDob","phone","formGridPhone","addressNumber","formGridAddressNumber","addressStreet","formGridAddressStreet","addressTown","formGridAddressTown","addressParish","formGridAddressParish","addressPostOffice","formGridAddressPostOffice","employmentDate","formGridEmploymentDate","terminationDate","formGridTerminationDate","trim","length","token","context","userId","user","requestBody","query","fetch","method","body","headers","Authorization","then","res","status","Error","json","resData","data","createUser","responseAlert","slice","prevState","updatedUsers","push","catch","err","modalConfirmUpdateHandler","selectedUserId","_id","address","number","street","town","parish","postOffice","updatedUser","updateUser","fetchUsers","modalConfirmUpdateFieldHandler","formGridField","formGridFieldSelect","field","formGridQuery","updateUserField","updatedUserId","find","e","updatedUserPos","indexOf","slicedArray","splice","updateUserAttendanceHandler","_currentValue","fancyDate","attendanceDate","attendanceStatus","formGridAttendanceStatus","attendanceDescription","formGridAttendanceDescription","userAttendance","updateUserAttendance","updateUserAttachmentHandler","attachmentFormat","formGridAttachmentFormat","attachmentPath","formGridAttachmentPath","config","bucketName","dirName","region","accessKeyId","secretAccessKey","ReactS3Client","newFileName","attachmentName","uploadFile","error","userAttachment","updateUserAttachment","updateUserLeaveHandler","formGridLeaveType","leaveType","leaveTitle","formGridLeaveTitle","leaveStartDate","formGridLeaveStartDate","leaveEndDate","formGridLeaveEndDate","userLeave","updateUserLeave","modalConfirmSearchHandler","formBasicField","formBasicQuery","formBasicFieldSelect","search","getUserField","modalConfirmSearchIdHandler","formBasicId","getUserId","modalConfirmSearchAttendanceDateHandler","formBasicDate","getUserAttendanceDate","modalConfirmSearchLeaveDateRangeHandler","startDate","formBasicStartDate","endDate","formBasicEndDate","getUserLeaveDateRange","modalConfirmSearchNameHandler","formBasicName","regex","RegExp","result","filter","match","modalCancelHandler","fetchUsersAsc","usersNameAsc","fetchUsersDesc","usersNameDesc","modalDeleteHandler","deletedUser","deleteUser","deletedUserId","deletedUserPos","deleteUserAttendanceItem","props","date","Date","substr","toISOString","deleteUserAttendance","deleteUserLeaveItem","title","deleteUserLeave","deleteUserAttachmentItem","deleteUserAttachment","showDetailHandler","onViewAttachment","attachment","path","type","format","closeAttachmentView","componentDidMount","updateUserSpecial","userSearchClearlHandler","componentWillUnmount","render","bind","contextType"],"mappings":"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","sourcesContent":["import S3 from 'react-aws-s3';\nimport S3FileUpload from 'react-s3';\nimport React, { Component } from 'react';\n// import FileViewer from 'react-file-viewer';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Card from 'react-bootstrap/Card';\n\n// import Modal from '../components/Modal/Modal';\n// import Backdrop from '../components/Backdrop/Backdrop';\nimport UserList from '../components/Users/UserList/UserList';\nimport SearchUserList from '../components/Users/UserList/SearchUserList';\nimport UserDetail from '../components/Users/UserDetail';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\n\nimport SidebarPage from './Sidebar';\nimport AlertBox from '../components/AlertBox';\nimport AttachmentViewer from '../components/AttachmentViewer';\n\nimport CreateUserForm from '../components/Forms/CreateUserForm';\nimport UpdateUserForm from '../components/Forms/UpdateUserForm';\nimport UpdateUserFieldForm from '../components/Forms/UpdateUserFieldForm';\nimport UpdateUserAttendanceForm from '../components/Forms/UpdateUserAttendanceForm';\nimport UpdateUserAttachmentForm from '../components/Forms/UpdateUserAttachmentForm';\nimport UpdateUserLeaveForm from '../components/Forms/UpdateUserLeaveForm';\nimport SearchUserForm from '../components/Forms/SearchUserForm';\nimport SearchUserIdForm from '../components/Forms/SearchUserIdForm';\nimport SearchUserNameForm from '../components/Forms/SearchUserNameForm';\nimport SearchUserAttendanceDateForm from '../components/Forms/SearchUserAttendanceDateForm';\nimport SearchUserLeaveDateRangeForm from '../components/Forms/SearchUserLeaveDateRangeForm';\n\nimport './Users.css';\n\nclass UsersPage extends Component {\n  state = {\n    creating: false,\n    updating: false,\n    deleting: false,\n    searching: false,\n    users: [],\n    searchUsers: [],\n    isLoading: false,\n    isSorting: false,\n    selectedUser: null,\n    userUpdateField: null,\n    userSearchField: null,\n    userSearchQuery: null,\n    canDelete: null,\n    userAlert: null,\n    file: null,\n    showAttachment: false,\n    showThisAttachmentFile: null,\n    showThisAttachmentType: null,\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  componentDidMount() {\n    this.fetchUsers();\n    if (this.context.user.name === 'admin579'){\n      this.setState({canDelete: true})\n    }\n  }\n\n\n  startCreateUserHandler = () => {\n    this.setState({ creating: true });\n    console.log(\"CreateUserForm...\");\n  };\n  startUpdateUserHandler = () => {\n    this.setState({ updating: true });\n    console.log(\"UpdateUserForm...\");\n  };\n\n  startSearchUserHandler = () => {\n    this.setState({ searching: true });\n    console.log(\"SearchUserForm...\");\n  };\n\n  modalConfirmHandler = (event) => {\n    console.log(`\n      event: ${JSON.stringify(event)},\n      `);\n\n    console.log(\"CreateUserFormData:  \", event.target.formGridEmail.value);\n\n    this.setState({ creating: false });\n    const email = event.target.formGridEmail.value;\n    const password = event.target.formGridPassword.value;\n    const name = event.target.formGridName.value;\n    const role = event.target.formGridRole.value;\n    let dob = event.target.formGridDob.value;\n    let phone = event.target.formGridPhone.value;\n    let addressNumber = event.target.formGridAddressNumber.value;\n    let addressStreet = event.target.formGridAddressStreet.value;\n    let addressTown = event.target.formGridAddressTown.value;\n    let addressParish = event.target.formGridAddressParish.value;\n    let addressPostOffice = event.target.formGridAddressPostOffice.value;\n    let employmentDate = event.target.formGridEmploymentDate.value;\n    let terminationDate = event.target.formGridTerminationDate.value;\n\n    if (\n      email.trim().length === 0 ||\n      password.trim().length === 0 ||\n      name.trim().length === 0 ||\n      role.trim().length === 0 ||\n      dob.trim().length === 0 ||\n      phone.trim().length === 0 ||\n      addressNumber.trim().length === 0 ||\n      addressStreet.trim().length === 0 ||\n      addressTown.trim().length === 0 ||\n      addressParish.trim().length === 0 ||\n      addressPostOffice.trim().length === 0 ||\n      employmentDate.trim().length === 0 ||\n      terminationDate.trim().length === 0\n    ) {\n      console.log(\"blank fields detected!!!...Please try again...\");\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"});\n      return;\n    }\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n    const user = { email, password, name, role, dob, phone, addressNumber, addressStreet, addressTown, addressParish, addressPostOffice, employmentDate, terminationDate };\n\n    console.log(`\n      creating user...\n      userId: ${userId}\n      email: ${email},\n      password: ${password},\n      name: ${name},\n      role: ${role},\n      dob: ${dob},\n      phone: ${phone},\n      addressNumber: ${addressNumber},\n      addressStreet: ${addressStreet},\n      addressTown: ${addressTown},\n      addressParish: ${addressParish},\n      addressPostOffice: ${addressPostOffice},\n      employmentDate: ${employmentDate},\n      terminationDate: ${terminationDate},\n      `);\n\n    const requestBody = {\n      query: `\n          mutation {\n            createUser(userInput: {email:\"${email}\",password:\"${password}\",name:\"${name}\",role:\"${role}\",dob:\"${dob}\",addressNumber:${addressNumber},addressStreet:\"${addressStreet}\",addressTown:\"${addressTown}\",addressParish:\"${addressParish}\",addressPostOffice:\"${addressPostOffice}\",phone:\"${phone}\",employmentDate:\"${employmentDate}\",terminationDate:\"${terminationDate}\"})\n            {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n          }\n        `\n    };\n\n    fetch('http://localhost:10000/graphql', {\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"create user response data... \" + JSON.stringify(resData.data.createUser));\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert});\n\n        this.setState(prevState => {\n          const updatedUsers = [...prevState.users];\n          updatedUsers.push(resData.data.createUser);\n\n          return { users: updatedUsers };\n        });\n        this.context.users = this.state.users;\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n      });\n  };\n\n\n  modalConfirmUpdateHandler = (event) => {\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n    let selectedUserId = this.context.selectedUser._id;\n    if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      console.log(\"Not the creator or Admin! No edit permission!!\");\n      this.setState({userAlert: \"Not the creator or Admin! No edit permission!!\"});\n      selectedUserId = null;\n    }\n\n    console.log(\"UpdateUserFormData:  \", event.target.formGridEmail.value);\n\n    this.setState({ updating: false });\n\n    let email = event.target.formGridEmail.value;\n    let password = event.target.formGridPassword.value;\n    let name = event.target.formGridName.value;\n    let role = this.context.selectedUser.role;\n    let dob = event.target.formGridDob.value;\n    let phone = event.target.formGridPhone.value;\n    let addressNumber = event.target.formGridAddressNumber.value;\n    let addressStreet = event.target.formGridAddressStreet.value;\n    let addressTown = event.target.formGridAddressTown.value;\n    let addressParish = event.target.formGridAddressParish.value;\n    let addressPostOffice = event.target.formGridAddressPostOffice.value;\n    let employmentDate = event.target.formGridEmploymentDate.value;\n    let terminationDate = event.target.formGridTerminationDate.value;\n\n    if (email.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      email = this.context.selectedUser.email;\n    }\n    if (password.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      password = this.context.selectedUser.password;\n    }\n    if (name.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      name = this.context.selectedUser.name;\n    }\n    // if (role.trim().length === 0) {\n    //   console.log(\"blank fields detected!!!...filling w/ previous data...\");\n    //   role = this.state.selectedUser.role;\n    // }\n    if (dob.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      dob = this.context.selectedUser.dob;\n    }\n    if (phone.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      phone = this.context.selectedUser.phone;\n    }\n    if (addressNumber.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressNumber = this.context.selectedUser.address.number;\n    }\n    if (addressStreet.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressStreet = this.context.selectedUser.address.street;\n    }\n    if (addressTown.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressTown = this.context.selectedUser.address.town;\n    }\n    if (addressParish.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressParish = this.context.selectedUser.address.parish;\n    }\n    if (addressPostOffice.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressPostOffice = this.context.selectedUser.address.postOffice;\n    }\n    if (employmentDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      employmentDate = this.context.selectedUser.employmentDate;\n    }\n    if (terminationDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      terminationDate = this.context.selectedUser.terminationDate;\n    }\n\n    const user = { email, password, name, role, dob, phone, addressNumber, addressStreet, addressTown, addressParish, addressPostOffice, employmentDate, terminationDate };\n    console.log(`\n      updating user profile...\n      userId: ${userId}\n      email: ${email},\n      password: ${password},\n      name: ${name},\n      role: ${role},\n      dob: ${dob},\n      phone: ${phone},\n      addressNumber: ${addressNumber},\n      addressStreet: ${addressStreet},\n      addressTown: ${addressTown},\n      addressParish: ${addressParish},\n      addressPostOffice: ${addressPostOffice},\n      employmentDate: ${employmentDate},\n      terminationDate: ${terminationDate},\n      `);\n      this.setState({userAlert: \"updating user profile...\"});\n\n    const requestBody = {\n      query: `\n      mutation {updateUser(userId:\\\"${userId}\\\",selectedUserId:\\\"${selectedUserId}\\\",userInput: {email:\\\"${email}\\\",password:\\\"${password}\\\",name:\\\"${name}\\\",dob:\\\"${dob}\\\",addressNumber:${addressNumber},addressStreet:\\\"${addressStreet}\\\",addressTown:\\\"${addressTown}\\\",addressParish:\\\"${addressParish}\\\", addressPostOffice:\\\"${addressPostOffice}\\\",phone:\\\"${phone}\\\",role:\\\"${role}\\\",employmentDate:\\\"${employmentDate}\\\",terminationDate:\\\"${terminationDate}\\\"})\n      {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `};\n\n        // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const updatedUser = resData.data.updateUser;\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser));\n        this.setState({user: updatedUser})\n        this.state.users.push(resData.data.updateUser);\n        this.context.users = this.state.users;\n\n        const responseAlert = JSON.stringify(resData.data).slice(2,25);\n        this.setState({ userAlert: responseAlert, selectedUser: resData.data.updateUser})\n        this.fetchUsers();\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n      });\n  };\n\n\n  modalConfirmUpdateFieldHandler = (event) => {\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n    let selectedUserId = this.context.selectedUser._id;\n    // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n    //   console.log(\"Not the creator or Admin! No edit permission!!\");\n    //   selectedUserId = null;\n    // }\n\n\n      console.log(\"UpdateUserFieldFormData:  \", event.target.formGridField.value, event.target.formGridFieldSelect.value);\n      this.setState({ updating: false });\n\n      let field = null;\n      let query = event.target.formGridQuery.value;\n      if (event.target.formGridFieldSelect.value === \"select\") {\n        field = event.target.formGridField.value;\n      } else {\n        field = event.target.formGridFieldSelect.value;\n      }\n      console.log(`\n          field: ${field},\n          query: ${query},\n        `);\n\n        this.setState({ userAlert: \"updating user field...\"})\n\n      const requestBody = {\n        query:`\n          mutation{updateUserField(userId:\"${userId}\",selectedUserId:\"${selectedUserId}\",field:\"${field}\",query:\"${query}\")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n        }\n        `};\n\n        // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData.data.updateUserField));\n\n          const updatedUserId = resData.data.updateUserField._id;\n          const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n          const updatedUserPos = this.state.users.indexOf(updatedUser);\n          const slicedArray = this.state.users.splice(updatedUserPos, 1);\n          console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n          this.state.users.push(resData.data.updateUserField);\n          this.context.users = this.state.users;\n          const responseAlert = JSON.stringify(resData.data).slice(2,25);\n          this.setState({ userAlert: responseAlert, selectedUser: resData.data.updateUserField})\n          this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n\n  }\n\n  updateUserAttendanceHandler = (event) => {\n    const token = this.context.token;\n    const userId = this.context.userId;\n    let selectedUserId = this.context.selectedUser._id;\n    // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n    //   console.log(\"Not the creator or Admin! No edit permission!!\");\n    //   selectedUserId = null;\n    // }\n    if (userId !== selectedUserId && this.context.user.role !== \"admin\" ) {\n      console.log(\"Not the creator or Admin! No edit permission!!\");\n      this.setState({ userAlert: \"Not the creator or Admin! No edit permission!!\"});\n        selectedUserId = null;\n    }\n\n    console.log(\"UpdateUserAttendanceFormData:  \", AuthContext._currentValue.fancyDate);\n\n    this.setState({ updating: false , userUpdateField: null });\n\n    // FIX ME!!!\n    let attendanceDate = AuthContext._currentValue.fancyDate;\n    let attendanceStatus = event.target.formGridAttendanceStatus.value;\n    let attendanceDescription = event.target.formGridAttendanceDescription.value;\n\n    if (\n    // attendanceDate.trim().length === 0 ||\n    attendanceStatus.trim().length === 0\n    ){\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      return\n    }\n\n    const userAttendance = { attendanceDate, attendanceStatus, attendanceDescription }\n    console.log(`\n      adding user attendance item...\n      userId: ${userId},\n      selectedUserId: ${selectedUserId}\n      attendanceDate: ${attendanceDate},\n      attendanceStatus: ${attendanceStatus},\n      attendanceDescription: ${attendanceDescription}\n      `);\n\n      this.setState({ userAlert: \"adding user attendance item...\"});\n\n      const requestBody = {\n        query:`\n          mutation {updateUserAttendance(userId:\"${userId}\", selectedUserId:\"${selectedUserId}\",userInput:{attendanceDate:\"${attendanceDate}\",attendanceStatus:\"${attendanceStatus}\",attendanceDescription:\"${attendanceDescription}\"})\n          {_id,name,email,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description}}}\n        `};\n\n      // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData.data.updateUserAttendance));\n\n          const updatedUserId = resData.data.updateUserAttendance._id;\n          const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n          const updatedUserPos = this.state.users.indexOf(updatedUser);\n          const slicedArray = this.state.users.splice(updatedUserPos, 1);\n          console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n          this.state.users.push(resData.data.updateUserAttendance);\n          this.context.users = this.state.users;\n          const responseAlert = JSON.stringify(resData.data).slice(2,25);\n          this.setState({ userAlert: responseAlert, selectedUser: resData.data.updateUserAttendance})\n          this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n\n\n  }\n\n    updateUserAttachmentHandler = (event) => {\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n    let selectedUserId = this.context.selectedUser._id;\n    // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n    //   console.log(\"Not the creator or Admin! No edit permission!!\");\n    //   selectedUserId = null;\n    // }\n    if (userId !== selectedUserId && this.context.user.role !== \"admin\" ) {\n      console.log(\"Not the creator or Admin! No edit permission!!\");\n      this.setState({userAlert: \"Not the creator or Admin! No edit permission!!\"})\n        selectedUserId = null;\n    }\n\n    console.log(\"UpdateUserAttachmentFormData:  \");\n\n    this.setState({ updating: false , userUpdateField: null });\n\n    // let attachmentName = event.target.formGridAttachmentName.value;\n    let attachmentFormat = event.target.formGridAttachmentFormat.value;\n    let attachmentPath = event.target.formGridAttachmentPath.value;\n    let file = AuthContext._currentValue.file;\n\n    console.log(`\n      uploading to s3...\n      file.name: ${file.name},\n      AuthContext._currentValue.file: ${AuthContext._currentValue.file},\n      `);\n    const config = {\n      bucketName: 'ent-emr-bucket',\n      dirName: attachmentPath,\n      region: 'us-east-2',\n      accessKeyId: \"AKIARFTS6Q6DALQKT4QR\",\n      secretAccessKey: \"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\",\n    }\n    const ReactS3Client = new S3(config);\n    const newFileName = file.name;\n    const attachmentName = newFileName;\n\n    ReactS3Client\n        .uploadFile(file, newFileName)\n        .then(data => {console.log(data);this.setState({userAlert: \"attachment upload success!\"});})\n        .catch(err => {console.error(err);this.setState({userAlert: \"upload error:  \"+err});})\n\n    if (\n      attachmentName.trim().length === 0 ||\n      attachmentFormat.trim().length === 0 ||\n      attachmentPath.trim().length === 0\n  ) {\n      console.log(\"blank fields detected!!! try again\");\n      return\n    }\n\n    const userAttachment = { attachmentName, attachmentFormat, attachmentPath }\n    console.log(`\n      adding user attachment item...\n      userId: ${userId},\n      selectedUserId: ${selectedUserId}\n      attachmentName: ${attachmentName},\n      attachmentFormat: ${attachmentFormat},\n      attachmentPath: ${attachmentPath},\n      `);\n      this.setState({userAlert: \"adding user attatchment item...\"})\n\n      const requestBody = {\n        query:`\n          mutation{updateUserAttachment(userId:\\\"${userId}\\\",selectedUserId:\\\"${selectedUserId}\\\",userInput:{attachmentName:\\\"${attachmentName}\\\",attachmentFormat:\\\"${attachmentFormat}\\\",attachmentPath:\\\"${attachmentPath}\\\"})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `};\n\n        // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData.data.updateUserAttachment));\n\n          const updatedUserId = resData.data.updateUserAttachment._id;\n          const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n          const updatedUserPos = this.state.users.indexOf(updatedUser);\n          const slicedArray = this.state.users.splice(updatedUserPos, 1);\n          console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n          this.state.users.push(resData.data.updateUserAttachment);\n          this.context.users = this.state.users;\n          const responseAlert = JSON.stringify(resData.data).slice(2,25);\n          this.setState({ userAlert: responseAlert, selectedUser: resData.data.updateUserAttachment})\n          this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n\n\n  }\n\n\n  updateUserLeaveHandler = (event) => {\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n    let selectedUserId = this.context.selectedUser._id;\n    // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n    //   console.log(\"Not the creator or Admin! No edit permission!!\");\n    //   selectedUserId = null;\n    // }\n    if (userId !== selectedUserId && this.context.user.role !== \"admin\" ) {\n      console.log(\"Not the creator or Admin! No edit permission!!\");\n      this.setState({userAlert: \"Not the creator or Admin! No edit permission!!\"})\n        selectedUserId = null;\n    }\n\n    console.log(\"UpdateUserLeaveFormData:  \", event.target.formGridLeaveType.value);\n\n    this.setState({ updating: false , userUpdateField: null });\n\n    let leaveType = event.target.formGridLeaveType.value;\n    let leaveTitle = event.target.formGridLeaveTitle.value;\n    let leaveStartDate = event.target.formGridLeaveStartDate.value;\n    let leaveEndDate = event.target.formGridLeaveEndDate.value;\n\n    if (\n      leaveType.trim().length === 0 ||\n      leaveTitle.trim().length === 0 ||\n      leaveStartDate.trim().length === 0 ||\n      leaveEndDate.trim().length === 0\n    ) {\n      console.log(\"blank fields detected!!!...try again\");\n      this.setState({userAlert: \"blank fields detected!!!...try again\"});\n      return\n    }\n\n    const userLeave = { leaveType, leaveTitle, leaveStartDate, leaveEndDate }\n    console.log(`\n      adding user leave item...\n      userId: ${userId},\n      selectedUserId: ${selectedUserId}\n      leave: {\n        type: ${leaveType},\n        title: ${leaveTitle},\n        startDate: ${leaveStartDate},\n        endDate: ${leaveEndDate}\n      }\n      `);\n      this.setState({userAlert: \"adding user leave item...\"})\n\n      const requestBody = {\n        query:`\n          mutation{updateUserLeave(userId:\\\"${userId}\\\",selectedUserId:\\\"${selectedUserId}\\\",userInput:{leaveType:\\\"${leaveType}\\\",leaveTitle:\\\"${leaveTitle}\\\",leaveStartDate:\\\"${leaveStartDate}\\\",leaveEndDate:\\\"${leaveEndDate}\\\"})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `};\n\n        // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData.data));\n\n          const updatedUserId = resData.data.updateUserLeave._id;\n          const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n          const updatedUserPos = this.state.users.indexOf(updatedUser);\n          const slicedArray = this.state.users.splice(updatedUserPos, 1);\n          console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n          this.state.users.push(resData.data.updateUserLeave);\n          this.context.users = this.state.users;\n          const responseAlert = JSON.stringify(resData.data).slice(2,25);\n          this.setState({ userAlert: responseAlert, selectedUser: resData.data.updateUserLeave})\n          this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n\n  }\n\n\n  modalConfirmSearchHandler = (event) => {\n    console.log(\"SearchUserForm:  \");\n\n\n    let userId = this.context.userId;\n\n      console.log(\"SearchUserFormData:  \", event.target.formBasicField.value);\n      this.setState({ searching: false });\n\n      let field = null;\n      let query = event.target.formBasicQuery.value;\n      if (event.target.formBasicFieldSelect.value === \"select\") {\n        field = event.target.formBasicField.value;\n      } else {\n        field = event.target.formBasicFieldSelect.value;\n      }\n\n      this.setState({\n        userSearchField: field,\n        userSearchQuery: query,\n      })\n\n      if (\n        field.trim().length === 0 ||\n        query.trim().length === 0\n      ) {\n        console.log(\"blank fields detected!!!...Please try again...\");\n        this.setState({userAlert: \"blank fields detected!!!...Please try again...\"})\n        return;\n      }\n\n      const search = { field, query }\n      console.log(\"Searching for User:  \", JSON.stringify(search));\n      this.setState({userAlert: \"Searching for User...\"})\n\n      const requestBody = {\n        query: `\n          query {getUserField(userId:\"${userId}\",field:\"${field}\",query:\"${query}\")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `}\n\n      const token = this.context.token;\n\n      // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData));\n\n          const responseAlert = JSON.stringify(resData.data).slice(0,8);\n          this.setState({userAlert: responseAlert});\n\n          const searchUsers = resData.data.getUserField;\n\n          this.setState({ searchUsers: searchUsers})\n          console.log(\"state.searchUsers:  \", this.state.searchUsers);\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({userAlert: err});\n        });\n  }\n\n  modalConfirmSearchIdHandler = (event) => {\n\n    let userId = this.context.userId;\n    this.setState({ searching: false });\n\n    console.log(\"SearchUserIdFormData:\", event.target.formBasicId.value);\n    let selectedUserId = event.target.formBasicId.value;\n\n    const requestBody = {\n      query: `\n        query {getUserId(userId:\"${userId}\",selectedUserId:\"${selectedUserId}\")\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `}\n\n    const token = this.context.token;\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n\n        const responseAlert = JSON.stringify(resData.data).slice(2,25);\n        this.setState({userAlert: responseAlert});\n\n        const searchUsers = resData.data.getUserId;\n\n        this.setState({ searchUsers: [searchUsers] });\n        console.log(\"state.searchUsers:  \", this.state.searchUsers);\n        // this.fetchUsers();\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n      });\n\n  }\n  modalConfirmSearchAttendanceDateHandler = (event) => {\n\n    let userId = this.context.userId;\n    this.setState({ searching: false });\n\n    console.log(\"SearchUserAttendanceDateFormData:\");\n\n    const attendanceDate = event.target.formBasicDate.value;\n\n    const requestBody = {\n      query: `\n        query {getUserAttendanceDate(userId:\"${userId}\",attendanceDate:\"${attendanceDate}\")\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `}\n\n    const token = this.context.token;\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert});\n\n        const searchUsers = resData.data.getUserAttendanceDate;\n\n        this.setState({ searchUsers: searchUsers})\n        console.log(\"state.searchUsers:  \", this.state.searchUsers);\n        // this.fetchUsers();\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n      });\n\n  }\n  modalConfirmSearchLeaveDateRangeHandler = (event) => {\n\n    let userId = this.context.userId;\n    this.setState({ searching: false });\n\n    console.log(\"SearchUserLeaveDateRangeFormData:\");\n\n    const startDate = event.target.formBasicStartDate.value;\n    const endDate = event.target.formBasicEndDate.value;\n\n    const requestBody = {\n      query: `\n        query{getUserLeaveDateRange(userId:\"${userId}\",startDate:\"${startDate}\",endDate:\"${endDate}\")\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      `}\n\n    const token = this.context.token;\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert});\n\n        const searchUsers = resData.data.getUserLeaveDateRange;\n\n        this.setState({ searchUsers: searchUsers})\n        console.log(\"state.searchUsers:  \", this.state.searchUsers);\n        // this.fetchUsers();\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n      });\n\n  }\n\n  modalConfirmSearchNameHandler = (event) => {\n    console.log(\"SearchUserNameFormData:\", event.target.formBasicName.value);\n\n    let userId = this.context.userId;\n    this.setState({ searching: false });\n\n    let users = this.state.users;\n    const regex = new RegExp(event.target.formBasicName.value,\"i\");\n    console.log(`\n      regex: ${regex},\n      `);\n      let result = users.filter(user => user.name.match(regex))\n      console.log(`\n        result: ${JSON.stringify(result)}\n        `);\n\n        this.setState({ searchUsers: result})\n\n  }\n\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, updating: false, deleting: false, searching: false});\n  };\n\n  fetchUsers() {\n    console.log(\"fetch users:\");\n    // console.log(\"'fetch users function' context object... \" + JSON.stringify(this.context));\n    const userId = this.context.userId;\n\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query {users (userId:\"${userId}\")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `};\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.context.userAlert = 'Failed!';\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert});\n\n        const users = resData.data.users;\n        console.log(\"resData:  \", resData);\n        console.log(users);\n\n        if (this.isActive) {\n          this.setState({ users: users, isLoading: false });\n        }\n        this.context.users = this.state.users;\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  fetchUsersAsc = () => {\n    console.log(\"'fetch usersAsc function' context object... \" + JSON.stringify(this.context));\n    const userId = this.context.userId;\n\n    // this.setState({ isSorting: true });\n    const requestBody = {\n      query: `\n          query {usersNameAsc (userId:\"${userId}\")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `};\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.context.userAlert = 'Failed!';\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const users = resData.data.usersNameAsc;\n        console.log(\"resData:  \", resData);\n        console.log(users);\n\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert});\n\n        this.setState({users: users});\n        // if (this.isActive) {\n        //   this.setState({ users: users, isLoading: false });\n        // }\n        this.context.users = this.state.users;\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n        // if (this.isActive) {\n        //   this.setState({ isLoading: false });\n        // }\n      });\n  }\n  fetchUsersDesc = () => {\n    console.log(\"'fetch usersDesc function' context object... \" + JSON.stringify(this.context));\n    const userId = this.context.userId;\n\n    // this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query {usersNameDesc (userId:\"${userId}\")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `};\n\n    // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.context.userAlert = 'Failed!';\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const users = resData.data.usersNameDesc;\n        console.log(\"resData:  \", resData);\n        console.log(users);\n\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert});\n\n        // if (this.isActive) {\n        //   this.setState({ users: users, isLoading: false });\n        // }\n        this.setState({users: users});\n        this.context.users = this.state.users;\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n        // if (this.isActive) {\n        //   this.setState({ isLoading: false });\n        // }\n      });\n  }\n\nmodalDeleteHandler = () => {\n  console.log(\"deleting user...selectedUser:  \", this.context.selectedUser);\n\n  const userId = this.context.userId;\n  const selectedUserId = this.context.selectedUser._id;\n\n  if(this.context.user.role !== 'admin') {\n    console.log(\"Not the Admin! No edit permission!!\");\n    this.setState({userAlert: \"Not the Admin! No edit permission!!\"})\n  }\n\n  this.setState({deleting: true, userAlert: \"deleting user..\"});\n\n  const requestBody = {\n    query: `\n        mutation {\n          deleteUser(userId: ${userId}, selectedUserId: ${selectedUserId})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n        }\n      `};\n\n  // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n  fetch('http://localhost:10000/graphql', {\n    method: 'POST',\n    body: JSON.stringify(requestBody),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.context.token\n    }\n  })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n\n      const responseAlert = JSON.stringify(resData.data).slice(0,8);\n      this.setState({userAlert: responseAlert});\n\n      let deletedUser = resData.data.deleteUser;\n      console.log(deletedUser);\n\n      let deletedUserId = deletedUser._id;\n      deletedUser = this.state.users.find(e => e._id === deletedUserId);\n      const deletedUserPos = this.state.users.indexOf(deletedUser);\n      const slicedArray = this.state.users.splice(deletedUserPos, 1);\n      console.log(\"deletedUser:  \", JSON.stringify(deletedUser),\"  deletedUserPos:  \", deletedUserPos, \"  slicedArray:  \", slicedArray);\n\n      this.setState({ deleting: false, selectedUser: null });\n      this.context.selectedUser = null;\n\n      this.fetchUsers();\n\n    })\n    .catch(err => {\n      console.log(err);\n      this.setState({userAlert: err});\n      if (this.isActive) {\n        this.setState({ deleting: false });\n      }\n    });\n\n}\n\ndeleteUserAttendanceItem = (props) => {\n\n  let token = this.context.token;\n  let userId = this.context.userId;\n  let selectedUserId = this.state.selectedUser._id;\n  let date = new Date(props.date.substr(0,10)*1000).toISOString().slice(0,10);\n\n  console.log(`\n    delete user Attendance item:\n    props: ${JSON.stringify(props)},\n    token: ${token},\n    userId: ${userId},\n    selectedUserId: ${selectedUserId},\n    attandance date: ${date},\n    `);\n\n    const requestBody = {\n      query: `\n       mutation{deleteUserAttendance(userId:\\\"${userId}\\\",selectedUserId:\\\"${selectedUserId}\\\",attendanceDate:\\\"${date}\\\")\n       {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n    `};\n\n        // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n        fetch('http://localhost:10000/graphql', {\n          method: 'POST',\n          body: JSON.stringify(requestBody),\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + token\n          }\n        })\n          .then(res => {\n            if (res.status !== 200 && res.status !== 201) {\n              throw new Error('Failed!');\n            }\n            return res.json();\n          })\n          .then(resData => {\n            let deletedUser = resData.data.deleteUserAttendance;\n            console.log(\"resData.data:  \",resData.data.deleteUserAttendance);\n\n            const updatedUserId = resData.data.deleteUserAttendance._id;\n            const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n            const updatedUserPos = this.state.users.indexOf(updatedUser);\n            const slicedArray = this.state.users.splice(updatedUserPos, 1);\n            console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n            this.state.users.push(resData.data.deleteUserAttendance);\n            this.context.users = this.state.users;\n            const responseAlert = JSON.stringify(resData.data).slice(2,25);\n            this.setState({ userAlert: responseAlert})\n            // this.setState({ userAlert: responseAlert, selectedUser: resData.data.deleteUserAttendance})\n            this.fetchUsers();\n\n          })\n          .catch(err => {\n            console.log(err);\n          });\n}\n\ndeleteUserLeaveItem = (props) => {\n\n  let token = this.context.token;\n  let userId = this.context.userId;\n  let selectedUserId = this.state.selectedUser._id;\n\n  console.log(`\n    delete user Leave item:\n    props: ${JSON.stringify(props)},\n    token: ${token},\n    userId: ${userId},\n    selectedUserId: ${selectedUserId},\n    `);\n\n    const requestBody = {\n      query: `\n       mutation{deleteUserLeave(userId:\\\"${userId}\\\",selectedUserId:\\\"${selectedUserId}\\\",leaveTitle:\\\"${props.title}\\\")\n       {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n    `};\n\n        // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n        fetch('http://localhost:10000/graphql', {\n          method: 'POST',\n          body: JSON.stringify(requestBody),\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + token\n          }\n        })\n          .then(res => {\n            if (res.status !== 200 && res.status !== 201) {\n              throw new Error('Failed!');\n            }\n            return res.json();\n          })\n          .then(resData => {\n            let deletedUser = resData.data.deleteUserLeave;\n            console.log(deletedUser);\n\n            const updatedUserId = resData.data.deleteUserLeave._id;\n            const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n            const updatedUserPos = this.state.users.indexOf(updatedUser);\n            const slicedArray = this.state.users.splice(updatedUserPos, 1);\n            console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n            this.state.users.push(resData.data.deleteUserLeave);\n            this.context.users = this.state.users;\n            const responseAlert = JSON.stringify(resData.data).slice(2,25);\n            this.setState({ userAlert: responseAlert})\n            // this.setState({ userAlert: responseAlert, selectedUser: resData.data.deleteUserLeave})\n            this.fetchUsers();\n\n          })\n          .catch(err => {\n            console.log(err);\n          });\n}\n\ndeleteUserAttachmentItem = (props) => {\n\n  let token = this.context.token;\n  let userId = this.context.userId;\n  let selectedUserId = this.state.selectedUser._id;\n\n  console.log(`\n    delete user Attachment item:\n    props: ${JSON.stringify(props)},\n    token: ${token},\n    userId: ${userId},\n    selectedUserId: ${selectedUserId},\n    `);\n\n\n    // let file = AuthContext._currentValue.file;\n    //\n    // console.log(`\n    //   uploading to s3...\n    //   file.name: ${file.name},\n    //   AuthContext._currentValue.file: ${AuthContext._currentValue.file},\n    //   `);\n    // const config = {\n    //   bucketName: 'ent-emr-bucket',\n    //   dirName: attachmentPath,\n    //   region: 'us-east-2',\n    //   accessKeyId: \"AKIARFTS6Q6DALQKT4QR\",\n    //   secretAccessKey: \"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\",\n    // }\n    // const ReactS3Client = new S3(config);\n    // const newFileName = file.name;\n    // const attachmentName = newFileName;\n    //\n    // ReactS3Client\n    //     .uploadFile(file, newFileName)\n    //     .then(data => {console.log(data);this.setState({userAlert: \"attachment upload success!\"});})\n    //     .catch(err => {console.error(err);this.setState({userAlert: \"upload error:  \"+err});})\n\n\n    const requestBody = {\n      query: `\n       mutation{deleteUserAttachment(userId:\\\"${userId}\\\",selectedUserId:\\\"${selectedUserId}\\\",attachmentName:\\\"${props.name}\\\")\n       {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n    `};\n\n        // fetch('http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql', {\n        fetch('http://localhost:10000/graphql', {\n          method: 'POST',\n          body: JSON.stringify(requestBody),\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + token\n          }\n        })\n          .then(res => {\n            if (res.status !== 200 && res.status !== 201) {\n              throw new Error('Failed!');\n            }\n            return res.json();\n          })\n          .then(resData => {\n            let deletedUser = resData.data.deleteUserAttachment;\n            console.log(deletedUser);\n\n            const updatedUserId = resData.data.deleteUserAttachment._id;\n            const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n            const updatedUserPos = this.state.users.indexOf(updatedUser);\n            const slicedArray = this.state.users.splice(updatedUserPos, 1);\n            console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n            this.state.users.push(resData.data.deleteUserAttachment);\n            this.context.users = this.state.users;\n            const responseAlert = JSON.stringify(resData.data).slice(2,25);\n            this.setState({ userAlert: responseAlert})\n            // this.setState({ userAlert: responseAlert, selectedUser: resData.data.deleteUserAttachment})\n            this.fetchUsers();\n\n          })\n          .catch(err => {\n            console.log(err);\n          });\n}\n\n\n\nupdateUserSpecial (event) {\n\n  console.log(\"special field to update:  \", event.target.value);\n  const field = event.target.value;\n  this.setState({ userUpdateField: field});\n\n}\n\n  showDetailHandler = userId => {\n\n    this.setState(prevState => {\n      const selectedUser = prevState.users.find(e => e._id === userId);\n      this.context.selectedUser = selectedUser;\n      this.setState({selectedUser: selectedUser});\n      console.log(\"User selected  :  \", selectedUser);\n      return { selectedUser: selectedUser };\n    });\n  };\n\n  onViewAttachment = (attachment) => {\n    console.log(`\n      setting up attachment viewer...\n      attachment: ${JSON.stringify(attachment)}\n      `);\n      this.setState({showAttachment: true})\n\n      const file = \"https://ent-emr-bucket.s3-us-east-2.amazonaws.com/\"+attachment.path+\"/\"+attachment.name;\n      const type = attachment.format;\n\n      this.setState({showThisAttachmentFile: file, showThisAttachmentType: type})\n  }\n\n  closeAttachmentView = () => {\n    console.log(`\n      closing attachment viewer...\n      `);\n      this.setState({showAttachment: false})\n  }\n\n  userSearchClearlHandler () {\n    console.log(\"clearing user search results\");\n    this.setState({searchUsers: [], userAlert: \"clearing user search results\"});\n  }\n\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n\n    <React.Fragment>\n    {this.state.showAttachment === true && (\n      <AttachmentViewer\n        onCloseAttachmentView={this.closeAttachmentView}\n        attachmentFile={this.state.showThisAttachmentFile}\n        attachmentType={this.state.showThisAttachmentType}\n      />\n    )}\n\n    <Accordion>\n\n    <Row>\n\n    <Col md={3} className=\"MasterCol1\">\n\n    <AlertBox\n      authUserId={this.context.userId}\n      alert={this.state.userAlert}\n    />\n\n    <SidebarPage/>\n\n    </Col>\n\n    <Col md={9} className=\"MasterCol2\">\n\n        <Container className=\"containerCombinedDetail\">\n          <Tabs defaultActiveKey=\"userDetail\" id=\"uncontrolled-tab-example\">\n          <Tab eventKey=\"Edit\" title=\"Edit:\" disabled>\n          </Tab>\n            <Tab eventKey=\"userDetail\" title=\"Details\">\n                  {this.state.selectedUser === null && (\n                    <Button variant=\"outline-warning\" size=\"lg\">\n                      Select a Staff member from the Master List below\n                    </Button>\n                  )}\n                  {this.state.isLoading === false &&\n                    this.state.selectedUser !== null\n                    && (\n                      <UserDetail\n                      authUserId={this.context.userId}\n                      AuthContext={this.context}\n                      user={this.state.selectedUser}\n                      onEdit={this.startUpdateUserHandler}\n                      canDelete={this.state.canDelete}\n                      onDelete={this.modalDeleteHandler}\n                      attendanceDelete={this.deleteUserAttendanceItem}\n                      leaveDelete={this.deleteUserLeaveItem}\n                      attachmentDelete={this.deleteUserAttachmentItem}\n                      onViewAttachment={this.onViewAttachment}\n                      />\n                    )}\n            </Tab>\n\n            { this.context.user.role === \"admin\" && (\n              <Tab eventKey=\"userCreate\" title=\"New\">\n              <Button variant=\"outline-primary\" onClick={this.startCreateUserHandler} >Create</Button>\n              {this.state.creating && (\n                <CreateUserForm\n                  authUserId={this.context.userId}\n                  canCancel\n                  canConfirm\n                  onCancel={this.modalCancelHandler}\n                  onConfirm={this.modalConfirmHandler}\n                  onSubmit={this.modalConfirmHandler}\n                  confirmText=\"Confirm\"\n                />\n              )}\n              </Tab>\n            )}\n\n            <Tab eventKey=\"userEditDemographics\" title=\"Demographics\">\n            {this.state.selectedUser === null && (\n              <Button variant=\"outline-warning\" size=\"lg\">\n                Select a Staff member from the Master List below\n              </Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.context.user.role === \"admin\"\n              && (\n              <Button variant=\"outline-primary\" onClick={this.startUpdateUserHandler}>Edit Demographics as Admin</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id\n              && (\n              <Button variant=\"outline-primary\" onClick={this.startUpdateUserHandler}>Edit Demographics (your profile)</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Your Profile\n              </Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id !== this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Not my profile\n              </Button>\n            )}\n            {this.state.updating &&\n              this.state.selectedUser !== null\n              && (\n              <UpdateUserForm\n                authUserId={this.context.userId}\n                canCancel\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.modalConfirmUpdateHandler}\n                confirmText=\"Confirm\"\n                user={this.context.selectedUser}\n              />\n            )}\n\n            </Tab>\n\n            <Tab eventKey=\"userEditField\" title=\"Single Field\">\n            {this.state.selectedUser === null && (\n              <Button variant=\"outline-warning\" size=\"lg\">\n                Select a Staff member from the Master List below\n              </Button>\n            )}\n\n            {this.state.selectedUser !== null &&\n              this.context.user.role === \"admin\"\n              && (\n              <Button variant=\"outline-primary\" onClick={this.startUpdateUserHandler}>Edit Field as Admin</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id\n              && (\n              <Button variant=\"outline-primary\" onClick={this.startUpdateUserHandler}>Edit Field (your profile)</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Your Profile\n              </Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id !== this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Not my profile\n              </Button>\n            )}\n            {this.state.updating &&\n              this.state.selectedUser !== null\n              && (\n                <UpdateUserFieldForm\n                  authUserId={this.context.userId}\n                  canCancel\n                  canConfirm\n                  onCancel={this.modalCancelHandler}\n                  onConfirm={this.modalConfirmUpdateFieldHandler}\n                  confirmText=\"Confirm\"\n                  user={this.state.selectedUser}\n                />\n            )}\n            </Tab>\n\n            <Tab eventKey=\"userEditAttendance\" title=\"Attendance\">\n            {this.state.selectedUser === null && (\n              <Button variant=\"outline-warning\" size=\"lg\">\n                Select a Staff member from the Master List below\n              </Button>\n            )}\n\n            {this.state.selectedUser !== null &&\n              this.context.user.role === \"admin\"\n              && (\n              <Button variant=\"outline-primary\" value='attendance' onClick={this.updateUserSpecial.bind(this)}>Add Attendance as Admin</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id\n              && (\n              <Button variant=\"outline-primary\" value='attendance' onClick={this.updateUserSpecial.bind(this)}>Add Attendance (your profile)</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Your Profile\n              </Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id !== this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Not my profile\n              </Button>\n            )}\n\n            {this.state.userUpdateField === 'attendance' &&\n            this.state.selectedUser !== null\n             && (\n               <UpdateUserAttendanceForm\n              authUserId={this.context.userId}\n              canCancel\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.updateUserAttendanceHandler}\n                confirmText=\"Confirm\"\n                user={this.state.selectedUser}\n              />\n            )}\n            </Tab>\n\n            <Tab eventKey=\"userEditLeave\" title=\"Leave\">\n            {this.state.selectedUser === null && (\n              <Button variant=\"outline-warning\" size=\"lg\">\n                Select a Staff member from the Master List below\n              </Button>\n            )}\n\n            {this.state.selectedUser !== null &&\n              this.context.user.role === \"admin\"\n              && (\n              <Button variant=\"outline-primary\" value='leave' onClick={this.updateUserSpecial.bind(this)}>Add Leave as Admin</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id\n              && (\n              <Button variant=\"outline-primary\" value='leave' onClick={this.updateUserSpecial.bind(this)}>Add Leave (your profile)</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Your Profile\n              </Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id !== this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Not my profile\n              </Button>\n            )}\n\n            {this.state.userUpdateField === 'leave' &&\n            this.state.selectedUser !== null\n            && (<UpdateUserLeaveForm\n              authUserId={this.context.userId}\n              canCancel\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.updateUserLeaveHandler}\n                confirmText=\"Confirm\"\n                user={this.state.selectedUser}\n              />)}\n            </Tab>\n            <Tab eventKey=\"userEditAttachment\" title=\"Attachment\">\n            {this.state.selectedUser === null && (\n              <Button variant=\"outline-warning\" size=\"lg\">\n                Select a Staff member from the Master List below\n              </Button>\n            )}\n\n            {this.state.selectedUser !== null &&\n              this.context.user.role === \"admin\"\n              && (\n              <Button variant=\"outline-primary\" value='attachments' onClick={this.updateUserSpecial.bind(this)}>Add Attachment as Admin</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id\n              && (\n              <Button variant=\"outline-primary\" value='attachments' onClick={this.updateUserSpecial.bind(this)}>Add Attachment (your profile)</Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id === this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Your Profile\n              </Button>\n            )}\n            {this.state.selectedUser !== null &&\n              this.state.selectedUser._id !== this.context.user._id && (\n              <Button variant=\"outline-danger\" size=\"lg\">\n                Not my profile\n              </Button>\n            )}\n\n            {this.state.userUpdateField === 'attachments' &&\n            this.state.selectedUser !== null\n            && (<UpdateUserAttachmentForm\n              authUserId={this.context.userId}\n              canCancel\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.updateUserAttachmentHandler}\n                confirmText=\"Confirm\"\n                user={this.state.selectedUser}\n              />)}\n            </Tab>\n\n\n            <Tab eventKey=\"MasterList\" title=\"Master List\">\n            <Container className=\"containerUserMasterList\">\n            <Row className=\"searchListRow\">\n            <Button variant=\"primary\" size=\"sm\" onClick={this.fetchUsersAsc}>\n               Sort Asc\n             </Button>\n            <Button variant=\"info\" size=\"sm\" onClick={this.fetchUsersDesc}>\n               Sort Desc\n             </Button>\n             {this.state.isLoading ? (\n               <Spinner />\n             ) : (\n               <UserList\n                 users={this.state.users}\n                 authUserId={this.context.userId}\n                 onViewDetail={this.showDetailHandler}\n               />\n             )}\n            </Row>\n            </Container>\n\n            </Tab>\n\n            <Tab eventKey=\"SearchInput\" title=\"Search\">\n            <Container className=\"containerSearchUserInput\">\n\n            <Row className=\"searchUserRowAdd\">\n            <Button variant=\"primary\" onClick={this.startSearchUserHandler}>Search</Button>\n            </Row>\n\n            <Row className=\"searchUserRowForm\">\n            <Col md={10} className=\"searchUserColForm\">\n            <Tabs defaultActiveKey=\"Field\" id=\"uncontrolled-tab-example\">\n            <Tab eventKey=\"Search\" title=\"Search:\" disabled>\n            </Tab>\n            <Tab eventKey=\"Field\" title=\"Field:\">\n            {this.state.searching === true && (\n              <SearchUserForm\n              authUserId={this.context.userId}\n              canCancel\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.modalConfirmSearchHandler}\n                confirmText=\"Search\"\n                user={this.context.selectedUser}\n              />)}\n            </Tab>\n            <Tab eventKey=\"Id\" title=\"Id:\">\n            {this.state.searching === true && (\n              <SearchUserIdForm\n              authUserId={this.context.userId}\n              canCancel\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.modalConfirmSearchIdHandler}\n                confirmText=\"Search\"\n                user={this.context.selectedUser}\n              />\n              )}\n            </Tab>\n            <Tab eventKey=\"Attendance\" title=\"Attendance:\">\n            {this.state.searching === true && (\n              <SearchUserAttendanceDateForm\n              authUserId={this.context.userId}\n              canCancel\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.modalConfirmSearchAttendanceDateHandler}\n                confirmText=\"Search\"\n                user={this.context.selectedUser}\n              />\n              )}\n            </Tab>\n            <Tab eventKey=\"Leave\" title=\"Leave:\">\n            {this.state.searching === true && (\n              <SearchUserLeaveDateRangeForm\n              authUserId={this.context.userId}\n              canCancel\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.modalConfirmSearchLeaveDateRangeHandler}\n                confirmText=\"Search\"\n                user={this.context.selectedUser}\n              />\n              )}\n            </Tab>\n            <Tab eventKey=\"Name\" title=\"Name:\">\n            {this.state.searching === true && (\n              <SearchUserNameForm\n              authUserId={this.context.userId}\n              canCancel\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.modalConfirmSearchNameHandler}\n                confirmText=\"Search\"\n                user={this.context.selectedUser}\n              />\n            )}\n            </Tab>\n            </Tabs>\n            </Col>\n            <Col md={10}>\n            </Col>\n            </Row>\n\n            </Container>\n            </Tab>\n\n            <Tab eventKey=\"SearchResult\" title=\"Search Results\">\n            <Container className=\"containerSearchUserResults\">\n            <Row>\n              <Card className=\"searchCard\">\n                <Card.Body className=\"searchCardBody\">\n                  <Card.Title>Your Search</Card.Title>\n                  <Card.Text>\n                    Field: {this.state.userSearchField}\n                  </Card.Text>\n                  <Card.Text>\n                    Query: {this.state.userSearchQuery}\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Row>\n            <Row className=\"searchListRow\">\n            {this.state.searchUsers !== [] && (\n              <SearchUserList\n                searchUsers={this.state.searchUsers}\n                authUserId={this.context.userId}\n                onViewDetail={this.showDetailHandler}\n              />\n            )}\n            </Row>\n            </Container>\n            </Tab>\n          </Tabs>\n        </Container>\n\n    </Col>\n\n  </Row>\n\n</Accordion>\n</React.Fragment>\n    );\n  }\n}\n\nexport default UsersPage;\n"]},"metadata":{},"sourceType":"module"}