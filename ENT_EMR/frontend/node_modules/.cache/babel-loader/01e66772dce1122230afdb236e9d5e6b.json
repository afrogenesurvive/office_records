{"ast":null,"code":"var _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/Auth.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport './Auth.css';\nimport AuthContext from '../context/auth-context';\nimport AlertBox from '../components/AlertBox';\n\nclass AuthPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userAlert: null\n    };\n\n    this.submitHandler = event => {\n      console.log(\"login function...\");\n      event.preventDefault();\n      const email = event.target.formBasicEmail.value;\n      const password = event.target.formBasicPassword.value;\n\n      if (email.trim().length === 0 || password.trim().length === 0) {\n        return;\n      }\n\n      let requestBody = {\n        query: `\n        query {\n          login(email: \"${email}\", password: \"${password}\") {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      `\n      };\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          // this.context.userAlert = 'Failed!';\n          throw new Error('Failed!');\n        } // this.context.userAlert = 'Failed!';\n\n\n        return res.json();\n      }).then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0, 8);\n        console.log(`\n          resData slice: ${responseAlert},\n          resData: ${JSON.stringify(resData.data)},\n          `);\n        this.setState({\n          userAlert: responseAlert\n        });\n\n        if (resData.data.login.token) {\n          this.context.login(resData.data.login.token, resData.data.login.userId, resData.data.login.tokenExpiration); // const sessionStorageLoginInfo = {\n          //   token: resData.data.login.token,\n          //   userId: resData.data.login.userId,\n          //   tokenExpiration: resData.data.login.tokenExpiration\n          // };\n          // sessionStorage.setItem('login info', sessionStorageLoginInfo);\n          // sessionStorage.setItem('login info', JSON.stringify(sessionStorageLoginInfo));\n        }\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          userAlert: err\n        }); // this.context.userAlert = err;\n        // console.log(`\n        //   err: ${this.context.userAlert}\n        //   `);\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(AlertBox, {\n      authUserId: this.context.userId,\n      alert: this.state.userAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Form, {\n      className: \"auth-form\",\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"We'll never share your email with anyone else.\")), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"outline-success\",\n      type: \"submit\",\n      className: \"loginButton\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Button, {\n      variant: \"outline-warning\",\n      className: \"loginButton\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Signup\"))));\n  }\n\n}\n\nAuthPage.contextType = AuthContext;\nexport default AuthPage;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/Auth.js"],"names":["React","Component","Button","NavLink","Form","Row","AuthContext","AlertBox","AuthPage","state","userAlert","submitHandler","event","console","log","preventDefault","email","target","formBasicEmail","value","password","formBasicPassword","trim","length","requestBody","query","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","responseAlert","data","slice","setState","login","token","context","userId","tokenExpiration","catch","err","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\n\n\nimport './Auth.css';\nimport AuthContext from '../context/auth-context';\nimport AlertBox from '../components/AlertBox';\n\n\nclass AuthPage extends Component {\n  state = {\n    userAlert: null,\n  };\n  static contextType = AuthContext;\n\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  // switchModeHandler = () => {\n  //   this.setState(prevState => {\n  //     return { isLogin: !prevState.isLogin };\n  //   });\n  // };\n\n\n  submitHandler = event => {\n    console.log(\"login function...\");\n    event.preventDefault();\n    const email = event.target.formBasicEmail.value;\n    const password = event.target.formBasicPassword.value;\n\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      return;\n    }\n\n    let requestBody = {\n      query: `\n        query {\n          login(email: \"${email}\", password: \"${password}\") {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      `};\n\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          // this.context.userAlert = 'Failed!';\n          throw new Error('Failed!');\n        }\n        // this.context.userAlert = 'Failed!';\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8)\n        console.log(`\n          resData slice: ${responseAlert},\n          resData: ${JSON.stringify(resData.data)},\n          `);\n\n          this.setState({userAlert: responseAlert})\n        if (resData.data.login.token) {\n          this.context.login(\n            resData.data.login.token,\n            resData.data.login.userId,\n            resData.data.login.tokenExpiration\n          );\n\n          // const sessionStorageLoginInfo = {\n          //   token: resData.data.login.token,\n          //   userId: resData.data.login.userId,\n          //   tokenExpiration: resData.data.login.tokenExpiration\n          // };\n\n          // sessionStorage.setItem('login info', sessionStorageLoginInfo);\n          // sessionStorage.setItem('login info', JSON.stringify(sessionStorageLoginInfo));\n\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({userAlert: err});\n        // this.context.userAlert = err;\n        // console.log(`\n        //   err: ${this.context.userAlert}\n        //   `);\n      });\n  };\n\n  render() {\n    return (\n      <Row>\n      <AlertBox\n        authUserId={this.context.userId}\n        alert={this.state.userAlert}\n      />\n\n\n      <Form className=\"auth-form\" onSubmit={this.submitHandler}>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n        <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\" />\n      </Form.Group>\n      <Button variant=\"outline-success\" type=\"submit\" className=\"loginButton\" size=\"lg\">\n        Login\n      </Button>\n\n      <Button variant=\"outline-warning\" className=\"loginButton\" size=\"lg\">\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </Button>\n    </Form>\n\n      </Row>\n\n\n    );\n  }\n}\n\nexport default AuthPage;\n"]},"metadata":{},"sourceType":"module"}