{"ast":null,"code":"var _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/thisUser.js\";\nimport React, { Component } from 'react';\nimport UpdateUserForm from '../components/Forms/UpdateUserForm';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\nimport SidebarPage from './Sidebar';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport UpdateUserAttendanceForm from '../components/Forms/UpdateUserAttendanceForm';\nimport UpdateUserAttachmentForm from '../components/Forms/UpdateUserAttachmentForm';\nimport UpdateUserLeaveForm from '../components/Forms/UpdateUserLeaveForm';\nimport ThisUserProfile from '../components/Users/thisUserProfile';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport './Users.css';\n\nclass ThisUserPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null,\n      users: [],\n      updating: false,\n      isLoading: false,\n      userUpdateField: null\n    };\n    this.isActive = true;\n\n    this.startUpdateUserHandler = () => {\n      this.setState({\n        updating: true\n      });\n      console.log(\"UpdateUserForm...\");\n    };\n\n    this.modalConfirmUpdateHandler = event => {\n      const token = this.context.token;\n      let userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id;\n\n      if (userId !== selectedUserId && this.context.user.role !== 'admin') {\n        console.log(\"Not the creator or Admin! No edit permission!!\");\n        selectedUserId = null;\n      }\n\n      console.log(\"UpdateUserFormData:  \", event.target.formGridEmail.value);\n      this.setState({\n        updating: false\n      });\n      let email = event.target.formGridEmail.value;\n      let password = event.target.formGridPassword.value;\n      let name = event.target.formGridName.value;\n      let role = event.target.formGridRole.value;\n      let dob = event.target.formGridDob.value;\n      let phone = event.target.formGridPhone.value;\n      let addressNumber = event.target.formGridAddressNumber.value;\n      let addressStreet = event.target.formGridAddressStreet.value;\n      let addressTown = event.target.formGridAddressTown.value;\n      let addressParish = event.target.formGridAddressParish.value;\n      let addressPostOffice = event.target.formGridAddressPostOffice.value;\n      let employmentDate = event.target.formGridEmploymentDate.value;\n      let terminationDate = event.target.formGridTerminationDate.value;\n\n      if (email.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        email = this.state.user.email;\n      }\n\n      if (password.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        password = this.state.user.password;\n      }\n\n      if (name.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        name = this.state.user.name;\n      }\n\n      if (role.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        role = this.state.user.role;\n      }\n\n      if (dob.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        dob = this.state.user.dob;\n      }\n\n      if (phone.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        phone = this.state.user.phone;\n      }\n\n      if (addressNumber.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressNumber = this.state.user.address.number;\n      }\n\n      if (addressStreet.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressStreet = this.state.user.address.street;\n      }\n\n      if (addressTown.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressTown = this.state.user.address.town;\n      }\n\n      if (addressParish.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressParish = this.state.user.address.parish;\n      }\n\n      if (addressPostOffice.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        addressPostOffice = this.state.user.address.postOffice;\n      }\n\n      if (employmentDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        employmentDate = this.state.user.employmentDate;\n      }\n\n      if (terminationDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        terminationDate = this.state.user.terminationDate;\n      }\n\n      const user = {\n        email,\n        password,\n        name,\n        role,\n        dob,\n        phone,\n        addressNumber,\n        addressStreet,\n        addressTown,\n        addressParish,\n        addressPostOffice,\n        employmentDate,\n        terminationDate\n      };\n      console.log(\"\\n\\n      \");\n      const requestBody = {\n        query: \"\\n      mutation{\\n        updateUser(userId:\\\"\".concat(userId, \"\\\",selectedUserId:\\\"\").concat(selectedUserId, \"\\\",userInput:{\\n          email:\\\"\").concat(email, \"\\\"\\n        password:\\\"\").concat(password, \"\\\"\\n        name:\\\"\").concat(name, \"\\\"\\n        dob:\\\"\").concat(dob, \"\\\"\\n        addressNumber:\\\"\").concat(addressNumber, \"\\\"\\n        addressStreet:\\\"\").concat(addressStreet, \"\\\"\\n        addressTown:\\\"\").concat(addressTown, \"\\\"\\n        addressParish:\\\"\").concat(addressParish, \"\\\"\\n        addressPostOffice:\\\"\").concat(addressPostOffice, \"\\\"\\n        phone:\\\"\").concat(phone, \"\\\"\\n        role:\\\"\").concat(role, \"\\\"\\n        employmentDate:\\\"\").concat(employmentDate, \"\\\"\\n        terminationDate:\\\"\").concat(terminationDate, \"\\\"\\n        })\\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\\n      }\\n        \")\n      };\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const updatedUser = resData.data.updateUser;\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser));\n        this.setState({\n          user: updatedUser\n        });\n        this.state.users.push({\n          _id: resData.data.updateUser._id,\n          email: resData.data.updateUser.email,\n          name: resData.data.updateUser.name,\n          role: resData.data.updateUser.role\n        });\n        this.context.users = this.state.users; // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.updateUserAttendanceHandler = event => {\n      const token = this.context.token;\n      const userId = this.state.user._id; // let selectedUserId = this.context.selectedUser._id;\n      // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      //   console.log(\"Not the creator or Admin! No edit permission!!\");\n      //   selectedUserId = null;\n      // }\n\n      console.log(\"UpdateUserAttendanceFormData:  \", event.target.formGridAttendanceDate.value);\n      this.setState({\n        updating: false,\n        userUpdateField: null\n      });\n      let attendanceDate = event.target.formGridAttendanceDate.value;\n      let attendanceStatus = event.target.formGridAttendanceStatus.value;\n      let attendanceDescription = event.target.formGridAttendanceDescription.value;\n\n      if (attendanceDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        attendanceDate = this.context.selectedUser.attendanceDate;\n      }\n\n      if (attendanceStatus.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        attendanceStatus = this.context.selectedUser.attendanceStatus;\n      }\n\n      if (attendanceDescription.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        attendanceDescription = this.context.selectedUser.attendanceDescription;\n      }\n\n      const userAttendance = {\n        attendanceDate,\n        attendanceStatus,\n        attendanceDescription\n      };\n      console.log(\"\\n      adding user attendance item...\\n      userId: \".concat(userId, \",\\n      attendanceDate: \").concat(attendanceDate, \",\\n      attendanceStatus: \").concat(attendanceStatus, \",\\n      attendanceDescription: \").concat(attendanceDescription, \"\\n      \"));\n      const requestBody = {\n        query: \"\\n          mutation {updateUserAttendance(userId:\\\"\".concat(userId, \"\\\", selectedUserId:\\\"\").concat(userId, \"\\\",userInput:{attendanceDate:\\\"\").concat(attendanceDate, \"\\\",attendanceStatus:\\\"\").concat(attendanceStatus, \"\\\",attendanceDescription:\\\"\").concat(attendanceDescription, \"\\\"})\\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\\n        \")\n      };\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data.updateUserAttendance));\n        const updatedUserId = resData.data.updateUserAttendance._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(updatedUser);\n        this.context.users = this.state.users; // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.updateUserLeaveHandler = event => {\n      const token = this.context.token;\n      const userId = this.context.userId;\n      let selectedUserId = this.context.selectedUser._id;\n\n      if (userId !== selectedUserId && this.context.user.role !== 'admin') {\n        console.log(\"Not the creator or Admin! No edit permission!!\");\n        selectedUserId = null;\n      }\n\n      console.log(\"UpdateUserLeaveFormData:  \", event.target.formGridLeaveType.value);\n      this.setState({\n        updating: false,\n        userUpdateField: null\n      });\n      let leaveType = event.target.formGridLeaveType.value;\n      let leaveTitle = event.target.formGridLeaveTitle.value;\n      let leaveStartDate = event.target.formGridLeaveStartDate.value;\n      let leaveEndDate = event.target.formGridLeaveEndDate.value;\n\n      if (leaveType.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        leaveType = this.context.selectedUser.leaveType;\n      }\n\n      if (leaveTitle.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        leaveTitle = this.context.selectedUser.leaveTitle;\n      }\n\n      if (leaveStartDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        leaveStartDate = this.context.selectedUser.leaveStartDate;\n      }\n\n      if (leaveEndDate.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        leaveEndDate = this.context.selectedUser.leaveEndDate;\n      }\n\n      const userLeave = {\n        leaveType,\n        leaveTitle,\n        leaveStartDate,\n        leaveEndDate\n      };\n      console.log(\"\\n      adding user attendance item...\\n      userId: \".concat(userId, \",\\n      selectedUserId: \").concat(selectedUserId, \"\\n      leave: {\\n        type: \").concat(leaveType, \",\\n        title: \").concat(leaveTitle, \",\\n        startDate: \").concat(leaveStartDate, \",\\n        endDate: \").concat(leaveEndDate, \"\\n      }\\n      \"));\n      const requestBody = {\n        query: \"\\n          mutation {updateUserLeave(userId:\\\"\".concat(userId, \"\\\", selectedUserId:\\\"\").concat(userId, \"\\\",userInput:{leaveType:\\\"\").concat(leaveType, \"\\\",leaveTitle:\\\"\").concat(leaveTitle, \"\\\",leaveStartDate:\\\"\").concat(leaveStartDate, \"\\\",leaveEndDate:\\\"\").concat(leaveEndDate, \"\\\"})\\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\\n        \")\n      };\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data));\n        const updatedUserId = resData.data.updateUserLeave._id;\n        const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n        const updatedUserPos = this.state.users.indexOf(updatedUser);\n        const slicedArray = this.state.users.splice(updatedUserPos, 1);\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser), \"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n        this.state.users.push(updatedUser);\n        this.context.users = this.state.users; // this.fetchUsers();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.modalCancelHandler = () => {\n      this.setState({\n        updating: false\n      });\n    };\n  }\n\n  // constructor(props) {\n  //   super(props);\n  // }\n  componentDidMount() {\n    this.getThisUser();\n  }\n\n  getThisUser() {\n    this.setState({\n      isLoading: true\n    });\n    const requestBody = {\n      query: \"\\n      query {getThisUser\\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\\n        \"\n    };\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n\n      return res.json();\n    }).then(resData => {\n      console.log(\"resdata...\" + JSON.stringify(resData));\n      const thisUser = resData.data.getThisUser;\n\n      if (this.isActive) {\n        this.setState({\n          user: thisUser,\n          isLoading: false\n        });\n        this.context.user = thisUser;\n        console.log(\"this.context.user:  \" + this.context.user.name);\n        sessionStorage.setItem('thisUser', JSON.stringify(thisUser));\n      }\n    }).catch(err => {\n      console.log(err);\n\n      if (this.isActive) {\n        this.setState({\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  updateUserSpecialProfile(event) {\n    console.log(\"special field to update:  \", event.target.value);\n    const field = event.target.value;\n    this.setState({\n      userUpdateField: field\n    });\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 3,\n      className: \"MasterCol1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(SidebarPage, {\n      you: this.state.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 9,\n      className: \"MasterCol2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"containerProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"Detail\",\n      id: \"uncontrolled-tab-example2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      eventKey: \"\",\n      title: \"Edit:\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      eventKey: \"Detail\",\n      title: \"Detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, this.state.user !== null && React.createElement(ThisUserProfile, {\n      user: this.state.user,\n      authUserId: this.context.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Demographics\",\n      title: \"Demographics\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.startUpdateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, \"Demographics\"), this.state.updating === true && React.createElement(UpdateUserForm, {\n      canCancelProfile: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmUpdateHandler,\n      confirmText: \"Confirm\",\n      user: this.state.user,\n      authUserId: this.context.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Atttendance\",\n      title: \"Atttendance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"attendance\",\n      onClick: this.updateUserSpecialProfile.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, \"Attendance\"), this.state.userUpdateField === 'attendance' && React.createElement(UpdateUserAttendanceForm, {\n      authUserId: this.context.userId,\n      canCancelProfile: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserAttendanceHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Leave\",\n      title: \"Leave\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"leave\",\n      onClick: this.updateUserSpecialProfile.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"Leave\"), this.state.userUpdateField === 'leave' && React.createElement(UpdateUserLeaveForm, {\n      authUserId: this.context.userId,\n      canCancelProfile: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserLeaveHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Attachment\",\n      title: \"Attachment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"attachments\",\n      onClick: this.updateUserSpecialProfile.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, \"Attachment\"), this.state.userUpdateField === 'attachments' && React.createElement(UpdateUserAttachmentForm, {\n      authUserId: this.context.userId,\n      canCancelProfile: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.updateUserAttachmentHandler,\n      confirmText: \"Confirm\",\n      user: this.state.selectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nThisUserPage.contextType = AuthContext;\nexport default ThisUserPage;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/thisUser.js"],"names":["React","Component","UpdateUserForm","Container","Row","Col","Accordion","Button","SidebarPage","Tabs","Tab","UpdateUserAttendanceForm","UpdateUserAttachmentForm","UpdateUserLeaveForm","ThisUserProfile","Spinner","AuthContext","ThisUserPage","state","user","users","updating","isLoading","userUpdateField","isActive","startUpdateUserHandler","setState","console","log","modalConfirmUpdateHandler","event","token","context","userId","selectedUserId","selectedUser","_id","role","target","formGridEmail","value","email","password","formGridPassword","name","formGridName","formGridRole","dob","formGridDob","phone","formGridPhone","addressNumber","formGridAddressNumber","addressStreet","formGridAddressStreet","addressTown","formGridAddressTown","addressParish","formGridAddressParish","addressPostOffice","formGridAddressPostOffice","employmentDate","formGridEmploymentDate","terminationDate","formGridTerminationDate","trim","length","address","number","street","town","parish","postOffice","requestBody","query","fetch","method","body","JSON","stringify","headers","Authorization","then","res","status","Error","json","resData","updatedUser","data","updateUser","push","catch","err","updateUserAttendanceHandler","formGridAttendanceDate","attendanceDate","attendanceStatus","formGridAttendanceStatus","attendanceDescription","formGridAttendanceDescription","userAttendance","updateUserAttendance","updatedUserId","find","e","updatedUserPos","indexOf","slicedArray","splice","updateUserLeaveHandler","formGridLeaveType","leaveType","leaveTitle","formGridLeaveTitle","leaveStartDate","formGridLeaveStartDate","leaveEndDate","formGridLeaveEndDate","userLeave","updateUserLeave","modalCancelHandler","componentDidMount","getThisUser","thisUser","sessionStorage","setItem","updateUserSpecialProfile","field","componentWillUnmount","render","bind","updateUserAttachmentHandler","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport UpdateUserForm from '../components/Forms/UpdateUserForm';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\nimport SidebarPage from './Sidebar';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\n\nimport UpdateUserAttendanceForm from '../components/Forms/UpdateUserAttendanceForm';\nimport UpdateUserAttachmentForm from '../components/Forms/UpdateUserAttachmentForm';\nimport UpdateUserLeaveForm from '../components/Forms/UpdateUserLeaveForm';\n\nimport ThisUserProfile from '../components/Users/thisUserProfile';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport './Users.css';\n\nclass ThisUserPage extends Component {\n  state = {\n    user: null,\n    users: [],\n    updating: false,\n    isLoading: false,\n    userUpdateField: null,\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  componentDidMount() {\n    this.getThisUser();\n  }\n\n  startUpdateUserHandler = () => {\n    this.setState({ updating: true });\n    console.log(\"UpdateUserForm...\");\n  };\n\n\n  modalConfirmUpdateHandler = (event) => {\n    const token = this.context.token;\n    let userId = this.context.userId;\n    let selectedUserId = this.context.selectedUser._id;\n    if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      console.log(\"Not the creator or Admin! No edit permission!!\");\n      selectedUserId = null;\n    }\n    console.log(\"UpdateUserFormData:  \", event.target.formGridEmail.value);\n    this.setState({ updating: false });\n    let email = event.target.formGridEmail.value;\n    let password = event.target.formGridPassword.value;\n    let name = event.target.formGridName.value;\n    let role = event.target.formGridRole.value;\n    let dob = event.target.formGridDob.value;\n    let phone = event.target.formGridPhone.value;\n    let addressNumber = event.target.formGridAddressNumber.value;\n    let addressStreet = event.target.formGridAddressStreet.value;\n    let addressTown = event.target.formGridAddressTown.value;\n    let addressParish = event.target.formGridAddressParish.value;\n    let addressPostOffice = event.target.formGridAddressPostOffice.value;\n    let employmentDate = event.target.formGridEmploymentDate.value;\n    let terminationDate = event.target.formGridTerminationDate.value;\n\n    if (email.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      email = this.state.user.email;\n    }\n    if (password.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      password = this.state.user.password;\n    }\n    if (name.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      name = this.state.user.name;\n    }\n    if (role.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      role = this.state.user.role;\n    }\n    if (dob.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      dob = this.state.user.dob;\n    }\n    if (phone.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      phone = this.state.user.phone;\n    }\n    if (addressNumber.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressNumber = this.state.user.address.number;\n    }\n    if (addressStreet.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressStreet = this.state.user.address.street;\n    }\n    if (addressTown.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressTown = this.state.user.address.town;\n    }\n    if (addressParish.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressParish = this.state.user.address.parish;\n    }\n    if (addressPostOffice.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      addressPostOffice = this.state.user.address.postOffice;\n    }\n    if (employmentDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      employmentDate = this.state.user.employmentDate;\n    }\n    if (terminationDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      terminationDate = this.state.user.terminationDate;\n    }\n\n\n    const user = { email, password, name, role, dob, phone, addressNumber, addressStreet, addressTown, addressParish, addressPostOffice, employmentDate, terminationDate };\n    console.log(`\n\n      `);\n\n    const requestBody = {\n      query: `\n      mutation{\n        updateUser(userId:\"${userId}\",selectedUserId:\"${selectedUserId}\",userInput:{\n          email:\"${email}\"\n        password:\"${password}\"\n        name:\"${name}\"\n        dob:\"${dob}\"\n        addressNumber:\"${addressNumber}\"\n        addressStreet:\"${addressStreet}\"\n        addressTown:\"${addressTown}\"\n        addressParish:\"${addressParish}\"\n        addressPostOffice:\"${addressPostOffice}\"\n        phone:\"${phone}\"\n        role:\"${role}\"\n        employmentDate:\"${employmentDate}\"\n        terminationDate:\"${terminationDate}\"\n        })\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n      }\n        `};\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const updatedUser = resData.data.updateUser;\n        console.log(\"updatedUser:  \", JSON.stringify(updatedUser));\n        this.setState({user: updatedUser})\n        this.state.users.push({\n              _id: resData.data.updateUser._id,\n              email: resData.data.updateUser.email,\n              name: resData.data.updateUser.name,\n              role: resData.data.updateUser.role\n            });\n        this.context.users = this.state.users;\n        // this.fetchUsers();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    };\n\n  updateUserAttendanceHandler = (event) => {\n    const token = this.context.token;\n    const userId = this.state.user._id;\n    // let selectedUserId = this.context.selectedUser._id;\n    // if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n    //   console.log(\"Not the creator or Admin! No edit permission!!\");\n    //   selectedUserId = null;\n    // }\n    console.log(\"UpdateUserAttendanceFormData:  \", event.target.formGridAttendanceDate.value);\n\n    this.setState({ updating: false , userUpdateField: null });\n\n    let attendanceDate = event.target.formGridAttendanceDate.value;\n    let attendanceStatus = event.target.formGridAttendanceStatus.value;\n    let attendanceDescription = event.target.formGridAttendanceDescription.value;\n\n    if (attendanceDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      attendanceDate = this.context.selectedUser.attendanceDate;\n    }\n    if (attendanceStatus.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      attendanceStatus = this.context.selectedUser.attendanceStatus;\n    }\n    if (attendanceDescription.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      attendanceDescription = this.context.selectedUser.attendanceDescription;\n    }\n\n    const userAttendance = { attendanceDate, attendanceStatus, attendanceDescription }\n    console.log(`\n      adding user attendance item...\n      userId: ${userId},\n      attendanceDate: ${attendanceDate},\n      attendanceStatus: ${attendanceStatus},\n      attendanceDescription: ${attendanceDescription}\n      `);\n\n      const requestBody = {\n        query:`\n          mutation {updateUserAttendance(userId:\"${userId}\", selectedUserId:\"${userId}\",userInput:{attendanceDate:\"${attendanceDate}\",attendanceStatus:\"${attendanceStatus}\",attendanceDescription:\"${attendanceDescription}\"})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `};\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }})\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData.data.updateUserAttendance));\n          const updatedUserId = resData.data.updateUserAttendance._id;\n          const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n          const updatedUserPos = this.state.users.indexOf(updatedUser);\n          const slicedArray = this.state.users.splice(updatedUserPos, 1);\n          console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n          this.state.users.push(updatedUser);\n          this.context.users = this.state.users;\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n        });\n  };\n\n\n  updateUserLeaveHandler = (event) => {\n    const token = this.context.token;\n    const userId = this.context.userId;\n    let selectedUserId = this.context.selectedUser._id;\n    if(userId !== selectedUserId && this.context.user.role !== 'admin') {\n      console.log(\"Not the creator or Admin! No edit permission!!\");\n      selectedUserId = null;\n    }\n\n    console.log(\"UpdateUserLeaveFormData:  \", event.target.formGridLeaveType.value);\n\n    this.setState({ updating: false , userUpdateField: null });\n\n    let leaveType = event.target.formGridLeaveType.value;\n    let leaveTitle = event.target.formGridLeaveTitle.value;\n    let leaveStartDate = event.target.formGridLeaveStartDate.value;\n    let leaveEndDate = event.target.formGridLeaveEndDate.value;\n\n    if (leaveType.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      leaveType = this.context.selectedUser.leaveType;\n    }\n    if (leaveTitle.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      leaveTitle = this.context.selectedUser.leaveTitle;\n    }\n    if (leaveStartDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      leaveStartDate = this.context.selectedUser.leaveStartDate;\n    }\n    if (leaveEndDate.trim().length === 0) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      leaveEndDate = this.context.selectedUser.leaveEndDate;\n    }\n\n    const userLeave = { leaveType, leaveTitle, leaveStartDate, leaveEndDate }\n    console.log(`\n      adding user attendance item...\n      userId: ${userId},\n      selectedUserId: ${selectedUserId}\n      leave: {\n        type: ${leaveType},\n        title: ${leaveTitle},\n        startDate: ${leaveStartDate},\n        endDate: ${leaveEndDate}\n      }\n      `);\n\n      const requestBody = {\n        query:`\n          mutation {updateUserLeave(userId:\"${userId}\", selectedUserId:\"${userId}\",userInput:{leaveType:\"${leaveType}\",leaveTitle:\"${leaveTitle}\",leaveStartDate:\"${leaveStartDate}\",leaveEndDate:\"${leaveEndDate}\"})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `};\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }})\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData.data));\n\n          const updatedUserId = resData.data.updateUserLeave._id;\n          const updatedUser = this.state.users.find(e => e._id === updatedUserId);\n          const updatedUserPos = this.state.users.indexOf(updatedUser);\n          const slicedArray = this.state.users.splice(updatedUserPos, 1);\n          console.log(\"updatedUser:  \", JSON.stringify(updatedUser),\"  updatedUserPos:  \", updatedUserPos, \"  slicedArray:  \", slicedArray);\n\n          this.state.users.push(updatedUser);\n          this.context.users = this.state.users;\n          // this.fetchUsers();\n        })\n        .catch(err => {\n          console.log(err);\n        });\n  };\n\n\n  getThisUser() {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n      query {getThisUser\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        `};\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"resdata...\" + JSON.stringify(resData));\n        const thisUser = resData.data.getThisUser;\n        if (this.isActive) {\n\n          this.setState({ user: thisUser, isLoading: false });\n\n          this.context.user = thisUser;\n          console.log(\"this.context.user:  \" + this.context.user.name);\n\n          sessionStorage.setItem('thisUser', JSON.stringify(thisUser));\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n\n  modalCancelHandler = () => {\n    this.setState({ updating: false  });\n  };\n\n  updateUserSpecialProfile (event) {\n    console.log(\"special field to update:  \", event.target.value);\n    const field = event.target.value;\n    this.setState({ userUpdateField: field});\n  }\n\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n      <Row>\n      <Col md={3} className=\"MasterCol1\">\n      <SidebarPage\n        you={this.state.user}\n      />\n      </Col>\n\n      <Col md={9} className=\"MasterCol2\">\n        <Container className=\"containerProfile\">\n        <Tabs defaultActiveKey=\"Detail\" id=\"uncontrolled-tab-example2\">\n          <Tab eventKey=\"\" title=\"Edit:\" disabled>\n          </Tab>\n          <Tab eventKey=\"Detail\" title=\"Detail\">\n          {this.state.user !== null && (\n              <ThisUserProfile\n                user={this.state.user}\n                authUserId={this.context.userId}\n              />\n            )}\n          </Tab>\n\n          <Tab eventKey=\"Demographics\" title=\"Demographics\">\n          <Button variant=\"outline-primary\" onClick={this.startUpdateUserHandler}>Demographics</Button>\n          {this.state.updating === true && (\n            <UpdateUserForm\n            canCancelProfile\n              canConfirm\n              onCancel={this.modalCancelHandler}\n              onConfirm={this.modalConfirmUpdateHandler}\n              confirmText=\"Confirm\"\n              user={this.state.user}\n              authUserId={this.context.userId}\n            />\n          )}\n          </Tab>\n\n          <Tab eventKey=\"Atttendance\" title=\"Atttendance\">\n            <Button variant=\"outline-primary\" value='attendance' onClick={this.updateUserSpecialProfile.bind(this)}>Attendance</Button>\n            {this.state.userUpdateField === 'attendance' && (\n              <UpdateUserAttendanceForm\n              authUserId={this.context.userId}\n              canCancelProfile\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.updateUserAttendanceHandler}\n                confirmText=\"Confirm\"\n                user={this.state.selectedUser}\n              />\n            )}\n          </Tab>\n\n          <Tab eventKey=\"Leave\" title=\"Leave\">\n            <Button variant=\"outline-primary\" value='leave' onClick={this.updateUserSpecialProfile.bind(this)}>Leave</Button>\n            {this.state.userUpdateField === 'leave' && (\n              <UpdateUserLeaveForm\n              authUserId={this.context.userId}\n              canCancelProfile\n                canConfirm\n                onCancel={this.modalCancelHandler}\n                onConfirm={this.updateUserLeaveHandler}\n                confirmText=\"Confirm\"\n                user={this.state.selectedUser}\n              />\n            )}\n          </Tab>\n\n          <Tab eventKey=\"Attachment\" title=\"Attachment\">\n          <Button variant=\"outline-primary\" value='attachments' onClick={this.updateUserSpecialProfile.bind(this)}>Attachment</Button>\n          {this.state.userUpdateField === 'attachments' && (\n            <UpdateUserAttachmentForm\n            authUserId={this.context.userId}\n            canCancelProfile\n              canConfirm\n              onCancel={this.modalCancelHandler}\n              onConfirm={this.updateUserAttachmentHandler}\n              confirmText=\"Confirm\"\n              user={this.state.selectedUser}\n            />\n          )}\n          </Tab>\n        </Tabs>\n        </Container>\n      </Col>\n      </Row>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ThisUserPage;\n"]},"metadata":{},"sourceType":"module"}