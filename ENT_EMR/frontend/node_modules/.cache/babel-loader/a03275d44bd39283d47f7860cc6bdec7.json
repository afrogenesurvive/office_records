{"ast":null,"code":"var _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/PdfCreator.js\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Page, Text, View, Document, StyleSheet, Image } from '@react-pdf/renderer';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport \"./AttachmentViewer.css\";\nimport letterheadImage from \"../assets/img/referralLetterhead.jpg\";\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'row',\n    backgroundColor: 'white'\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n    width: 80\n  }\n});\nlet docProps = null;\n\nconst MyDocument = () => React.createElement(Document, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(Page, {\n  size: \"A4\",\n  style: styles.page,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(View, {\n  style: styles.section,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(Text, {\n  style: styles.text,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, \"This is a test document\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, \"I could be a prescription, referral or the like.\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, docProps.pdfData.title), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, docProps.pdfData.test)), docProps.pdfData.user && React.createElement(View, {\n  style: styles.section,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, \"Here is some sample data\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, \"Staff:\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, \"Name: \", docProps.pdfData.user.name), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, \"Phone: \", docProps.pdfData.user.phone), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, \"Town: \", docProps.pdfData.user.address.town)), docProps.pdfData.patient && React.createElement(View, {\n  style: styles.section,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, \"Here is some sample data\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, \"Patient\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, \"Name: \", docProps.pdfData.patient.name), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, \"Phone: \", docProps.pdfData.patient.contact.phone), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, \"Town: \", docProps.pdfData.patient.address.town)), docProps.pdfData.appointment && React.createElement(View, {\n  style: styles.section,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, \"Here is some sample data\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, \"Appointment\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, \"Name: \", docProps.pdfData.appointment.title), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, \"Patient: \", docProps.pdfData.appointment.patient.name), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, \"Time: \", docProps.pdfData.appointment.time))));\n\nconst PatientReferral = () => React.createElement(Document, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}, React.createElement(Page, {\n  size: \"A4\",\n  style: styles.page,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}, React.createElement(View, {\n  style: styles.section,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}, React.createElement(Image, {\n  src: letterheadImage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, docProps.pdfData.title), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, \"Dear Dr \", docProps.pdfData.patient.referringDoctor.name, \" \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, \"Thank you for referring \", docProps.pdfData.patient.name, \" \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, \"who I saw on \", docProps.pdfData.visitDate), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}, \"My findings are as follows:  \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}, docProps.pdfData.findings), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}, \"For this I recommend the following:  \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78\n  },\n  __self: this\n}, docProps.pdfData.recommendation), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}, \"Referral: \", docProps.pdfData.referral), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n}, \"Visit Diagnosis:  \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82\n  },\n  __self: this\n}, \"title: \", docProps.pdfData.visitDiagnosis[0].title), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n}, \"date: \", new Date(docProps.pdfData.visitDiagnosis[0].date.substr(0, 10) * 1000).toISOString().slice(0, 10)), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}, \"type: \", docProps.pdfData.visitDiagnosis[0].type), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}, \"description: \", docProps.pdfData.visitDiagnosis[0].description), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}, \"Visit Treatment:  \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n}, \"title:\", docProps.pdfData.visitTreatment[0].title), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}, \"type:\", docProps.pdfData.visitTreatment[0].type), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}, \"date: \", new Date(docProps.pdfData.visitTreatment[0].date.substr(0, 10) * 1000).toISOString().slice(0, 10)), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}, \"description:\", docProps.pdfData.visitTreatment[0].description), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}, \"dose:\", docProps.pdfData.visitTreatment[0].dose), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}, \"frequency:\", docProps.pdfData.visitTreatment[0].frequency))));\n\nconst OperationReminder = () => React.createElement(Document, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}, React.createElement(Page, {\n  size: \"A4\",\n  style: styles.page,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}, docProps.pdfData.patient && React.createElement(View, {\n  style: styles.section,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}, React.createElement(Image, {\n  src: letterheadImage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106\n  },\n  __self: this\n}, docProps.pdfData.title), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107\n  },\n  __self: this\n}, \"Name: \", docProps.pdfData.patient.name), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108\n  },\n  __self: this\n}, \"Age: \", docProps.pdfData.patient.age), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}, \"Address: \", docProps.pdfData.patient.address.number, \", \", docProps.pdfData.patient.address.street), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}, docProps.pdfData.patient.address.town, \", \", docProps.pdfData.patient.address.parish), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}, \"Operation Name: \", docProps.pdfData.name), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112\n  },\n  __self: this\n}, \"Hospital Name: \", docProps.pdfData.hospitalName), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113\n  },\n  __self: this\n}, \"Address: \", docProps.pdfData.hospitalAddress), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}, \"Date of Operation: \", docProps.pdfData.date), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115\n  },\n  __self: this\n}, \"Time: \", docProps.pdfData.time), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n}, \"You must attend ... \", docProps.pdfData.hospitalName, \" Hospital\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n}, \"At... \", docProps.pdfData.time, \" ... on ... \", docProps.pdfData.date, \" \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119\n  },\n  __self: this\n}, \"You should have NOTHING to Eat or Drink after ... \", docProps.pdfData.fastTime, \" ... on ... \", docProps.pdfData.fastDate), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 120\n  },\n  __self: this\n}, \"Please take night clothes, toilet articles and hospital fee with you!\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 122\n  },\n  __self: this\n}, \"Estimated Cost: \", docProps.pdfData.estimateCost))));\n\nconst MiscNote = () => React.createElement(Document, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130\n  },\n  __self: this\n}, React.createElement(Page, {\n  size: \"A4\",\n  style: styles.page,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131\n  },\n  __self: this\n}, docProps.pdfData.patient && React.createElement(View, {\n  style: styles.section,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133\n  },\n  __self: this\n}, React.createElement(Image, {\n  src: letterheadImage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134\n  },\n  __self: this\n}), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 135\n  },\n  __self: this\n}, docProps.pdfData.title), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136\n  },\n  __self: this\n}, \"Name: \", docProps.pdfData.patient.name), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137\n  },\n  __self: this\n}, \"note #1: \", docProps.pdfData.note1), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 138\n  },\n  __self: this\n}, \"note #2: \", docProps.pdfData.note2))));\n\nconst SickNote = () => React.createElement(Document, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 146\n  },\n  __self: this\n}, React.createElement(Page, {\n  size: \"A4\",\n  style: styles.page,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147\n  },\n  __self: this\n}, docProps.pdfData.patient && React.createElement(View, {\n  style: styles.section,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149\n  },\n  __self: this\n}, React.createElement(Image, {\n  src: letterheadImage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150\n  },\n  __self: this\n}), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151\n  },\n  __self: this\n}, docProps.pdfData.title), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 152\n  },\n  __self: this\n}, \"To Whom It May Concern\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 153\n  },\n  __self: this\n}, \"Date: \", docProps.pdfData.date), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 154\n  },\n  __self: this\n}, docProps.pdfData.receiverAddress), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 155\n  },\n  __self: this\n}, \"Dear Sir/Madam,\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 156\n  },\n  __self: this\n}, \"This is to certify that I have seen and examined\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 157\n  },\n  __self: this\n}, \"Mr. /Mrs. /Miss: \", docProps.pdfData.patient.name), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158\n  },\n  __self: this\n}, \"and recommended that she /he should refrain from active duty \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159\n  },\n  __self: this\n}, \"for at least ... \", docProps.pdfData.duration, \" days\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160\n  },\n  __self: this\n}, \"commencing ... \", docProps.pdfData.startDate), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 161\n  },\n  __self: this\n}, \"Yours Truly\"))));\n\nconst DiagTest = () => React.createElement(Document, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 169\n  },\n  __self: this\n}, React.createElement(Page, {\n  size: \"A4\",\n  style: styles.page,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 170\n  },\n  __self: this\n}, docProps.pdfData.patient && React.createElement(View, {\n  style: styles.section,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 172\n  },\n  __self: this\n}, React.createElement(Image, {\n  src: letterheadImage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 173\n  },\n  __self: this\n}), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 174\n  },\n  __self: this\n}, docProps.pdfData.title), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 175\n  },\n  __self: this\n}, \"Date: \", docProps.pdfData.date), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 176\n  },\n  __self: this\n}, \"To: \", docProps.pdfData.receiverAddress), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 177\n  },\n  __self: this\n}, \"Name: \", docProps.pdfData.patient.name), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 178\n  },\n  __self: this\n}, \"Address:\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 179\n  },\n  __self: this\n}, docProps.pdfData.patient.address.number), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 180\n  },\n  __self: this\n}, docProps.pdfData.patient.address.street), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 181\n  },\n  __self: this\n}, docProps.pdfData.patient.address.parish), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 182\n  },\n  __self: this\n}, \"Diagnosis \", docProps.pdfData.visitDiagnosis), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 183\n  },\n  __self: this\n}, \"Test(s) Required: \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 184\n  },\n  __self: this\n}, docProps.pdfData.requiredTests))));\n\nconst InsuranceNote = () => React.createElement(Document, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 192\n  },\n  __self: this\n}, React.createElement(Page, {\n  size: \"A4\",\n  style: styles.page,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 193\n  },\n  __self: this\n}, docProps.pdfData.patient && React.createElement(View, {\n  style: styles.section,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 195\n  },\n  __self: this\n}, React.createElement(Image, {\n  src: letterheadImage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 196\n  },\n  __self: this\n}), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 197\n  },\n  __self: this\n}, docProps.pdfData.title), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 198\n  },\n  __self: this\n}, \"Insurance\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 199\n  },\n  __self: this\n}, \"Patient's Name: \", docProps.pdfData.patient.name), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 200\n  },\n  __self: this\n}, \"Age: \", docProps.pdfData.patient.age), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 201\n  },\n  __self: this\n}, \"Address: \", docProps.pdfData.patient.address.number, \", \", docProps.pdfData.patient.address.street), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 202\n  },\n  __self: this\n}, docProps.pdfData.patient.address.town, \", \", docProps.pdfData.patient.address.parish), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 203\n  },\n  __self: this\n}, \"Subscriber: \", docProps.pdfData.patientInsurance.company), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 204\n  },\n  __self: this\n}, \"Policy No: \", docProps.pdfData.patientInsurance.number), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 205\n  },\n  __self: this\n}, \"Plan: \", docProps.pdfData.patientInsurance.description), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 206\n  },\n  __self: this\n}, \"Employer: \", docProps.pdfData.patient.occupation.employer), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 207\n  },\n  __self: this\n}, \"Proposed Operation: \", docProps.pdfData.operation), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 208\n  },\n  __self: this\n}, \"Date of Operation: \", docProps.pdfData.operationDate), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 209\n  },\n  __self: this\n}, \"Surgeon's Fee: $\", docProps.pdfData.surgeonFee), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 210\n  },\n  __self: this\n}, \"Assistant Surgeon's Fee: $\", docProps.pdfData.assistantSurgeonFee), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 211\n  },\n  __self: this\n}, \"Anesthetist's Fee: $\", docProps.pdfData.anesthetistsFee), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 212\n  },\n  __self: this\n}, \"Please review for approval for Surgery and Insurance payment.\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 213\n  },\n  __self: this\n}, \"Thanks.\"))));\n\nconst Prescription = () => React.createElement(Document, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 221\n  },\n  __self: this\n}, React.createElement(Page, {\n  size: \"A4\",\n  style: styles.page,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 222\n  },\n  __self: this\n}, docProps.pdfData.patient && React.createElement(View, {\n  style: styles.section,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 224\n  },\n  __self: this\n}, React.createElement(Image, {\n  src: letterheadImage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 225\n  },\n  __self: this\n}), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 226\n  },\n  __self: this\n}, docProps.pdfData.title), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 227\n  },\n  __self: this\n}, \"Here is some sample data\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 228\n  },\n  __self: this\n}, \"Patient\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 229\n  },\n  __self: this\n}, \"Name: \", docProps.pdfData.patient.name), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 230\n  },\n  __self: this\n}, \"Phone: \", docProps.pdfData.patient.contact.phone), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 231\n  },\n  __self: this\n}, \"Town: \", docProps.pdfData.patient.address.town), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 232\n  },\n  __self: this\n}, \"Referral: \", docProps.pdfData.referral))));\n\nconst ProcedureConsent = () => React.createElement(Document, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 240\n  },\n  __self: this\n}, React.createElement(Page, {\n  size: \"A4\",\n  style: styles.page,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 241\n  },\n  __self: this\n}, docProps.pdfData.patient && React.createElement(View, {\n  style: styles.section,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 243\n  },\n  __self: this\n}, React.createElement(Image, {\n  src: letterheadImage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 244\n  },\n  __self: this\n}), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 245\n  },\n  __self: this\n}, docProps.pdfData.title), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 246\n  },\n  __self: this\n}, \"Date: \", docProps.pdfData.date), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 247\n  },\n  __self: this\n}, \"Patient's Name: \", docProps.pdfData.patient.name), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 248\n  },\n  __self: this\n}, \"Patient's Age: \", docProps.pdfData.patient.age), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 249\n  },\n  __self: this\n}, \"I    \", docProps.pdfData.consentGiver, \"    do hereby give consent to have \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 250\n  },\n  __self: this\n}, \"   \", docProps.pdfData.procedure, \"    performed upon\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 251\n  },\n  __self: this\n}, \" \", docProps.pdfData.consentGiverRelation, \" \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 252\n  },\n  __self: this\n}, \" The procedure, its risks and possible complications have been fully explained to me. \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 253\n  },\n  __self: this\n}, \" This procedure will be done uder local anesthetic and/or sedation. \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 254\n  },\n  __self: this\n}, \" I understand and am in agreement with proceeding with same. \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 255\n  },\n  __self: this\n}, \" Signed: \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 256\n  },\n  __self: this\n}, \" Name: \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 257\n  },\n  __self: this\n}, \" Signed: \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 258\n  },\n  __self: this\n}, \" Witness: \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 259\n  },\n  __self: this\n}, \" Doctor/Surgeon Signature: \"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 260\n  },\n  __self: this\n}, \" Name: \"))));\n\nconst FitToFly = () => React.createElement(Document, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 268\n  },\n  __self: this\n}, React.createElement(Page, {\n  size: \"A4\",\n  style: styles.page,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 269\n  },\n  __self: this\n}, docProps.pdfData.patient && React.createElement(View, {\n  style: styles.section,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 271\n  },\n  __self: this\n}, React.createElement(Image, {\n  src: letterheadImage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 272\n  },\n  __self: this\n}), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 273\n  },\n  __self: this\n}, docProps.pdfData.title), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 274\n  },\n  __self: this\n}, \"Date: \", docProps.pdfData.date), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 275\n  },\n  __self: this\n}, \"Patient's Name: \", docProps.pdfData.patient.name), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 276\n  },\n  __self: this\n}, \"Patient's D.O.B: \", docProps.pdfData.patient.dob), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 277\n  },\n  __self: this\n}, \"Patient's Age: \", docProps.pdfData.patient.age), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 278\n  },\n  __self: this\n}, \"Patient's Sex: \", docProps.pdfData.patient.gender), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 279\n  },\n  __self: this\n}, \"Clinical Features:\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 280\n  },\n  __self: this\n}, docProps.pdfData.clinicalFeatures), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 281\n  },\n  __self: this\n}, \"Provisional Investigation:\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 282\n  },\n  __self: this\n}, docProps.pdfData.provisionalInvestigation), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 283\n  },\n  __self: this\n}, \"Conclusion:\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 284\n  },\n  __self: this\n}, \"Name: \", docProps.pdfData.patient.name), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 285\n  },\n  __self: this\n}, \"Phone: \", docProps.pdfData.patient.contact.phone), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 286\n  },\n  __self: this\n}, \"Town: \", docProps.pdfData.patient.address.town), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 287\n  },\n  __self: this\n}, \"Referral: \", docProps.pdfData.referral))));\n\nconst TreatmentInstruction = () => React.createElement(Document, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 295\n  },\n  __self: this\n}, React.createElement(Page, {\n  size: \"A4\",\n  style: styles.page,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 296\n  },\n  __self: this\n}, docProps.pdfData.patient && React.createElement(View, {\n  style: styles.section,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 298\n  },\n  __self: this\n}, React.createElement(Image, {\n  src: letterheadImage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 299\n  },\n  __self: this\n}), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 300\n  },\n  __self: this\n}, docProps.pdfData.title), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 301\n  },\n  __self: this\n}, \"Here is some sample data\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 302\n  },\n  __self: this\n}, \"Patient\"), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 303\n  },\n  __self: this\n}, \"Name: \", docProps.pdfData.patient.name), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 304\n  },\n  __self: this\n}, \"Phone: \", docProps.pdfData.patient.contact.phone), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 305\n  },\n  __self: this\n}, \"Town: \", docProps.pdfData.patient.address.town), React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 306\n  },\n  __self: this\n}, \"Referral: \", docProps.pdfData.referral))));\n\nconst PdfCreator = props => {\n  docProps = props;\n  console.log(`\n      ${docProps.pdfData.patient.insurance[1]}\n      `);\n  return React.createElement(\"div\", {\n    className: \"attachmentViewerBg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"attachmentViewer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, \" Document Generator: \", docProps.pdfType), React.createElement(PDFViewer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, docProps.pdfType === \"test\" && React.createElement(MyDocument, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }), docProps.pdfType === \"patientReferral\" && React.createElement(PatientReferral, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }), docProps.pdfType === \"operationReminder\" && React.createElement(OperationReminder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }), docProps.pdfType === \"miscNote\" && React.createElement(MiscNote, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }), docProps.pdfType === \"sickNote\" && React.createElement(SickNote, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }), docProps.pdfType === \"diagTest\" && React.createElement(DiagTest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }), docProps.pdfType === \"insuranceNote\" && React.createElement(InsuranceNote, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344\n    },\n    __self: this\n  }), docProps.pdfType === \"prescription\" && React.createElement(Prescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }), docProps.pdfType === \"procedureConsent\" && React.createElement(ProcedureConsent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }), docProps.pdfType === \"fitToFlyAuthorization\" && React.createElement(FitToFly, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }), docProps.pdfType === \"treatmentInstruction\" && React.createElement(TreatmentInstruction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"danger\",\n    onClick: props.onClosePdfCreator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360\n    },\n    __self: this\n  }, \"close\")));\n};\n\nexport default PdfCreator;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/PdfCreator.js"],"names":["React","Button","Page","Text","View","Document","StyleSheet","Image","PDFViewer","letterheadImage","styles","create","page","flexDirection","backgroundColor","section","margin","padding","flexGrow","width","docProps","MyDocument","text","pdfData","title","test","user","name","phone","address","town","patient","contact","appointment","time","PatientReferral","referringDoctor","visitDate","findings","recommendation","referral","visitDiagnosis","Date","date","substr","toISOString","slice","type","description","visitTreatment","dose","frequency","OperationReminder","age","number","street","parish","hospitalName","hospitalAddress","fastTime","fastDate","estimateCost","MiscNote","note1","note2","SickNote","receiverAddress","duration","startDate","DiagTest","requiredTests","InsuranceNote","patientInsurance","company","occupation","employer","operation","operationDate","surgeonFee","assistantSurgeonFee","anesthetistsFee","Prescription","ProcedureConsent","consentGiver","procedure","consentGiverRelation","FitToFly","dob","gender","clinicalFeatures","provisionalInvestigation","TreatmentInstruction","PdfCreator","props","console","log","insurance","pdfType","onClosePdfCreator"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Page, Text, View, Document, StyleSheet, Image } from '@react-pdf/renderer';\nimport { PDFViewer } from '@react-pdf/renderer';\n\nimport \"./AttachmentViewer.css\";\nimport letterheadImage from \"../assets/img/referralLetterhead.jpg\";\n\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'row',\n    backgroundColor: 'white'\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n    width: 80,\n  }\n});\n\nlet docProps = null;\n\nconst MyDocument = () => (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n      <View style={styles.section}>\n        <Text style={styles.text}>This is a test document</Text>\n        <Text>I could be a prescription, referral or the like.</Text>\n        <Text>{docProps.pdfData.title}</Text>\n        <Text>{docProps.pdfData.test}</Text>\n      </View>\n\n      {docProps.pdfData.user && (\n      <View style={styles.section}>\n        <Text>Here is some sample data</Text>\n        <Text>Staff:</Text>\n        <Text>Name: {docProps.pdfData.user.name}</Text>\n        <Text>Phone: {docProps.pdfData.user.phone}</Text>\n        <Text>Town: {docProps.pdfData.user.address.town}</Text>\n      </View>\n      )}\n      {docProps.pdfData.patient && (\n      <View style={styles.section}>\n        <Text>Here is some sample data</Text>\n        <Text>Patient</Text>\n        <Text>Name: {docProps.pdfData.patient.name}</Text>\n        <Text>Phone: {docProps.pdfData.patient.contact.phone}</Text>\n        <Text>Town: {docProps.pdfData.patient.address.town}</Text>\n      </View>\n      )}\n      {docProps.pdfData.appointment && (\n      <View style={styles.section}>\n        <Text>Here is some sample data</Text>\n        <Text>Appointment</Text>\n        <Text>Name: {docProps.pdfData.appointment.title}</Text>\n        <Text>Patient: {docProps.pdfData.appointment.patient.name}</Text>\n        <Text>Time: {docProps.pdfData.appointment.time}</Text>\n      </View>\n      )}\n    </Page>\n  </Document>\n);\n\nconst PatientReferral = () => (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n    <View style={styles.section}>\n\n        <Image src={letterheadImage}></Image>\n        <Text>{docProps.pdfData.title}</Text>\n        <Text>Dear Dr {docProps.pdfData.patient.referringDoctor.name} </Text>\n        <Text>Thank you for referring {docProps.pdfData.patient.name} </Text>\n        <Text>who I saw on {docProps.pdfData.visitDate}</Text>\n        <Text>My findings are as follows:  </Text>\n        <Text>{docProps.pdfData.findings}</Text>\n        <Text>For this I recommend the following:  </Text>\n        <Text>{docProps.pdfData.recommendation}</Text>\n        <Text>Referral: {docProps.pdfData.referral}</Text>\n\n        <Text>Visit Diagnosis:  </Text>\n        <Text>title: {docProps.pdfData.visitDiagnosis[0].title}</Text>\n        <Text>date: {new Date(docProps.pdfData.visitDiagnosis[0].date.substr(0,10)*1000).toISOString().slice(0,10)}</Text>\n        <Text>type: {docProps.pdfData.visitDiagnosis[0].type}</Text>\n        <Text>description: {docProps.pdfData.visitDiagnosis[0].description}</Text>\n\n        <Text>Visit Treatment:  </Text>\n        <Text>title:{docProps.pdfData.visitTreatment[0].title}</Text>\n        <Text>type:{docProps.pdfData.visitTreatment[0].type}</Text>\n        <Text>date: {new Date(docProps.pdfData.visitTreatment[0].date.substr(0,10)*1000).toISOString().slice(0,10)}</Text>\n        <Text>description:{docProps.pdfData.visitTreatment[0].description}</Text>\n        <Text>dose:{docProps.pdfData.visitTreatment[0].dose}</Text>\n        <Text>frequency:{docProps.pdfData.visitTreatment[0].frequency}</Text>\n\n      </View>\n    </Page>\n  </Document>\n);\n\nconst OperationReminder = () => (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n      {docProps.pdfData.patient && (\n      <View style={styles.section}>\n        <Image src={letterheadImage}></Image>\n        <Text>{docProps.pdfData.title}</Text>\n        <Text>Name: {docProps.pdfData.patient.name}</Text>\n        <Text>Age: {docProps.pdfData.patient.age}</Text>\n        <Text>Address: {docProps.pdfData.patient.address.number}, {docProps.pdfData.patient.address.street}</Text>\n        <Text>{docProps.pdfData.patient.address.town}, {docProps.pdfData.patient.address.parish}</Text>\n        <Text>Operation Name: {docProps.pdfData.name}</Text>\n        <Text>Hospital Name: {docProps.pdfData.hospitalName}</Text>\n        <Text>Address: {docProps.pdfData.hospitalAddress}</Text>\n        <Text>Date of Operation: {docProps.pdfData.date}</Text>\n        <Text>Time: {docProps.pdfData.time}</Text>\n\n        <Text>You must attend ... {docProps.pdfData.hospitalName} Hospital</Text>\n        <Text>At... {docProps.pdfData.time} ... on ... {docProps.pdfData.date} </Text>\n        <Text>You should have NOTHING to Eat or Drink after ... {docProps.pdfData.fastTime} ... on ... {docProps.pdfData.fastDate}</Text>\n        <Text>Please take night clothes, toilet articles and hospital fee with you!</Text>\n\n        <Text>Estimated Cost: {docProps.pdfData.estimateCost}</Text>\n      </View>\n      )}\n    </Page>\n  </Document>\n);\n\nconst MiscNote = () => (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n      {docProps.pdfData.patient && (\n      <View style={styles.section}>\n        <Image src={letterheadImage}></Image>\n        <Text>{docProps.pdfData.title}</Text>\n        <Text>Name: {docProps.pdfData.patient.name}</Text>\n        <Text>note #1: {docProps.pdfData.note1}</Text>\n        <Text>note #2: {docProps.pdfData.note2}</Text>\n      </View>\n      )}\n    </Page>\n  </Document>\n);\n\nconst SickNote = () => (\n  <Document>\n      <Page size=\"A4\" style={styles.page}>\n        {docProps.pdfData.patient && (\n      <View style={styles.section}>\n        <Image src={letterheadImage}></Image>\n        <Text>{docProps.pdfData.title}</Text>\n        <Text>To Whom It May Concern</Text>\n        <Text>Date: {docProps.pdfData.date}</Text>\n        <Text>{docProps.pdfData.receiverAddress}</Text>\n        <Text>Dear Sir/Madam,</Text>\n        <Text>This is to certify that I have seen and examined</Text>\n        <Text>Mr. /Mrs. /Miss: {docProps.pdfData.patient.name}</Text>\n        <Text>and recommended that she /he should refrain from active duty </Text>\n        <Text>for at least ... {docProps.pdfData.duration} days</Text>\n        <Text>commencing ... {docProps.pdfData.startDate}</Text>\n        <Text>Yours Truly</Text>\n      </View>\n      )}\n    </Page>\n  </Document>\n);\n\nconst DiagTest = () => (\n  <Document>\n      <Page size=\"A4\" style={styles.page}>\n        {docProps.pdfData.patient && (\n      <View style={styles.section}>\n        <Image src={letterheadImage}></Image>\n        <Text>{docProps.pdfData.title}</Text>\n        <Text>Date: {docProps.pdfData.date}</Text>\n        <Text>To: {docProps.pdfData.receiverAddress}</Text>\n        <Text>Name: {docProps.pdfData.patient.name}</Text>\n        <Text>Address:</Text>\n        <Text>{docProps.pdfData.patient.address.number}</Text>\n        <Text>{docProps.pdfData.patient.address.street}</Text>\n        <Text>{docProps.pdfData.patient.address.parish}</Text>\n        <Text>Diagnosis {docProps.pdfData.visitDiagnosis}</Text>\n        <Text>Test(s) Required: </Text>\n        <Text>{docProps.pdfData.requiredTests}</Text>\n      </View>\n      )}\n    </Page>\n  </Document>\n);\n\nconst InsuranceNote = () => (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n      {docProps.pdfData.patient && (\n      <View style={styles.section}>\n        <Image src={letterheadImage}></Image>\n        <Text>{docProps.pdfData.title}</Text>\n        <Text>Insurance</Text>\n        <Text>Patient's Name: {docProps.pdfData.patient.name}</Text>\n        <Text>Age: {docProps.pdfData.patient.age}</Text>\n        <Text>Address: {docProps.pdfData.patient.address.number}, {docProps.pdfData.patient.address.street}</Text>\n        <Text>{docProps.pdfData.patient.address.town}, {docProps.pdfData.patient.address.parish}</Text>\n        <Text>Subscriber: {docProps.pdfData.patientInsurance.company}</Text>\n        <Text>Policy No: {docProps.pdfData.patientInsurance.number}</Text>\n        <Text>Plan: {docProps.pdfData.patientInsurance.description}</Text>\n        <Text>Employer: {docProps.pdfData.patient.occupation.employer}</Text>\n        <Text>Proposed Operation: {docProps.pdfData.operation}</Text>\n        <Text>Date of Operation: {docProps.pdfData.operationDate}</Text>\n        <Text>Surgeon's Fee: ${docProps.pdfData.surgeonFee}</Text>\n        <Text>Assistant Surgeon's Fee: ${docProps.pdfData.assistantSurgeonFee}</Text>\n        <Text>Anesthetist's Fee: ${docProps.pdfData.anesthetistsFee}</Text>\n        <Text>Please review for approval for Surgery and Insurance payment.</Text>\n        <Text>Thanks.</Text>\n      </View>\n      )}\n    </Page>\n  </Document>\n);\n\nconst Prescription = () => (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n      {docProps.pdfData.patient && (\n      <View style={styles.section}>\n        <Image src={letterheadImage}></Image>\n        <Text>{docProps.pdfData.title}</Text>\n        <Text>Here is some sample data</Text>\n        <Text>Patient</Text>\n        <Text>Name: {docProps.pdfData.patient.name}</Text>\n        <Text>Phone: {docProps.pdfData.patient.contact.phone}</Text>\n        <Text>Town: {docProps.pdfData.patient.address.town}</Text>\n        <Text>Referral: {docProps.pdfData.referral}</Text>\n      </View>\n      )}\n    </Page>\n  </Document>\n);\n\nconst ProcedureConsent = () => (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n      {docProps.pdfData.patient && (\n      <View style={styles.section}>\n        <Image src={letterheadImage}></Image>\n        <Text>{docProps.pdfData.title}</Text>\n        <Text>Date: {docProps.pdfData.date}</Text>\n        <Text>Patient's Name: {docProps.pdfData.patient.name}</Text>\n        <Text>Patient's Age: {docProps.pdfData.patient.age}</Text>\n        <Text>I    {docProps.pdfData.consentGiver}    do hereby give consent to have </Text>\n        <Text>   {docProps.pdfData.procedure}    performed upon</Text>\n        <Text> {docProps.pdfData.consentGiverRelation} </Text>\n        <Text> The procedure, its risks and possible complications have been fully explained to me. </Text>\n        <Text> This procedure will be done uder local anesthetic and/or sedation. </Text>\n        <Text> I understand and am in agreement with proceeding with same. </Text>\n        <Text> Signed: </Text>\n        <Text> Name: </Text>\n        <Text> Signed: </Text>\n        <Text> Witness: </Text>\n        <Text> Doctor/Surgeon Signature: </Text>\n        <Text> Name: </Text>\n      </View>\n      )}\n    </Page>\n  </Document>\n);\n\nconst FitToFly = () => (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n      {docProps.pdfData.patient && (\n      <View style={styles.section}>\n        <Image src={letterheadImage}></Image>\n        <Text>{docProps.pdfData.title}</Text>\n        <Text>Date: {docProps.pdfData.date}</Text>\n        <Text>Patient's Name: {docProps.pdfData.patient.name}</Text>\n        <Text>Patient's D.O.B: {docProps.pdfData.patient.dob}</Text>\n        <Text>Patient's Age: {docProps.pdfData.patient.age}</Text>\n        <Text>Patient's Sex: {docProps.pdfData.patient.gender}</Text>\n        <Text>Clinical Features:</Text>\n        <Text>{docProps.pdfData.clinicalFeatures}</Text>\n        <Text>Provisional Investigation:</Text>\n        <Text>{docProps.pdfData.provisionalInvestigation}</Text>\n        <Text>Conclusion:</Text>\n        <Text>Name: {docProps.pdfData.patient.name}</Text>\n        <Text>Phone: {docProps.pdfData.patient.contact.phone}</Text>\n        <Text>Town: {docProps.pdfData.patient.address.town}</Text>\n        <Text>Referral: {docProps.pdfData.referral}</Text>\n      </View>\n      )}\n    </Page>\n  </Document>\n);\n\nconst TreatmentInstruction = () => (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n      {docProps.pdfData.patient && (\n      <View style={styles.section}>\n        <Image src={letterheadImage}></Image>\n        <Text>{docProps.pdfData.title}</Text>\n        <Text>Here is some sample data</Text>\n        <Text>Patient</Text>\n        <Text>Name: {docProps.pdfData.patient.name}</Text>\n        <Text>Phone: {docProps.pdfData.patient.contact.phone}</Text>\n        <Text>Town: {docProps.pdfData.patient.address.town}</Text>\n        <Text>Referral: {docProps.pdfData.referral}</Text>\n      </View>\n      )}\n    </Page>\n  </Document>\n);\n\nconst PdfCreator = (props) =>{\n    docProps = props;\n    console.log(`\n      ${docProps.pdfData.patient.insurance[1]}\n      `);\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n    <h5> Document Generator: {docProps.pdfType}</h5>\n\n    <PDFViewer>\n      {docProps.pdfType === \"test\" && (\n        <MyDocument/>\n      )}\n      {docProps.pdfType === \"patientReferral\" && (\n        <PatientReferral/>\n      )}\n      {docProps.pdfType === \"operationReminder\" && (\n        <OperationReminder/>\n      )}\n      {docProps.pdfType === \"miscNote\" && (\n        <MiscNote/>\n      )}\n      {docProps.pdfType === \"sickNote\" && (\n        <SickNote/>\n      )}\n      {docProps.pdfType === \"diagTest\" && (\n        <DiagTest/>\n      )}\n      {docProps.pdfType === \"insuranceNote\" && (\n        <InsuranceNote/>\n      )}\n      {docProps.pdfType === \"prescription\" && (\n        <Prescription/>\n      )}\n      {docProps.pdfType === \"procedureConsent\" && (\n        <ProcedureConsent/>\n      )}\n      {docProps.pdfType === \"fitToFlyAuthorization\" && (\n        <FitToFly/>\n      )}\n      {docProps.pdfType === \"treatmentInstruction\" && (\n        <TreatmentInstruction/>\n      )}\n    </PDFViewer>\n\n    <Button variant=\"danger\" onClick={props.onClosePdfCreator}>\n      close\n    </Button>\n    </div>\n\n  </div>\n)\n\n}\n\n\nexport default PdfCreator;\n"]},"metadata":{},"sourceType":"module"}