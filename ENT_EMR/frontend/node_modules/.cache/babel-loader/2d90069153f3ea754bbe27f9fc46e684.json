{"ast":null,"code":"var _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/thisUser.js\";\nimport React, { Component } from 'react';\nimport Modal from '../components/Modal/Modal';\nimport Backdrop from '../components/Backdrop/Backdrop';\nimport ThisUserProfile from '../components/Users/thisUserProfile';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport './Users.css';\n\nclass UsersPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      isLoading: false\n    };\n    this.isActive = true;\n\n    this.startCreateUserHandler = () => {\n      this.setState({\n        creating: true\n      });\n    };\n\n    this.modalConfirmHandler = () => {\n      this.setState({\n        creating: false\n      });\n      const email = this.emailElRef.current.value;\n      const password = this.passwordElRef.current.value;\n      const name = this.nameElRef.current.value;\n      const role = this.roleElRef.current.value;\n\n      if (email.trim().length === 0 || password.trim().length === 0 || name.trim().length === 0 || role.trim().length === 0) {\n        return;\n      }\n\n      const user = {\n        email,\n        password,\n        name,\n        role\n      };\n      console.log(\"updating user... \" + JSON.stringify(user));\n      const requestBody = {\n        query: \"\\n          mutation UpdateUser($email: String!, $password: String!, $name: String!, $role: String!) {\\n            updateUser(userInput: {email: $email, password: $password, name: $name, role: $role}) {\\n              _id\\n              email\\n              password\\n              name\\n              role\\n            }\\n          }\\n        \",\n        variables: {\n          email: email,\n          password: password,\n          name: name,\n          role: role\n        }\n      };\n      const token = this.context.token;\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        this.context.action1 = JSON.stringify(requestBody);\n        console.log(\"this context object...\" + JSON.stringify(this.context));\n        console.log(\"this context action1...\" + this.context.action1);\n        this.createAction(this.context.id, \"mutation\", this.context.action1);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.modalCancelHandler = () => {\n      this.setState({\n        creating: false\n      });\n    };\n\n    this.emailElRef = React.createRef();\n    this.passwordElRef = React.createRef();\n    this.nameElRef = React.createRef();\n    this.roleElRef = React.createRef();\n    this.user = null;\n  }\n\n  componentDidMount() {\n    this.getThisUser();\n  }\n\n  getThisUser() {\n    this.setState({\n      isLoading: true\n    });\n    const requestBody = {\n      query: \"\\n          query {\\n            getThisUser {\\n              _id\\n              email\\n              password\\n              name\\n              username\\n              description\\n              avatar\\n              dob\\n              phone\\n              address\\n            }\\n          }\\n        \"\n    };\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n\n      return res.json();\n    }).then(resData => {\n      // console.log(\"resdata...\" + JSON.stringify(resData));\n      const thisUser = resData.data.getThisUser;\n\n      if (this.isActive) {\n        this.setState({\n          user: thisUser,\n          isLoading: false\n        });\n        this.context.user = thisUser;\n        console.log(\"thisUser context, user object.name ...\" + this.context.user.name);\n        sessionStorage.setItem('thisUser', JSON.stringify(thisUser));\n        this.context.action1 = JSON.stringify(requestBody);\n        console.log(\"this context object...\" + JSON.stringify(this.context));\n        console.log(\"this context action1...\" + this.context.action1);\n        this.createAction(this.context.userId, \"mutation\", this.context.action1);\n      } // this.user = thisUser;\n\n    }).catch(err => {\n      console.log(err);\n\n      if (this.isActive) {\n        this.setState({\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, (this.state.creating || this.state.selectedUser) && React.createElement(Backdrop, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), this.state.creating && React.createElement(Modal, {\n      title: \"Update Profile\",\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmHandler,\n      confirmText: \"Confirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      ref: this.emailElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      ref: this.passwordElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      ref: this.nameElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      ref: this.usernameElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Bio\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      ref: this.descriptionElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Avatar Link\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"avatar\",\n      ref: this.avatarElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"address\",\n      ref: this.addressElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(\"input\", {\n      type: \"number\",\n      id: \"phone\",\n      ref: this.phoneElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Date of Birth\"), React.createElement(\"input\", {\n      type: \"datetime-local\",\n      id: \"date\",\n      ref: this.dobElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })))), this.context.token && React.createElement(\"div\", {\n      className: \"users-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Update Your Profile!\"), React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.startCreateUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Update\")), this.state.isLoading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }) : React.createElement(ThisUserProfile, {\n      user: this.state.user,\n      authUserId: this.context.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }));\n  }\n\n}\n\nUsersPage.contextType = AuthContext;\nexport default UsersPage;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/thisUser.js"],"names":["React","Component","Modal","Backdrop","ThisUserProfile","Spinner","AuthContext","UsersPage","constructor","props","state","user","isLoading","isActive","startCreateUserHandler","setState","creating","modalConfirmHandler","email","emailElRef","current","value","password","passwordElRef","name","nameElRef","role","roleElRef","trim","length","console","log","JSON","stringify","requestBody","query","variables","token","context","fetch","method","body","headers","Authorization","then","res","status","Error","json","resData","action1","createAction","id","catch","err","modalCancelHandler","createRef","componentDidMount","getThisUser","thisUser","data","sessionStorage","setItem","userId","componentWillUnmount","render","selectedUser","usernameElRef","descriptionElRef","avatarElRef","addressElRef","phoneElRef","dobElRef","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Modal from '../components/Modal/Modal';\nimport Backdrop from '../components/Backdrop/Backdrop';\nimport ThisUserProfile from '../components/Users/thisUserProfile';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport './Users.css';\n\nclass UsersPage extends Component {\n  state = {\n    user: null,\n    isLoading: false\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.emailElRef = React.createRef();\n    this.passwordElRef = React.createRef();\n    this.nameElRef = React.createRef();\n    this.roleElRef = React.createRef();\n    this.user = null;\n  }\n\n  componentDidMount() {\n    this.getThisUser();\n  }\n\n\n  startCreateUserHandler = () => {\n    this.setState({ creating: true });\n  };\n\n  modalConfirmHandler = () => {\n    this.setState({ creating: false });\n    const email = this.emailElRef.current.value;\n    const password = this.passwordElRef.current.value;\n    const name = this.nameElRef.current.value;\n    const role = this.roleElRef.current.value;\n\n    if (\n      email.trim().length === 0 ||\n      password.trim().length === 0 ||\n      name.trim().length === 0 ||\n      role.trim().length === 0\n    ) {\n      return;\n    }\n\n    const user = { email, password, name, role };\n    console.log(\"updating user... \" + JSON.stringify(user));\n\n    const requestBody = {\n      query: `\n          mutation UpdateUser($email: String!, $password: String!, $name: String!, $role: String!) {\n            updateUser(userInput: {email: $email, password: $password, name: $name, role: $role}) {\n              _id\n              email\n              password\n              name\n              role\n            }\n          }\n        `,\n        variables: {\n          email: email,\n          password: password,\n          name: name,\n          role: role\n        }\n    };\n\n    const token = this.context.token;\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n\n        this.context.action1 = JSON.stringify(requestBody);\n        console.log(\"this context object...\" + JSON.stringify(this.context));\n        console.log(\"this context action1...\" + this.context.action1);\n\n        this.createAction(this.context.id,\"mutation\",this.context.action1);\n\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false });\n  };\n\n  getThisUser() {\n\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query {\n            getThisUser {\n              _id\n              email\n              password\n              name\n              username\n              description\n              avatar\n              dob\n              phone\n              address\n            }\n          }\n        `\n    };\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(\"resdata...\" + JSON.stringify(resData));\n        const thisUser = resData.data.getThisUser;\n        if (this.isActive) {\n\n          this.setState({ user: thisUser, isLoading: false });\n\n          this.context.user = thisUser;\n          console.log(\"thisUser context, user object.name ...\" + this.context.user.name);\n\n          sessionStorage.setItem('thisUser', JSON.stringify(thisUser));\n\n          this.context.action1 = JSON.stringify(requestBody);\n          console.log(\"this context object...\" + JSON.stringify(this.context));\n          console.log(\"this context action1...\" + this.context.action1);\n\n          this.createAction(this.context.userId,\"mutation\",this.context.action1);\n\n        }\n        // this.user = thisUser;\n      })\n      .catch(err => {\n        console.log(err);\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {(this.state.creating || this.state.selectedUser) && <Backdrop />}\n        {this.state.creating && (\n          <Modal\n            title=\"Update Profile\"\n            canCancel\n            canConfirm\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.modalConfirmHandler}\n            confirmText=\"Confirm\"\n          >\n          <form>\n            <div className=\"form-control\">\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"text\" id=\"title\" ref={this.emailElRef} />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" id=\"password\" ref={this.passwordElRef} />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"name\">Name</label>\n              <input type=\"text\" id=\"name\" ref={this.nameElRef} />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"username\">Username</label>\n              <input type=\"text\" id=\"username\" ref={this.usernameElRef} />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"description\">Bio</label>\n              <input type=\"text\" id=\"description\" ref={this.descriptionElRef} />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"avatar\">Avatar Link</label>\n              <input type=\"text\" id=\"avatar\" ref={this.avatarElRef} />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"address\">Address</label>\n              <input type=\"text\" id=\"address\" ref={this.addressElRef} />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"phone\">Phone</label>\n              <input type=\"number\" id=\"phone\" ref={this.phoneElRef} />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"date\">Date of Birth</label>\n              <input type=\"datetime-local\" id=\"date\" ref={this.dobElRef} />\n            </div>\n\n          </form>\n          </Modal>\n        )}\n\n        {this.context.token && (\n          <div className=\"users-control\">\n            <p>Update Your Profile!</p>\n            <button className=\"btn\" onClick={this.startCreateUserHandler}>\n              Update\n            </button>\n          </div>\n        )}\n        {this.state.isLoading ? (\n          <Spinner />\n        ) : (\n          <ThisUserProfile\n            user={this.state.user}\n            authUserId={this.context.userId}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default UsersPage;\n"]},"metadata":{},"sourceType":"module"}