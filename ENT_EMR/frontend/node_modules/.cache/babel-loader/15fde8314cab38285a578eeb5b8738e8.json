{"ast":null,"code":"import _extends from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";import _objectSpread from\"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import Form from'react-bootstrap/Form';import Button from'react-bootstrap/Button';import Col from'react-bootstrap/Col';import Accordion from'react-bootstrap/Accordion';// import FormCheck from 'react-bootstrap/FormCheck'\n// import AuthContext from '../../context/auth-context';\nimport DatePicker from\"react-datepicker\";import'./CreateUserForm.css';var UpdateUserForm=function UpdateUserForm(props){console.log(\"UpdateUserForm.props:  \",_objectSpread({},props));var user=_extends({},props.user);console.log(\"UpdateUserForm.props.user:  \",_objectSpread({},user));// const [startDate, setStartDate] = useState(new Date());\nreturn React.createElement(\"div\",{className:\"UpdateFormContainer\"},React.createElement(Form,{onSubmit:props.onConfirm},React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridEmail\"},React.createElement(Form.Label,null,\"Email\"),React.createElement(Form.Control,{type:\"email\",placeholder:user.email})),React.createElement(Form.Group,{as:Col,controlId:\"formGridPassword\"},React.createElement(Form.Label,null,\"Password\"),React.createElement(Form.Control,{type:\"password\",placeholder:user.password}))),React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridName\"},React.createElement(Form.Label,null,\"Name\"),React.createElement(Form.Control,{type:\"text\",placeholder:user.name})),React.createElement(Form.Group,{as:Col,controlId:\"formGridPhone\"},React.createElement(Form.Label,null,\"Phone\"),React.createElement(Form.Control,{type:\"number\",placeholder:user.phone}))),React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridDob\"},React.createElement(Form.Label,null,\"D.O.B\"),React.createElement(Form.Control,{type:\"date\",placeholder:user.dob})),React.createElement(Form.Group,{as:Col,controlId:\"formGridEmploymentDate\"},React.createElement(Form.Label,null,\"Employment Date\"),React.createElement(Form.Control,{type:\"date\",placeholder:user.employmentDate})),React.createElement(Form.Group,{as:Col,controlId:\"formGridEmploymentDateTodayCheckbox\"},React.createElement(Form.Label,null,\"Today's Date\"),React.createElement(Form.Control,{type:\"checkbox\",onChange:function onChange(e){console.log(e.target.checked);}})),React.createElement(Form.Group,{as:Col,controlId:\"formGridTerminationDate\"},React.createElement(Form.Label,null,\"Termination Date\"),React.createElement(Form.Control,{type:\"date\",placeholder:user.terminationDate})),React.createElement(Form.Group,{as:Col,controlId:\"formGridTerminationDateTodayCheckbox\"},React.createElement(Form.Label,null,\"Today's Date\"),React.createElement(Form.Control,{type:\"checkbox\",onChange:function onChange(e){console.log(e.target.checked);}}))),React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridAddressNumber\"},React.createElement(Form.Label,null,\"Street No.\"),React.createElement(Form.Control,{type:\"number\",placeholder:user.address.number})),React.createElement(Form.Group,{as:Col,controlId:\"formGridAddressStreet\"},React.createElement(Form.Label,null,\"Street Name\"),React.createElement(Form.Control,{type:\"text\",placeholder:user.address.street})),React.createElement(Form.Group,{as:Col,controlId:\"formGridAddressTown\"},React.createElement(Form.Label,null,\"Town\"),React.createElement(Form.Control,{type:\"text\",placeholder:user.address.town}))),React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridAddressParish\"},React.createElement(Form.Label,null,\"Parish\"),React.createElement(Form.Control,{type:\"text\",placeholder:user.address.parish})),React.createElement(Form.Group,{as:Col,controlId:\"formGridAddressPostOffice\"},React.createElement(Form.Label,null,\"Post Office\"),React.createElement(Form.Control,{type:\"text\",placeholder:user.address.postOffice}))),props.canCancel&&React.createElement(Button,{variant:\"danger\",onClick:props.onCancel},\"Cancel\"),props.canCancelProfile&&React.createElement(Button,{variant:\"danger\",onClick:props.onCancel},\"Cancel\"),props.canConfirm&&React.createElement(Button,{variant:\"primary\",type:\"submit\"},\"Submit\")));};export default UpdateUserForm;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/components/Forms/UpdateUserForm.js"],"names":["React","Form","Button","Col","Accordion","DatePicker","UpdateUserForm","props","console","log","user","onConfirm","email","password","name","phone","dob","employmentDate","e","target","checked","terminationDate","address","number","street","town","parish","postOffice","canCancel","onCancel","canCancelProfile","canConfirm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion'\n// import FormCheck from 'react-bootstrap/FormCheck'\n// import AuthContext from '../../context/auth-context';\nimport DatePicker from \"react-datepicker\";\n\nimport './CreateUserForm.css';\n\nconst UpdateUserForm = (props) => {\n\nconsole.log(\"UpdateUserForm.props:  \", {...props});\nconst {...user} = props.user;\nconsole.log(\"UpdateUserForm.props.user:  \", {...user});\n// const [startDate, setStartDate] = useState(new Date());\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridEmail\">\n    <Form.Label>Email</Form.Label>\n    <Form.Control type=\"email\" placeholder={user.email}/>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder={user.password}/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n<Form.Group as={Col} controlId=\"formGridName\">\n  <Form.Label>Name</Form.Label>\n  <Form.Control type=\"text\" placeholder={user.name}/>\n</Form.Group>\n{\n  // <Form.Group as={Col} controlId=\"formGridRole\">\n  //   <Form.Label>Role</Form.Label>\n  //   <Form.Control type=\"text\" placeholder={user.role}/>\n  // </Form.Group>\n}\n\n<Form.Group as={Col} controlId=\"formGridPhone\">\n  <Form.Label>Phone</Form.Label>\n  <Form.Control type=\"number\" placeholder={user.phone}/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDob\">\n  <Form.Label>D.O.B</Form.Label>\n  <Form.Control type=\"date\" placeholder={user.dob}/>\n</Form.Group>\n\n{\n  // <DatePicker className=\"calendarDob\"\n  //   selected={startDate}\n  //   onChange={date => setStartDate(date)}\n  // />\n}\n\n<Form.Group as={Col} controlId=\"formGridEmploymentDate\">\n  <Form.Label>Employment Date</Form.Label>\n  <Form.Control type=\"date\" placeholder={user.employmentDate}/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridEmploymentDateTodayCheckbox\">\n  <Form.Label>Today's Date</Form.Label>\n  <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridTerminationDate\">\n  <Form.Label>Termination Date</Form.Label>\n  <Form.Control type=\"date\" placeholder={user.terminationDate}/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridTerminationDateTodayCheckbox\">\n  <Form.Label>Today's Date</Form.Label>\n  <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n</Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressNumber\">\n  <Form.Label>Street No.</Form.Label>\n  <Form.Control type=\"number\" placeholder={user.address.number}/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressStreet\">\n  <Form.Label>Street Name</Form.Label>\n  <Form.Control type=\"text\" placeholder={user.address.street}/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressTown\">\n  <Form.Label>Town</Form.Label>\n  <Form.Control type=\"text\" placeholder={user.address.town}/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressParish\">\n  <Form.Label>Parish</Form.Label>\n  <Form.Control type=\"text\" placeholder={user.address.parish}/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridAddressPostOffice\">\n  <Form.Label>Post Office</Form.Label>\n  <Form.Control type=\"text\" placeholder={user.address.postOffice}/>\n</Form.Group>\n</Form.Row>\n\n\n{props.canCancel && (\n  <Button variant=\"danger\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" type=\"submit\">\n  Submit\n  </Button>\n)}\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateUserForm;\n"]},"metadata":{},"sourceType":"module"}