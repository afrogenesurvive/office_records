{"ast":null,"code":"var _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/Appointments.js\";\nimport ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport SidebarPage from './Sidebar';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Card from 'react-bootstrap/Card'; // import Modal from '../components/Modal/Modal';\n// import Backdrop from '../components/Backdrop/Backdrop';\n\nimport AppointmentList from '../components/Appointments/AppointmentList/AppointmentList';\nimport AppointmentDetail from '../components/Appointments/AppointmentDetail';\nimport PatientDetail from '../components/Patients/PatientDetail';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport SearchAppointmentList from '../components/Appointments/AppointmentList/SearchAppointmentList';\nimport SearchAppointmentForm from '../components/Forms/SearchAppointmentForm';\nimport CreateAppointmentForm from '../components/Forms/CreateAppointmentForm';\nimport UpdateAppointmentForm from '../components/Forms/UpdateAppointmentForm';\nimport './Users.css';\n\nclass AppointmentsPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      creating: false,\n      updating: false,\n      deleting: false,\n      searching: false,\n      searchAppointments: [],\n      appointments: [],\n      isLoading: false,\n      selectedAppointment: null,\n      appointmentUpdateField: null,\n      appointmentSearchField: null,\n      appointmentSearchQuery: null\n    };\n    this.isActive = true;\n\n    this.startCreateAppointmentHandler = () => {\n      this.setState({\n        creating: true\n      });\n      console.log(\"CreateAppointmentForm...\", this.context.selectedPatient);\n    };\n\n    this.startUpdateAppointmentHandler = () => {\n      this.setState({\n        updating: true\n      });\n      console.log(\"UpdateAppointmentForm...\");\n    };\n\n    this.startSearchAppointmentHandler = () => {\n      this.setState({\n        searching: true\n      });\n      console.log(\"SearchAppointmentForm...\");\n    };\n\n    this.modalConfirmHandler = event => {\n      console.log(\"CreateAppointmentFormData:  \", event.target.formGridTitle.value);\n      this.setState({\n        creating: false\n      });\n      const userId = this.context.userId;\n      const selectedPatientId = this.context.selectedPatient._id;\n      console.log(\"\\n        userId: \".concat(userId, \"\\n        patientId: \").concat(patientId, \"\\n      \"));\n      const title = event.target.formGridTitle.value;\n      const type = event.target.formGridType.value;\n      const date = event.target.formGridDate.value;\n      const time = event.target.formGridTime.value;\n      const seenTime = event.target.formGridSeenTime.value;\n      const checkintime = event.target.formGridCheckinTime.value;\n      const location = event.target.formGridLocation.value;\n      const description = event.target.formGridDescription.value;\n      const inProgress = event.target.formGridInProgress.value;\n      const attended = event.target.formGridAttended.value;\n      const important = event.target.formGridImportant.value;\n\n      if (title.trim().length === 0 || type.trim().length === 0 || date.trim().length === 0 || time.trim().length === 0 || seenTime.trim().length === 0 || checkinTime.trim().length === 0 || location.trim().length === 0 || description.trim().length === 0 || inProgress.trim().length === 0 || attended.trim().length === 0 || important.trim().length === 0) {\n        console.log(\"blank fields detected!!!...Please try again...\");\n      }\n\n      const appointment = {\n        title,\n        type,\n        date,\n        time,\n        seenTime,\n        checkinTime,\n        location,\n        description,\n        inProgress,\n        attended,\n        important\n      };\n      console.log(\"creating appointment...\\n        title: \".concat(title, \",\\n        type: \").concat(type, \",\\n        date: \").concat(date, \",\\n        time: \").concat(time, \",\\n        seenTime: $seenTtime},\\n        checkinTime: \").concat(checkinTime, \",\\n        location: \").concat(location, \",\\n        description: \").concat(description, \",\\n        inProgress: \").concat(inProgress, \",\\n        attended: \").concat(attended, \",\\n        important: \").concat(important, \",\\n      \"));\n      const requestBody = {\n        query: \"\\n          mutation {createAppointment(userId:\\\"\".concat(userId, \"\\\",patientId:\\\"\").concat(selectedPatientId, \"\\\",appointmentInput:{title:\\\"\").concat(title, \"\\\",type:\\\"\").concat(type, \"\\\",date:\\\"\").concat(date, \"\\\",time:\\\"\").concat(time, \"\\\",seenTime:\\\"\").concat(seenTime, \"\\\",checkinTime:\\\"\").concat(checkinTime, \"\\\",location:\\\"\").concat(location, \"\\\",description:\\\"\").concat(description, \"\\\",inProgress:\").concat(inProgress, \",attended:\").concat(attended, \",important:\").concat(important, \"})\\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important}}\\n        \")\n      };\n      const token = this.context.token;\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.context.token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data.createAppointment));\n        const newAppointment = resData.data.createAppointment;\n        this.setState(prevState => {\n          const updatedAppointments = [...prevState.appointments];\n          updatedAppointments.push(newAppointment);\n          return {\n            appointments: updatedAppointments\n          };\n        });\n        this.fetchAppointments();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.modalCancelHandler = () => {\n      this.setState({\n        creating: false,\n        updating: false,\n        searching: false,\n        selectedAppointment: null\n      });\n    };\n\n    this.modalConfirmUpdateHandler = event => {\n      if (this.context.user.role !== 'admin') {\n        console.log(\"Not the Admin! No edit permission!!\");\n      }\n\n      const userId = this.context.userId;\n      const appointmentId = this.context.selectedAppointment._id; // const patientId = this.context.selectedPatientId;\n\n      console.log(\"\\n        userId: \".concat(userId, \"\\n        appointmentd: \").concat(appointmentId, \",\\n      \")); // console.log(\"UpdateUserFormData:  \", event);\n\n      console.log(\"UpdateAppointmentFormData:  \", event.target.formGridTitle.value);\n      this.setState({\n        updating: false\n      });\n      let title = event.target.formGridTitle.value;\n      let type = event.target.formGridType.value;\n      let date = event.target.formGridDate.value;\n      let time = event.target.formGridTime.value;\n      const seenTime = event.target.formGridSeenTime.value;\n      const checkintime = event.target.formGridCheckinTime.value;\n      let location = event.target.formGridLocation.value;\n      let description = event.target.formGridDescription.value;\n      let inProgress = event.target.formGridInProgress.value;\n      let attended = event.target.formGridAttended.value;\n      let important = event.target.formGridImportant.value;\n      let notes = event.target.formGridNotes.value;\n\n      if (title.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        title = this.context.selectedAppointment.title; // return;\n      }\n\n      if (type.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        type = this.context.selectedAppointment.type;\n      }\n\n      if (date.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        date = this.context.selectedAppointment.date;\n      }\n\n      if (time.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        time = this.context.selectedAppointment.time;\n      }\n\n      if (seenTime.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        seenTime = this.context.selectedAppointment.seenTime;\n      }\n\n      if (checkinTime.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        checkinTime = this.context.selectedAppointment.checkinTime;\n      }\n\n      if (location.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        location = this.context.selectedAppointment.location;\n      }\n\n      if (description.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        description = this.context.selectedAppointment.description;\n      }\n\n      if (inProgress.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        inProgress = this.context.selectedAppointment.inProgress;\n      }\n\n      if (attended.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        attended = this.context.selectedAppointment.attended;\n      }\n\n      if (important.trim().length === 0) {\n        console.log(\"blank fields detected!!!...filling w/ previous data...\");\n        important = this.context.selectedAppointment.important;\n      }\n\n      const appointment = {\n        title,\n        type,\n        date,\n        time,\n        seenTime,\n        checkinTime,\n        location,\n        description,\n        inProgress,\n        attended,\n        important\n      };\n      console.log(\"creating appointment...\\n        title: \".concat(title, \",\\n        type: \").concat(type, \",\\n        date: \").concat(date, \",\\n        time: \").concat(time, \",\\n        seenTime: $seenTtime},\\n        checkinTime: \").concat(checkinTime, \",\\n        location: \").concat(location, \",\\n        description: \").concat(description, \",\\n        inProgress: \").concat(inProgress, \",\\n        attended: \").concat(attended, \",\\n        important: \").concat(important, \",\\n      \"));\n      const requestBody = {\n        query: \"\\n      mutation {updateAppointment(userId:\\\"\".concat(userId, \"\\\",patientId:\\\"\").concat(selectedPatientId, \"\\\",appointmentInput:{title:\\\"\").concat(title, \"\\\",type:\\\"\").concat(type, \"\\\",date:\\\"\").concat(date, \"\\\",time:\\\"\").concat(time, \"\\\",seenTime:\\\"\").concat(seenTime, \"\\\",checkinTime:\\\"\").concat(checkinTime, \"\\\",location:\\\"\").concat(location, \"\\\",description:\\\"\").concat(description, \"\\\",inProgress:\").concat(inProgress, \",attended:\").concat(attended, \",important:\").concat(important, \"})\\n      {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important}}\\n        \")\n      };\n      const token = this.context.token;\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const updatedAppointmentId = resData.data.updateAppointment._id;\n        const updatedAppointment = this.state.appointments.find(e => e._id === updatedAppointmentId);\n        const updatedAppointmentPos = this.state.appointments.indexOf(updatedAppointment);\n        const slicedArray = this.state.appointments.splice(updatedAppointmentPos, 1);\n        console.log(\"updatedAppointment:  \", JSON.stringify(updatedAppointment), \"  updatedPatientPos:  \", updatedAppointmentPos, \"  slicedArray:  \", slicedArray);\n        this.state.appointments.push(resData.data.updateAppointment);\n        this.fetchAppointments();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.updateAppointmentPatientHandler = event => {\n      const token = this.context.token;\n      const userId = this.context.userId;\n      let selectedAppointmentId = this.context.selectedAppointment._id;\n      let selectedPatientId = this.context.selectedPatient._id;\n\n      if (this.context.user.role !== 'admin') {\n        console.log(\"No edit permission!!\");\n        return;\n      }\n\n      this.setState({\n        updating: false,\n        patientUpdateField: null\n      });\n      console.log(\"\\n      updating appointment patient...\\n      userId: \".concat(userId, \",\\n      appointmentId: \").concat(selectedAppointmentId, \",\\n      patientId: \").concat(selectedPatientId, \",\\n      \"));\n      const requestBody = {\n        query: \"\\n        mutation {updateAppointmentPatient(userId:\\\"\".concat(userId, \"\\\",appointmentId:\\\"\").concat(selectedAppointmentId, \"\\\",patientId:\\\"\").concat(selectedPatientId, \"\\\")\\n        {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title},consultant{reference{_id,name,role}}},inProgress,attended,important}}\\n        \")\n      };\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const updatedAppointmentId = resData.data.updateAppointmentPatient._id;\n        const updatedAppointment = this.state.appointments.find(e => e._id === updatedAppointmentId);\n        const updatedAppointmentPos = this.state.appointments.indexOf(updatedAppointment);\n        const slicedArray = this.state.appointments.splice(updatedAppointmentPos, 1);\n        console.log(\"updatedAppointment:  \", JSON.stringify(updatedAppointment), \"  updatedPatientPos:  \", updatedAppointmentPos, \"  slicedArray:  \", slicedArray);\n        this.state.appointments.push(resData.data.updateAppointmentPatient);\n        this.fetchAppointments();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.modalConfirmSearchHandler = event => {\n      console.log(\"SearchAppointmentForm:  \");\n      let userId = this.context.userId;\n      console.log(\"SearchAppointmentFormData:  \", event.target.formBasicField.value);\n      this.setState({\n        searching: false\n      });\n      let field = event.target.formBasicField.value;\n      let query = event.target.formBasicQuery.value;\n\n      if (field.trim().length === 0 || query.trim().length === 0) {\n        console.log(\"blank fields detected!!!...Please try again...\");\n        return;\n      }\n\n      const search = {\n        field,\n        query\n      };\n      console.log(\"Searching for Appointment:  \", JSON.stringify(search));\n      const requestBody = {\n        query: \"\\n          query {getAppointmentField(userId:\\\"\".concat(userId, \"\\\", field:\\\"\").concat(field, \"\\\", query:\\\"\").concat(query, \"\\\")\\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title},consultant{reference{_id,name,role}}},inProgress,attended,important}}\\n        \")\n      };\n      const token = this.context.token;\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n        const searchAppointments = resData.data.getAppointmentField;\n        this.setState({\n          searchAppointments: searchAppointments\n        });\n        console.log(\"state.searchAppointments:  \", this.state.searchAppointments); // this.fetchAppointments();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.modalCancelHandler = () => {\n      this.setState({\n        creating: false,\n        updating: false,\n        searching: false,\n        selectedAppointment: null\n      });\n    };\n\n    this.modalDeleteHandler = () => {\n      console.log(\"deleting appointment...selectedAppointment:  \", this.context.selectedAppointment);\n      const selectedAppointmentId = this.context.selectedAppointment._id;\n\n      if (this.context.user.role !== 'admin') {\n        console.log(\"Not the Admin! No edit permission!!\");\n      }\n\n      this.setState({\n        deleting: true\n      });\n      const requestBody = {\n        query: \"\\n          mutation {deleteAppointment(userId:\\\"\".concat(userId, \"\\\",appointmentId:\\\"\").concat(selectedAppointmentId, \"\\\")\\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important,notes}}\\n        \")\n      };\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.context.token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"resData:  \", resData); // console.log(\"resData.data.deleteAppointment:  \", resData.data.deleteAppointment);\n\n        let deletedAppointment = resData.data.deleteAppointment;\n        console.log(deletedAppointment);\n        let deletedAppointmentId = deletedAppointment._id;\n        deletedAppointment = this.state.appointments.find(e => e._id === deletedAppointmentId);\n        const deletedAppointmentPos = this.state.appointments.indexOf(deletedAppointment);\n        const slicedArray = this.state.appointments.splice(deletedAppointmentPos, 1);\n        console.log(\"deletedAppointment:  \", JSON.stringify(deletedAppointment), \"  deletedUserPos:  \", deletedAppointmentPos, \"  slicedArray:  \", slicedArray);\n        this.setState({\n          deleting: false\n        });\n        this.fetchAppointments();\n      }).catch(err => {\n        console.log(err);\n\n        if (this.isActive) {\n          this.setState({\n            deleting: false\n          });\n        }\n      });\n    };\n\n    this.showDetailHandler = appointmentId => {\n      this.setState(prevState => {\n        const selectedAppointment = prevState.appointments.find(e => e._id === appointmentId);\n        this.setState({\n          selectedAppointment: selectedAppointment\n        });\n        this.context.selectedAppointment = selectedAppointment;\n        console.log(\"selectedAppointment:  \", selectedAppointment);\n        return {\n          selecteAppointment: selectedAppointment\n        };\n      });\n    };\n  }\n\n  // constructor(props) {\n  //   super(props);\n  // }\n  componentDidMount() {\n    this.fetchAppointments();\n    this.fetchAppointmentToday();\n    this.fetchAppointmentInProgress();\n  }\n\n  fetchAppointments() {\n    console.log(\"'fetch appointments function' context object... \" + JSON.stringify(this.context));\n    const userId = this.context.userId;\n    this.setState({\n      isLoading: true\n    });\n    const requestBody = {\n      query: \"\\n            query {appointments(userId:\\\"\".concat(userId, \"\\\")\\n            {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,consultant{reference{_id,name,role}}},inProgress,attended,important}}\\n        \")\n    };\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n\n      return res.json();\n    }).then(resData => {\n      const appointments = resData.data.appointments;\n      console.log(appointments);\n      this.context.appointments = this.state.appointments;\n\n      if (this.isActive) {\n        this.setState({\n          appointments: appointments,\n          isLoading: false\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n\n      if (this.isActive) {\n        this.setState({\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  updateAppointmentSpecial(event) {\n    console.log(\"special field to update:  \", event.target.value);\n    const field = event.target.value;\n    this.setState({\n      appointmentUpdateField: field\n    });\n  }\n\n  fetchAppointmentToday() {\n    console.log(\"fetching todays appts function:  \");\n    const token = this.context.token;\n    const userId = this.context.userId;\n    const requestBody = {\n      query: \"\\n          query {getAppointmentToday(userId:\\\"\".concat(userId, \"\\\")\\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\\n        \")\n    };\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n\n      return res.json();\n    }).then(resData => {\n      this.context.appointmentsToday = resData.data.getAppointmentToday;\n      console.log(\"context today's appts:  \", JSON.stringify(this.context.appointmentsToday));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  fetchAppointmentInProgress() {\n    console.log(\"fetching inProgress appts function:  \");\n    const token = this.context.token;\n    const userId = this.context.userId;\n    const requestBody = {\n      query: \"\\n          query {getAppointmentField(userId:\\\"\".concat(userId, \"\\\",field:\\\"inProgress\\\",query:\\\"true\\\"){_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\\n        \")\n    };\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n\n      return res.json();\n    }).then(resData => {\n      this.context.appointmentsInProgress = resData.data.getAppointmentField;\n      console.log(\"context in progress appts:  \", JSON.stringify(this.context.appointmentsInProgress));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    }, React.createElement(Accordion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 3,\n      className: \"MasterCol1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650\n      },\n      __self: this\n    }, React.createElement(SidebarPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 6,\n      className: \"MasterCol2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"containerCombinedDetail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"appointmentDetail\",\n      id: \"uncontrolled-tab-example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      eventKey: \"Edit\",\n      title: \"Edit:\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      eventKey: \"appointmentDetail\",\n      title: \"Details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662\n      },\n      __self: this\n    }, this.state.selectedAppointment === null && React.createElement(Button, {\n      variant: \"outline-warning\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664\n      },\n      __self: this\n    }, \"Select an Appointment from the Master List below\"), this.state.isLoading === false && this.state.selectedAppointment !== null && React.createElement(AppointmentDetail, {\n      authUserId: this.context.userId,\n      appointment: this.state.selectedAppointment,\n      onEdit: this.startUpdateAppointmentHandler,\n      onDelete: this.modalDeleteHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"appointmentCreate\",\n      title: \"New\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.startCreateAppointmentHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683\n      },\n      __self: this\n    }, \"Create\"), this.state.creating && this.context.selectedPatient._id && React.createElement(CreateAppointmentForm, {\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmHandler,\n      onSubmit: this.modalConfirmHandler,\n      confirmText: \"Confirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"appointmentEditBasic\",\n      title: \"Basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698\n      },\n      __self: this\n    }, this.state.selectedAppointment === null && React.createElement(Button, {\n      variant: \"outline-warning\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    }, \"Select an Appointment from the Master List below\"), this.state.selectedAppointment !== null && React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.startUpdateAppointmentHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705\n      },\n      __self: this\n    }, \"Edit Basic\"), this.state.updating && this.state.selectedAppointment !== null && React.createElement(UpdateAppointmentForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmUpdateHandler,\n      confirmText: \"Confirm\",\n      appointment: this.state.selectedAppointment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"appointmentEditField\",\n      title: \"Single Field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722\n      },\n      __self: this\n    }, this.state.selectedAppointment === null && React.createElement(Button, {\n      variant: \"outline-warning\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724\n      },\n      __self: this\n    }, \"Select a Patient from the Master List below\"), this.state.selectedAppointment !== null && React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.startUpdateAppointmentHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729\n      },\n      __self: this\n    }, \"Edit Field\"), this.state.updating && this.state.selectedAppointment !== null && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734\n      },\n      __self: this\n    }, \"Update Appointment Field\")), React.createElement(Tab, {\n      eventKey: \"appointmentEditPatient\",\n      title: \"Patient\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738\n      },\n      __self: this\n    }, this.state.selectedAppointment === null && React.createElement(Button, {\n      variant: \"outline-warning\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740\n      },\n      __self: this\n    }, \"Select an Appointment from the Master List below\"), this.state.selectedAppointment !== null && React.createElement(Button, {\n      variant: \"outline-primary\",\n      value: \"patient\",\n      onClick: this.updateAppointmentSpecial.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745\n      },\n      __self: this\n    }, \"Change Patient:\"), this.state.selectedAppointment !== null && this.context.selectedPatient !== null && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 8,\n      className: \"updateUserColAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751\n      },\n      __self: this\n    }, \"Add Patient: \", this.context.selectedPatient.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752\n      },\n      __self: this\n    }, \" To Appointment: \", this.state.selectedAppointment.title, \" ??\"), React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.updateAppointmentPatientHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753\n      },\n      __self: this\n    }, \"Yes\")))))), React.createElement(Container, {\n      className: \"containerUserMasterList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"searchListRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764\n      },\n      __self: this\n    }, this.state.isLoading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766\n      },\n      __self: this\n    }) : React.createElement(AppointmentList, {\n      appointments: this.state.appointments,\n      authUserId: this.context.userId,\n      onViewDetail: this.showDetailHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      md: 3,\n      className: \"MasterCol3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"containerSearchUserInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"searchUserRowAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782\n      },\n      __self: this\n    }, this.context.token && React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"primary\",\n      eventKey: \"14\",\n      onClick: this.startSearchAppointmentHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784\n      },\n      __self: this\n    }, \"Search\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"14\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"searchUserRowForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 10,\n      className: \"searchUserColForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"userPatient\",\n      id: \"uncontrolled-tab-example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      eventKey: \"Search\",\n      title: \"Search:\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      eventKey: \"Field\",\n      title: \"Field:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795\n      },\n      __self: this\n    }, this.state.searching === true && React.createElement(SearchAppointmentForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmSearchHandler,\n      confirmText: \"Search\",\n      appointment: this.context.selectedAppointment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 797\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"Id\",\n      title: \"Id:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807\n      },\n      __self: this\n    }, \"Search by ID\"), React.createElement(Tab, {\n      eventKey: \"Patient\",\n      title: \"Patient:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810\n      },\n      __self: this\n    }, \"Search by Patient\"), React.createElement(Tab, {\n      eventKey: \"Date\",\n      title: \"Date:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813\n      },\n      __self: this\n    }, \"Search by Date\"), React.createElement(Tab, {\n      eventKey: \"Date Range\",\n      title: \"Date Range:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816\n      },\n      __self: this\n    }, \"Search by Date Range\"))), React.createElement(Col, {\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821\n      },\n      __self: this\n    })))), React.createElement(Container, {\n      className: \"containerSearchUserResults\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 828\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"searchCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      className: \"searchCardBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832\n      },\n      __self: this\n    }, \"Your Search\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833\n      },\n      __self: this\n    }, \"Field: \", this.state.appointmentSearchField), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836\n      },\n      __self: this\n    }, \"Query: \", this.state.appointmentSearchQuery)))), React.createElement(Row, {\n      className: \"searchListRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842\n      },\n      __self: this\n    }, this.state.searchAppointments !== [] && React.createElement(SearchAppointmentList, {\n      searchAppointments: this.state.searchAppointments,\n      authUserId: this.context.userId,\n      onCancel: this.modalCancelHandler,\n      onViewDetail: this.showDetailHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845\n      },\n      __self: this\n    }))))), React.createElement(Container, {\n      className: \"containerUserDetail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"createUserRowAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      className: \"createUserColAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 866\n      },\n      __self: this\n    }, \"Appointment Detail\")), React.createElement(Col, {\n      md: 6,\n      className: \"createUserColAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"10\",\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869\n      },\n      __self: this\n    }, \"Details\"))), React.createElement(Accordion.Collapse, {\n      eventKey: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"createUserRowForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 11,\n      className: \"createUserColForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877\n      },\n      __self: this\n    }, this.state.isLoading === false && this.state.selectedAppointment !== null && React.createElement(AppointmentDetail, {\n      authUserId: this.context.userId,\n      appointment: this.state.selectedAppointment,\n      onEdit: this.startUpdateAppointmentHandler,\n      onDelete: this.modalDeleteHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883\n      },\n      __self: this\n    }))))), React.createElement(Container, {\n      className: \"containerCreateuser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"createUserRowAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 897\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 2,\n      className: \"createUserColAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 898\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 899\n      },\n      __self: this\n    }, \"Add New Appointment\")), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901\n      },\n      __self: this\n    }, this.context.token && React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"11\",\n      className: \"btn\",\n      onClick: this.startCreateAppointmentHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 903\n      },\n      __self: this\n    }, \"Add\")), React.createElement(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 908\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 909\n      },\n      __self: this\n    }, \"Patient\")), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911\n      },\n      __self: this\n    }, this.context.selectedPatient && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913\n      },\n      __self: this\n    }, this.context.selectedPatient.name))), React.createElement(Accordion.Collapse, {\n      eventKey: \"11\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"createUserRowForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      className: \"createUserColForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 920\n      },\n      __self: this\n    }, this.state.creating && this.context.selectedPatient._id && React.createElement(CreateAppointmentForm, {\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmHandler,\n      onSubmit: this.modalConfirmHandler,\n      confirmText: \"Confirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      className: \"updateUserRowAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 938\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 2,\n      className: \"updateUserCol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 940\n      },\n      __self: this\n    }, \"Edit Selected Appointment\")), React.createElement(Col, {\n      md: 4,\n      className: \"updateUserCol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 942\n      },\n      __self: this\n    }, this.context.token && React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"12\",\n      className: \"btn\",\n      onClick: this.startUpdateAppointmentHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 944\n      },\n      __self: this\n    }, \"Basic Info & Demographics\")), React.createElement(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 950\n      },\n      __self: this\n    }, \"Appointment\")), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 952\n      },\n      __self: this\n    }, this.context.selectedAppointment && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954\n      },\n      __self: this\n    }, this.context.selectedAppointment.title))), React.createElement(Row, {\n      className: \"createUserRowAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 959\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 3,\n      className: \"updateUserCol2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 960\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 961\n      },\n      __self: this\n    }, \"Edit Selected Appointment\")), React.createElement(Col, {\n      md: 9,\n      className: \"updateUserCol2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 963\n      },\n      __self: this\n    }, this.context.token && React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"13\",\n      className: \"btn\",\n      value: \"patient\",\n      onClick: this.updateAppointmentSpecial.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 965\n      },\n      __self: this\n    }, \"Patient\"))), React.createElement(Accordion.Collapse, {\n      eventKey: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 972\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"updateUserRowForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 973\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 10,\n      className: \"updateUserColForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 974\n      },\n      __self: this\n    }, this.state.updating && this.state.selectedAppointment !== null && React.createElement(UpdateAppointmentForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmUpdateHandler,\n      confirmText: \"Confirm\",\n      appointment: this.state.selectedAppointment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978\n      },\n      __self: this\n    })))), React.createElement(Accordion.Collapse, {\n      eventKey: \"13\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 992\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"updateUserRowForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 993\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 10,\n      className: \"updateUserColForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 994\n      },\n      __self: this\n    }, this.state.appointmentUpdateField === 'patient' && this.state.selectedAppointment !== null && this.context.selectedPatient !== null && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1013\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 8,\n      className: \"updateUserColAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1014\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1015\n      },\n      __self: this\n    }, \"Add Patient: \", this.context.selectedPatient.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1016\n      },\n      __self: this\n    }, \" To Appointment: \", this.state.selectedAppointment.title, \" ??\"), React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"13\",\n      className: \"btn\",\n      onClick: this.updateAppointmentPatientHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1017\n      },\n      __self: this\n    }, \"Yes\"))))))), React.createElement(Container, {\n      className: \"containerSearchuser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1031\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"createUserRowAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1032\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      className: \"createUserColAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1033\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1034\n      },\n      __self: this\n    }, \"Search for a Appointment\")), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1036\n      },\n      __self: this\n    }, this.context.token && React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"14\",\n      className: \"btn\",\n      onClick: this.startSearchAppointmentHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1038\n      },\n      __self: this\n    }, \"Search\"))), React.createElement(Accordion.Collapse, {\n      eventKey: \"14\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1046\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"createUserRowForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1047\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 10,\n      className: \"createUserColForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1048\n      },\n      __self: this\n    }, this.state.searching === true && React.createElement(SearchAppointmentForm, {\n      authUserId: this.context.userId,\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmSearchHandler,\n      confirmText: \"Search\",\n      appointment: this.context.selectedAppointment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1051\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1062\n      },\n      __self: this\n    })))), React.createElement(Accordion.Collapse, {\n      eventKey: \"14\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"containerSearchuser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1070\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"searchListRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1071\n      },\n      __self: this\n    }, this.state.searchAppointments !== [] && React.createElement(SearchAppointmentList, {\n      searchAppointments: this.state.searchAppointments,\n      authUserId: this.context.userId,\n      onCancel: this.modalCancelHandler,\n      onViewDetail: this.showDetailHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1074\n      },\n      __self: this\n    })))), React.createElement(Container, {\n      className: \"containerSearchuser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1086\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"searchListRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1087\n      },\n      __self: this\n    }, this.state.isLoading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1090\n      },\n      __self: this\n    }) : React.createElement(AppointmentList, {\n      appointments: this.state.appointments,\n      authUserId: this.context.userId,\n      onViewDetail: this.showDetailHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1092\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nAppointmentsPage.contextType = AuthContext;\nexport default AppointmentsPage;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/Appointments.js"],"names":["ReactDOM","React","Component","Container","Row","Col","Button","Accordion","SidebarPage","Tabs","Tab","Card","AppointmentList","AppointmentDetail","PatientDetail","Spinner","AuthContext","SearchAppointmentList","SearchAppointmentForm","CreateAppointmentForm","UpdateAppointmentForm","AppointmentsPage","state","creating","updating","deleting","searching","searchAppointments","appointments","isLoading","selectedAppointment","appointmentUpdateField","appointmentSearchField","appointmentSearchQuery","isActive","startCreateAppointmentHandler","setState","console","log","context","selectedPatient","startUpdateAppointmentHandler","startSearchAppointmentHandler","modalConfirmHandler","event","target","formGridTitle","value","userId","selectedPatientId","_id","patientId","title","type","formGridType","date","formGridDate","time","formGridTime","seenTime","formGridSeenTime","checkintime","formGridCheckinTime","location","formGridLocation","description","formGridDescription","inProgress","formGridInProgress","attended","formGridAttended","important","formGridImportant","trim","length","checkinTime","appointment","requestBody","query","token","fetch","method","body","JSON","stringify","headers","Authorization","then","res","status","Error","json","resData","data","createAppointment","newAppointment","prevState","updatedAppointments","push","fetchAppointments","catch","err","modalCancelHandler","modalConfirmUpdateHandler","user","role","appointmentId","notes","formGridNotes","updatedAppointmentId","updateAppointment","updatedAppointment","find","e","updatedAppointmentPos","indexOf","slicedArray","splice","updateAppointmentPatientHandler","selectedAppointmentId","patientUpdateField","updateAppointmentPatient","modalConfirmSearchHandler","formBasicField","field","formBasicQuery","search","getAppointmentField","modalDeleteHandler","deletedAppointment","deleteAppointment","deletedAppointmentId","deletedAppointmentPos","showDetailHandler","selecteAppointment","componentDidMount","fetchAppointmentToday","fetchAppointmentInProgress","updateAppointmentSpecial","appointmentsToday","getAppointmentToday","appointmentsInProgress","componentWillUnmount","render","bind","name","contextType"],"mappings":"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","sourcesContent":["import ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport SidebarPage from './Sidebar';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Card from 'react-bootstrap/Card';\n\n// import Modal from '../components/Modal/Modal';\n// import Backdrop from '../components/Backdrop/Backdrop';\nimport AppointmentList from '../components/Appointments/AppointmentList/AppointmentList';\nimport AppointmentDetail from '../components/Appointments/AppointmentDetail';\nimport PatientDetail from '../components/Patients/PatientDetail';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport SearchAppointmentList from '../components/Appointments/AppointmentList/SearchAppointmentList';\nimport SearchAppointmentForm from '../components/Forms/SearchAppointmentForm';\n\nimport CreateAppointmentForm from '../components/Forms/CreateAppointmentForm';\nimport UpdateAppointmentForm from '../components/Forms/UpdateAppointmentForm';\nimport './Users.css';\n\nclass AppointmentsPage extends Component {\n  state = {\n    creating: false,\n    updating: false,\n    deleting: false,\n    searching: false,\n    searchAppointments: [],\n    appointments: [],\n    isLoading: false,\n    selectedAppointment: null,\n    appointmentUpdateField: null,\n    appointmentSearchField: null,\n    appointmentSearchQuery: null,\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  componentDidMount() {\n    this.fetchAppointments();\n    this.fetchAppointmentToday();\n    this.fetchAppointmentInProgress();\n  }\n\n\n  startCreateAppointmentHandler = () => {\n    this.setState({ creating: true });\n    console.log(\"CreateAppointmentForm...\", this.context.selectedPatient);\n  };\n  startUpdateAppointmentHandler = () => {\n    this.setState({ updating: true });\n    console.log(\"UpdateAppointmentForm...\");\n  };\n  startSearchAppointmentHandler = () => {\n    this.setState({ searching: true });\n    console.log(\"SearchAppointmentForm...\");\n  };\n\n  modalConfirmHandler = (event) => {\n\n    console.log(\"CreateAppointmentFormData:  \", event.target.formGridTitle.value);\n\n    this.setState({ creating: false });\n    const userId = this.context.userId;\n    const selectedPatientId = this.context.selectedPatient._id;\n    console.log(`\n        userId: ${userId}\n        patientId: ${patientId}\n      `);\n\n    const title = event.target.formGridTitle.value;\n    const type = event.target.formGridType.value;\n    const date = event.target.formGridDate.value;\n    const time = event.target.formGridTime.value;\n    const seenTime = event.target.formGridSeenTime.value;\n    const checkintime = event.target.formGridCheckinTime.value;\n    const location = event.target.formGridLocation.value;\n    const description = event.target.formGridDescription.value;\n    const inProgress = event.target.formGridInProgress.value;\n    const attended = event.target.formGridAttended.value;\n    const important = event.target.formGridImportant.value;\n\n    if (\n      title.trim().length === 0 ||\n      type.trim().length === 0 ||\n      date.trim().length === 0 ||\n      time.trim().length === 0 ||\n      seenTime.trim().length === 0 ||\n      checkinTime.trim().length === 0 ||\n      location.trim().length === 0 ||\n      description.trim().length === 0 ||\n      inProgress.trim().length === 0 ||\n      attended.trim().length === 0 ||\n      important.trim().length === 0\n    ) {\n      console.log(\"blank fields detected!!!...Please try again...\");\n    }\n\n    const appointment = { title, type, date, time, seenTime, checkinTime, location, description, inProgress, attended, important };\n    console.log(`creating appointment...\n        title: ${title},\n        type: ${type},\n        date: ${date},\n        time: ${time},\n        seenTime: $seenTtime},\n        checkinTime: ${checkinTime},\n        location: ${location},\n        description: ${description},\n        inProgress: ${inProgress},\n        attended: ${attended},\n        important: ${important},\n      `);\n\n    const requestBody = {\n      query: `\n          mutation {createAppointment(userId:\"${userId}\",patientId:\"${selectedPatientId}\",appointmentInput:{title:\"${title}\",type:\"${type}\",date:\"${date}\",time:\"${time}\",seenTime:\"${seenTime}\",checkinTime:\"${checkinTime}\",location:\"${location}\",description:\"${description}\",inProgress:${inProgress},attended:${attended},important:${important}})\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important}}\n        `,\n    };\n\n    const token = this.context.token;\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData.data.createAppointment));\n        const newAppointment = resData.data.createAppointment;\n        this.setState(prevState => {\n          const updatedAppointments = [...prevState.appointments];\n          updatedAppointments.push(newAppointment);\n\n          return { appointments: updatedAppointments };\n        });\n\n        this.fetchAppointments();\n\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, updating: false, searching: false, selectedAppointment: null });\n  };\n\n\n  modalConfirmUpdateHandler = (event) => {\n\n    if(this.context.user.role !== 'admin') {\n      console.log(\"Not the Admin! No edit permission!!\");\n\n    }\n\n    const userId = this.context.userId;\n    const appointmentId = this.context.selectedAppointment._id;\n    // const patientId = this.context.selectedPatientId;\n    console.log(`\n        userId: ${userId}\n        appointmentd: ${appointmentId},\n      `);\n\n    // console.log(\"UpdateUserFormData:  \", event);\n    console.log(\"UpdateAppointmentFormData:  \", event.target.formGridTitle.value);\n\n\n    this.setState({ updating: false });\n    let title = event.target.formGridTitle.value;\n    let type = event.target.formGridType.value;\n    let date = event.target.formGridDate.value;\n    let time = event.target.formGridTime.value;\n    const seenTime = event.target.formGridSeenTime.value;\n    const checkintime = event.target.formGridCheckinTime.value;\n    let location = event.target.formGridLocation.value;\n    let description = event.target.formGridDescription.value;\n    let inProgress = event.target.formGridInProgress.value;\n    let attended = event.target.formGridAttended.value;\n    let important = event.target.formGridImportant.value;\n    let notes = event.target.formGridNotes.value;\n\n    if (title.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      title  = this.context.selectedAppointment.title;\n      // return;\n    }\n    if (type.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      type  = this.context.selectedAppointment.type;\n    }\n    if (date.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      date  = this.context.selectedAppointment.date;\n    }\n    if (time.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      time  = this.context.selectedAppointment.time;\n    }\n    if (seenTime.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      seenTime  = this.context.selectedAppointment.seenTime;\n    }\n    if (checkinTime.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      checkinTime  = this.context.selectedAppointment.checkinTime;\n    }\n    if (location.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      location  = this.context.selectedAppointment.location;\n    }\n    if (description.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      description  = this.context.selectedAppointment.description;\n    }\n    if (inProgress.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      inProgress  = this.context.selectedAppointment.inProgress;\n    }\n    if (attended.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      attended  = this.context.selectedAppointment.attended;\n    }\n    if (important.trim().length === 0 ) {\n      console.log(\"blank fields detected!!!...filling w/ previous data...\");\n      important  = this.context.selectedAppointment.important;\n    }\n\n    const appointment = { title, type, date, time, seenTime, checkinTime, location, description, inProgress, attended, important };\n    console.log(`creating appointment...\n        title: ${title},\n        type: ${type},\n        date: ${date},\n        time: ${time},\n        seenTime: $seenTtime},\n        checkinTime: ${checkinTime},\n        location: ${location},\n        description: ${description},\n        inProgress: ${inProgress},\n        attended: ${attended},\n        important: ${important},\n      `);\n\n    const requestBody = {\n      query: `\n      mutation {updateAppointment(userId:\"${userId}\",patientId:\"${selectedPatientId}\",appointmentInput:{title:\"${title}\",type:\"${type}\",date:\"${date}\",time:\"${time}\",seenTime:\"${seenTime}\",checkinTime:\"${checkinTime}\",location:\"${location}\",description:\"${description}\",inProgress:${inProgress},attended:${attended},important:${important}})\n      {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important}}\n        `\n    };\n\n    const token = this.context.token;\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"response data... \" + JSON.stringify(resData));\n\n        const updatedAppointmentId = resData.data.updateAppointment._id;\n        const updatedAppointment = this.state.appointments.find(e => e._id === updatedAppointmentId);\n        const updatedAppointmentPos = this.state.appointments.indexOf(updatedAppointment);\n        const slicedArray = this.state.appointments.splice(updatedAppointmentPos, 1);\n        console.log(\"updatedAppointment:  \", JSON.stringify(updatedAppointment),\"  updatedPatientPos:  \", updatedAppointmentPos, \"  slicedArray:  \", slicedArray);\n\n        this.state.appointments.push(resData.data.updateAppointment);\n        this.fetchAppointments();\n\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n\n  updateAppointmentPatientHandler = (event) => {\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n    let selectedAppointmentId = this.context.selectedAppointment._id;\n    let selectedPatientId = this.context.selectedPatient._id;\n    if(\n      this.context.user.role !== 'admin'\n    ) {\n      console.log(\"No edit permission!!\");\n      return;\n    }\n\n    this.setState({ updating: false , patientUpdateField: null });\n\n    console.log(`\n      updating appointment patient...\n      userId: ${userId},\n      appointmentId: ${selectedAppointmentId},\n      patientId: ${selectedPatientId},\n      `);\n\n      const requestBody = {\n        query:`\n        mutation {updateAppointmentPatient(userId:\\\"${userId}\\\",appointmentId:\\\"${selectedAppointmentId}\\\",patientId:\\\"${selectedPatientId}\\\")\n        {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title},consultant{reference{_id,name,role}}},inProgress,attended,important}}\n        `\n      }\n\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData));\n\n          const updatedAppointmentId = resData.data.updateAppointmentPatient._id;\n          const updatedAppointment = this.state.appointments.find(e => e._id === updatedAppointmentId);\n          const updatedAppointmentPos = this.state.appointments.indexOf(updatedAppointment);\n          const slicedArray = this.state.appointments.splice(updatedAppointmentPos, 1);\n          console.log(\"updatedAppointment:  \", JSON.stringify(updatedAppointment),\"  updatedPatientPos:  \", updatedAppointmentPos, \"  slicedArray:  \", slicedArray);\n\n          this.state.appointments.push(resData.data.updateAppointmentPatient);\n          this.fetchAppointments();\n\n        })\n        .catch(err => {\n          console.log(err);\n        });\n\n\n  }\n\n\n  modalConfirmSearchHandler = (event) => {\n    console.log(\"SearchAppointmentForm:  \");\n\n\n    let userId = this.context.userId;\n\n      console.log(\"SearchAppointmentFormData:  \", event.target.formBasicField.value);\n      this.setState({ searching: false });\n\n      let field = event.target.formBasicField.value;\n      let query = event.target.formBasicQuery.value;\n\n      if (\n        field.trim().length === 0 ||\n        query.trim().length === 0\n      ) {\n        console.log(\"blank fields detected!!!...Please try again...\");\n        return;\n      }\n\n      const search = { field, query }\n      console.log(\"Searching for Appointment:  \", JSON.stringify(search));\n\n      const requestBody = {\n        query: `\n          query {getAppointmentField(userId:\"${userId}\", field:\"${field}\", query:\"${query}\")\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title},consultant{reference{_id,name,role}}},inProgress,attended,important}}\n        `}\n\n      const token = this.context.token;\n\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(\"response data... \" + JSON.stringify(resData));\n\n          const searchAppointments = resData.data.getAppointmentField;\n\n          this.setState({ searchAppointments: searchAppointments})\n          console.log(\"state.searchAppointments:  \", this.state.searchAppointments);\n          // this.fetchAppointments();\n        })\n        .catch(err => {\n          console.log(err);\n        });\n  }\n\n\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, updating: false, searching: false, selectedAppointment: null });\n  };\n\n\n  fetchAppointments() {\n    console.log(\"'fetch appointments function' context object... \" + JSON.stringify(this.context));\n    const userId = this.context.userId;\n\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n            query {appointments(userId:\"${userId}\")\n            {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,consultant{reference{_id,name,role}}},inProgress,attended,important}}\n        `};\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const appointments = resData.data.appointments;\n        console.log(appointments);\n\n        this.context.appointments = this.state.appointments;\n        if (this.isActive) {\n          this.setState({ appointments: appointments, isLoading: false });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  modalDeleteHandler = () => {\n    console.log(\"deleting appointment...selectedAppointment:  \", this.context.selectedAppointment);\n\n    const selectedAppointmentId = this.context.selectedAppointment._id;\n\n    if(this.context.user.role !== 'admin') {\n      console.log(\"Not the Admin! No edit permission!!\");\n    }\n\n    this.setState({deleting: true});\n\n\n    const requestBody = {\n      query: `\n          mutation {deleteAppointment(userId:\"${userId}\",appointmentId:\"${selectedAppointmentId}\")\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important,notes}}\n        `};\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"resData:  \", resData);\n        // console.log(\"resData.data.deleteAppointment:  \", resData.data.deleteAppointment);\n        let deletedAppointment = resData.data.deleteAppointment;\n        console.log(deletedAppointment);\n\n        let deletedAppointmentId = deletedAppointment._id;\n        deletedAppointment = this.state.appointments.find(e => e._id === deletedAppointmentId);\n        const deletedAppointmentPos = this.state.appointments.indexOf(deletedAppointment);\n        const slicedArray = this.state.appointments.splice(deletedAppointmentPos, 1);\n        console.log(\"deletedAppointment:  \", JSON.stringify(deletedAppointment),\"  deletedUserPos:  \", deletedAppointmentPos, \"  slicedArray:  \", slicedArray);\n\n        this.setState({ deleting: false });\n\n        this.fetchAppointments();\n\n      })\n      .catch(err => {\n        console.log(err);\n        if (this.isActive) {\n          this.setState({ deleting: false });\n        }\n      });\n\n\n  }\n\n  updateAppointmentSpecial (event) {\n\n    console.log(\"special field to update:  \", event.target.value);\n    const field = event.target.value;\n    this.setState({ appointmentUpdateField: field});\n\n  }\n\n\n  showDetailHandler = appointmentId => {\n\n    this.setState(prevState => {\n      const selectedAppointment = prevState.appointments.find(e => e._id === appointmentId);\n      this.setState({selectedAppointment: selectedAppointment});\n      this.context.selectedAppointment = selectedAppointment;\n      console.log(\"selectedAppointment:  \", selectedAppointment);\n      return { selecteAppointment: selectedAppointment };\n    });\n  };\n\n\n  fetchAppointmentToday() {\n    console.log(\"fetching todays appts function:  \");\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n\n    const requestBody = {\n      query: `\n          query {getAppointmentToday(userId:\"${userId}\")\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        `\n    };\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.context.appointmentsToday = resData.data.getAppointmentToday;\n        console.log(\"context today's appts:  \", JSON.stringify(this.context.appointmentsToday));\n\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n\n  }\n\n\n  fetchAppointmentInProgress() {\n    console.log(\"fetching inProgress appts function:  \");\n\n    const token = this.context.token;\n    const userId = this.context.userId;\n\n    const requestBody = {\n      query: `\n          query {getAppointmentField(userId:\\\"${userId}\\\",field:\\\"inProgress\\\",query:\\\"true\\\"){_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        `\n    };\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.context.appointmentsInProgress = resData.data.getAppointmentField;\n        console.log(\"context in progress appts:  \", JSON.stringify(this.context.appointmentsInProgress));\n\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n\n  }\n\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n\n      <Accordion>\n\n      <Row>\n\n      <Col md={3} className=\"MasterCol1\">\n\n      <SidebarPage/>\n\n      </Col>\n\n      <Col md={6} className=\"MasterCol2\">\n\n          <Container className=\"containerCombinedDetail\">\n            <Tabs defaultActiveKey=\"appointmentDetail\" id=\"uncontrolled-tab-example\">\n            <Tab eventKey=\"Edit\" title=\"Edit:\" disabled>\n            </Tab>\n              <Tab eventKey=\"appointmentDetail\" title=\"Details\">\n                  {this.state.selectedAppointment === null && (\n                    <Button variant=\"outline-warning\" size=\"lg\">\n                      Select an Appointment from the Master List below\n                    </Button>\n                  )}\n                  {\n                    this.state.isLoading === false &&\n                    this.state.selectedAppointment !== null\n                    &&\n                    (\n                      <AppointmentDetail\n                      authUserId={this.context.userId}\n                      appointment={this.state.selectedAppointment}\n                      onEdit={this.startUpdateAppointmentHandler}\n                      onDelete={this.modalDeleteHandler}\n                  />\n                )}\n              </Tab>\n\n              <Tab eventKey=\"appointmentCreate\" title=\"New\">\n              <Button variant=\"outline-primary\" onClick={this.startCreateAppointmentHandler} >Create</Button>\n              {\n                this.state.creating && this.context.selectedPatient._id\n                && (\n                  <CreateAppointmentForm\n                  canCancel\n                    canConfirm\n                    onCancel={this.modalCancelHandler}\n                    onConfirm={this.modalConfirmHandler}\n                    onSubmit={this.modalConfirmHandler}\n                    confirmText=\"Confirm\"\n                  />\n              )}\n              </Tab>\n\n              <Tab eventKey=\"appointmentEditBasic\" title=\"Basic\">\n              {this.state.selectedAppointment === null && (\n                <Button variant=\"outline-warning\" size=\"lg\">\n                  Select an Appointment from the Master List below\n                </Button>\n              )}\n              {this.state.selectedAppointment !== null && (\n                <Button variant=\"outline-primary\" onClick={this.startUpdateAppointmentHandler}>Edit Basic</Button>\n              )}\n              {this.state.updating &&\n                this.state.selectedAppointment !== null\n                && (\n                <UpdateAppointmentForm\n                authUserId={this.context.userId}\n                canCancel\n                  canConfirm\n                  onCancel={this.modalCancelHandler}\n                  onConfirm={this.modalConfirmUpdateHandler}\n                  confirmText=\"Confirm\"\n                  appointment={this.state.selectedAppointment}\n                />\n              )}\n              </Tab>\n\n              <Tab eventKey=\"appointmentEditField\" title=\"Single Field\">\n              {this.state.selectedAppointment === null && (\n                <Button variant=\"outline-warning\" size=\"lg\">\n                  Select a Patient from the Master List below\n                </Button>\n              )}\n              {this.state.selectedAppointment !== null && (\n                <Button variant=\"outline-primary\" onClick={this.startUpdateAppointmentHandler}>Edit Field</Button>\n              )}\n              {this.state.updating &&\n                this.state.selectedAppointment !== null\n                && (\n                  <p>Update Appointment Field</p>\n              )}\n              </Tab>\n\n              <Tab eventKey=\"appointmentEditPatient\" title=\"Patient\">\n              {this.state.selectedAppointment === null && (\n                <Button variant=\"outline-warning\" size=\"lg\">\n                  Select an Appointment from the Master List below\n                </Button>\n              )}\n              {this.state.selectedAppointment !== null && (\n                <Button variant=\"outline-primary\" value='patient' onClick={this.updateAppointmentSpecial.bind(this)}>Change Patient:</Button>\n              )}\n              {this.state.selectedAppointment !== null &&\n              this.context.selectedPatient !== null && (\n                <Row>\n                <Col md={8} className=\"updateUserColAdd\">\n                <p>Add Patient: {this.context.selectedPatient.name}</p>\n                <p> To Appointment: {this.state.selectedAppointment.title} ??</p>\n                <Button variant=\"success\" onClick={this.updateAppointmentPatientHandler}>\n                  Yes\n                </Button>\n                </Col>\n                </Row>\n              )}\n              </Tab>\n            </Tabs>\n          </Container>\n\n          <Container className=\"containerUserMasterList\">\n          <Row className=\"searchListRow\">\n          {this.state.isLoading ? (\n            <Spinner />\n          ) : (\n            <AppointmentList\n              appointments={this.state.appointments}\n              authUserId={this.context.userId}\n              onViewDetail={this.showDetailHandler}\n            />\n          )}\n          </Row>\n          </Container>\n      </Col>\n\n\n      <Col md={3} className=\"MasterCol3\">\n\n      <Container className=\"containerSearchUserInput\">\n      <Row className=\"searchUserRowAdd\">\n        {this.context.token && (\n        <Accordion.Toggle as={Button} variant=\"primary\" eventKey=\"14\" onClick={this.startSearchAppointmentHandler}>\n        Search\n        </Accordion.Toggle>)}\n      </Row>\n\n      <Accordion.Collapse eventKey=\"14\">\n      <Row className=\"searchUserRowForm\">\n      <Col md={10} className=\"searchUserColForm\">\n      <Tabs defaultActiveKey=\"userPatient\" id=\"uncontrolled-tab-example\">\n      <Tab eventKey=\"Search\" title=\"Search:\" disabled>\n      </Tab>\n      <Tab eventKey=\"Field\" title=\"Field:\">\n      {this.state.searching === true && (\n        <SearchAppointmentForm\n        authUserId={this.context.userId}\n        canCancel\n          canConfirm\n          onCancel={this.modalCancelHandler}\n          onConfirm={this.modalConfirmSearchHandler}\n          confirmText=\"Search\"\n          appointment={this.context.selectedAppointment}\n        />)}\n      </Tab>\n      <Tab eventKey=\"Id\" title=\"Id:\">\n        Search by ID\n      </Tab>\n      <Tab eventKey=\"Patient\" title=\"Patient:\">\n        Search by Patient\n      </Tab>\n      <Tab eventKey=\"Date\" title=\"Date:\">\n        Search by Date\n      </Tab>\n      <Tab eventKey=\"Date Range\" title=\"Date Range:\">\n        Search by Date Range\n      </Tab>\n      </Tabs>\n      </Col>\n      <Col md={10}>\n      </Col>\n      </Row>\n      </Accordion.Collapse>\n      </Container>\n\n\n      <Container className=\"containerSearchUserResults\">\n      <Row>\n        <Card className=\"searchCard\">\n          <Card.Body className=\"searchCardBody\">\n            <Card.Title>Your Search</Card.Title>\n            <Card.Text>\n              Field: {this.state.appointmentSearchField}\n            </Card.Text>\n            <Card.Text>\n              Query: {this.state.appointmentSearchQuery}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Row>\n      <Row className=\"searchListRow\">\n      {\n        this.state.searchAppointments !== [] && (\n        <SearchAppointmentList\n          searchAppointments={this.state.searchAppointments}\n          authUserId={this.context.userId}\n          onCancel={this.modalCancelHandler}\n            onViewDetail={this.showDetailHandler}\n        />\n      )}\n      </Row>\n      </Container>\n\n\n    </Col>\n    </Row>\n\n\n\n\n      <Container className=\"containerUserDetail\">\n\n      <Row className=\"createUserRowAdd\">\n      <Col md={4} className=\"createUserColAdd\">\n      <p>Appointment Detail</p>\n      </Col>\n      <Col md={6} className=\"createUserColAdd\">\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"10\" className=\"btn\">\n      Details\n      </Accordion.Toggle>\n      </Col>\n      </Row>\n\n      <Accordion.Collapse eventKey=\"10\">\n      <Row className=\"createUserRowForm\">\n      <Col md={11} className=\"createUserColForm\">\n      {\n        this.state.isLoading === false &&\n        this.state.selectedAppointment !== null\n        &&\n        (\n          <AppointmentDetail\n          authUserId={this.context.userId}\n          appointment={this.state.selectedAppointment}\n          onEdit={this.startUpdateAppointmentHandler}\n          onDelete={this.modalDeleteHandler}\n      />\n    )}\n      </Col>\n      </Row>\n      </Accordion.Collapse>\n\n      </Container>\n\n      <Container className=\"containerCreateuser\">\n      <Row className=\"createUserRowAdd\">\n      <Col md={2} className=\"createUserColAdd\">\n        <p>Add New Appointment</p>\n      </Col>\n      <Col md={4}>\n        {this.context.token && (\n          <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"11\" className=\"btn\" onClick={this.startCreateAppointmentHandler}>\n          Add\n          </Accordion.Toggle>\n        )}\n      </Col>\n      <Col md={2}>\n        <p>Patient</p>\n      </Col>\n      <Col md={4}>\n        {this.context.selectedPatient && (\n          <p>{this.context.selectedPatient.name}</p>\n        )}\n      </Col>\n      </Row>\n\n      <Accordion.Collapse eventKey=\"11\">\n      <Row className=\"createUserRowForm\">\n      <Col md={12} className=\"createUserColForm\">\n      {\n        this.state.creating && this.context.selectedPatient._id\n        && (\n          <CreateAppointmentForm\n          canCancel\n            canConfirm\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.modalConfirmHandler}\n            onSubmit={this.modalConfirmHandler}\n            confirmText=\"Confirm\"\n          />\n      )}\n      </Col>\n      </Row>\n      </Accordion.Collapse>\n\n\n      <Row className=\"updateUserRowAdd\">\n      <Col md={2} className=\"updateUserCol\">\n      <p>Edit Selected Appointment</p>\n      </Col>\n      <Col md={4} className=\"updateUserCol\">\n      {this.context.token && (\n        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"12\" className=\"btn\" onClick={this.startUpdateAppointmentHandler}>\n        Basic Info & Demographics\n        </Accordion.Toggle>\n      )}\n      </Col>\n      <Col md={2}>\n        <p>Appointment</p>\n      </Col>\n      <Col md={4}>\n        {this.context.selectedAppointment && (\n          <p>{this.context.selectedAppointment.title}</p>\n        )}\n      </Col>\n      </Row>\n\n      <Row className=\"createUserRowAdd\">\n      <Col md={3} className=\"updateUserCol2\">\n      <p>Edit Selected Appointment</p>\n      </Col>\n      <Col md={9} className=\"updateUserCol2\">\n      {this.context.token && (\n        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"13\" className=\"btn\" value='patient' onClick={this.updateAppointmentSpecial.bind(this)}>\n        Patient\n        </Accordion.Toggle>\n      )}\n      </Col>\n      </Row>\n\n      <Accordion.Collapse eventKey=\"12\">\n      <Row className=\"updateUserRowForm\">\n      <Col md={10} className=\"updateUserColForm\">\n      {this.state.updating &&\n        this.state.selectedAppointment !== null\n        && (\n        <UpdateAppointmentForm\n        authUserId={this.context.userId}\n        canCancel\n          canConfirm\n          onCancel={this.modalCancelHandler}\n          onConfirm={this.modalConfirmUpdateHandler}\n          confirmText=\"Confirm\"\n          appointment={this.state.selectedAppointment}\n        />\n      )}\n      </Col>\n      </Row>\n      </Accordion.Collapse>\n\n      <Accordion.Collapse eventKey=\"13\">\n      <Row className=\"updateUserRowForm\">\n      <Col md={10} className=\"updateUserColForm\">\n      {\n      //   this.state.appointmentUpdateField === 'patient' &&\n      // this.state.selectedAppointment !== null\n      // && (\n      //   <UpdateAppointmentPatientForm\n      //   authUserId={this.context.userId}\n      //   canCancel\n      //     canConfirm\n      //     onCancel={this.modalCancelHandler}\n      //     onConfirm={this.updateAppointmentPatientHandler}\n      //     confirmText=\"Confirm\"\n      //     appointment={this.state.selectedAppointment}\n      //   />\n      // )\n    }\n      {this.state.appointmentUpdateField === 'patient' &&\n      this.state.selectedAppointment !== null &&\n      this.context.selectedPatient !== null && (\n        <Row>\n        <Col md={8} className=\"updateUserColAdd\">\n        <p>Add Patient: {this.context.selectedPatient.name}</p>\n        <p> To Appointment: {this.state.selectedAppointment.title} ??</p>\n        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"13\" className=\"btn\" onClick={this.updateAppointmentPatientHandler}>\n        Yes\n        </Accordion.Toggle>\n        </Col>\n        </Row>\n      )}\n      </Col>\n      </Row>\n      </Accordion.Collapse>\n\n      </Container>\n\n\n\n      <Container className=\"containerSearchuser\">\n    <Row className=\"createUserRowAdd\">\n    <Col md={4} className=\"createUserColAdd\">\n      <p>Search for a Appointment</p>\n    </Col>\n    <Col md={8}>\n      {this.context.token && (\n        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"14\" className=\"btn\" onClick={this.startSearchAppointmentHandler}>\n        Search\n        </Accordion.Toggle>\n      )}\n\n    </Col>\n    </Row>\n\n    <Accordion.Collapse eventKey=\"14\">\n    <Row className=\"createUserRowForm\">\n    <Col md={10} className=\"createUserColForm\">\n    {\n      this.state.searching === true &&\n      <SearchAppointmentForm\n      authUserId={this.context.userId}\n      canCancel\n        canConfirm\n        onCancel={this.modalCancelHandler}\n        onConfirm={this.modalConfirmSearchHandler}\n        confirmText=\"Search\"\n        appointment={this.context.selectedAppointment}\n      />\n    }\n    </Col>\n    <Col md={10}>\n\n    </Col>\n    </Row>\n    </Accordion.Collapse>\n    </Container>\n\n  <Accordion.Collapse eventKey=\"14\">\n    <Container className=\"containerSearchuser\">\n    <Row className=\"searchListRow\">\n    {\n      this.state.searchAppointments !== [] &&\n      <SearchAppointmentList\n        searchAppointments={this.state.searchAppointments}\n        authUserId={this.context.userId}\n        onCancel={this.modalCancelHandler}\n          onViewDetail={this.showDetailHandler}\n      />\n    }\n    </Row>\n    </Container>\n    </Accordion.Collapse>\n\n\n    <Container className=\"containerSearchuser\">\n  <Row className=\"searchListRow\">\n\n  {this.state.isLoading ? (\n    <Spinner />\n  ) : (\n    <AppointmentList\n      appointments={this.state.appointments}\n      authUserId={this.context.userId}\n      onViewDetail={this.showDetailHandler}\n    />\n  )}\n\n  </Row>\n  </Container>\n  </Accordion>\n\n        {\n        //   this.state.isLoading === false &&\n        //   (<PatientDetail\n        //     authUserId={this.context.userId}\n        //     patient={this.context.selectedPatient}\n        //     className=\"PatientDetailBox2\"\n        // />)\n      }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AppointmentsPage;\n"]},"metadata":{},"sourceType":"module"}