{"ast":null,"code":"var _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/Auth.js\";\nimport React, { Component } from 'react';\nimport './Auth.css';\nimport AuthContext from '../context/auth-context'; // import ThisUserContext from '../context/thisUser-context';\n\nclass AuthPage extends Component {\n  // state = {\n  //   isLogin: true\n  // };\n  // static contextType = ThisUserContext;\n  constructor(props) {\n    super(props);\n\n    this.submitHandler = event => {\n      console.log(\"login function...\");\n      event.preventDefault();\n      const email = this.emailEl.current.value;\n      const password = this.passwordEl.current.value;\n\n      if (email.trim().length === 0 || password.trim().length === 0) {\n        return;\n      }\n\n      let requestBody = {\n        query: \"\\n        query Login($email: String!, $password: String!) {\\n          login(email: $email, password: $password) {\\n            userId\\n            token\\n            tokenExpiration\\n          }\\n        }\\n      \",\n        variables: {\n          email: email,\n          password: password\n        }\n      };\n      fetch('http://localhost:10000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(\"your data... \" + JSON.stringify(resData.data));\n\n        if (resData.data.login.token) {\n          this.context.login(resData.data.login.token, resData.data.login.userId, resData.data.login.tokenExpiration);\n          const sessionStorageLoginInfo = {\n            token: resData.data.login.token,\n            userId: resData.data.login.userId,\n            tokenExpiration: resData.data.login.tokenExpiration\n          }; // sessionStorage.setItem('login info', sessionStorageLoginInfo);\n\n          sessionStorage.setItem('login info', JSON.stringify(sessionStorageLoginInfo));\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.emailEl = React.createRef();\n    this.passwordEl = React.createRef();\n  } // switchModeHandler = () => {\n  //   this.setState(prevState => {\n  //     return { isLogin: !prevState.isLogin };\n  //   });\n  // };\n\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"auth-form\",\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"E-Mail\"), React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      ref: this.emailEl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      ref: this.passwordEl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nAuthPage.contextType = AuthContext;\nexport default AuthPage;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/office_records/ENT_EMR/frontend/src/pages/Auth.js"],"names":["React","Component","AuthContext","AuthPage","constructor","props","submitHandler","event","console","log","preventDefault","email","emailEl","current","value","password","passwordEl","trim","length","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","login","token","context","userId","tokenExpiration","sessionStorageLoginInfo","sessionStorage","setItem","catch","err","createRef","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './Auth.css';\nimport AuthContext from '../context/auth-context';\n// import ThisUserContext from '../context/thisUser-context';\n\nclass AuthPage extends Component {\n  // state = {\n  //   isLogin: true\n  // };\n\n  static contextType = AuthContext;\n  // static contextType = ThisUserContext;\n\n  constructor(props) {\n    super(props);\n    this.emailEl = React.createRef();\n    this.passwordEl = React.createRef();\n  }\n\n  // switchModeHandler = () => {\n  //   this.setState(prevState => {\n  //     return { isLogin: !prevState.isLogin };\n  //   });\n  // };\n\n\n  submitHandler = event => {\n    console.log(\"login function...\");\n    event.preventDefault();\n    const email = this.emailEl.current.value;\n    const password = this.passwordEl.current.value;\n\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      return;\n    }\n\n    let requestBody = {\n      query: `\n        query Login($email: String!, $password: String!) {\n          login(email: $email, password: $password) {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      `,\n      variables: {\n        email: email,\n        password: password\n      }\n    };\n\n\n    fetch('http://localhost:10000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"your data... \" + JSON.stringify(resData.data));\n        if (resData.data.login.token) {\n          this.context.login(\n            resData.data.login.token,\n            resData.data.login.userId,\n            resData.data.login.tokenExpiration\n          );\n\n          const sessionStorageLoginInfo = {\n            token: resData.data.login.token,\n            userId: resData.data.login.userId,\n            tokenExpiration: resData.data.login.tokenExpiration\n          };\n\n          // sessionStorage.setItem('login info', sessionStorageLoginInfo);\n          sessionStorage.setItem('login info', JSON.stringify(sessionStorageLoginInfo));\n\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\n        <div className=\"form-control\">\n          <label htmlFor=\"email\">E-Mail</label>\n          <input type=\"email\" id=\"email\" ref={this.emailEl} />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" ref={this.passwordEl} />\n        </div>\n        <div className=\"form-actions\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default AuthPage;\n"]},"metadata":{},"sourceType":"module"}