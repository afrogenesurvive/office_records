(this.webpackJsonpent_emr_dev=this.webpackJsonpent_emr_dev||[]).push([[0],{113:function(e,t,a){},114:function(e,t,a){},115:function(e,t,a){},116:function(e,t,a){},144:function(e,t,a){},218:function(e,t,a){},228:function(e,t,a){},25:function(e,t,a){},281:function(e,t,a){},29:function(e,t,a){},30:function(e,t,a){},300:function(e,t,a){e.exports=a(533)},306:function(e,t,a){},307:function(e,t,a){},351:function(e,t,a){},353:function(e,t,a){},354:function(e,t,a){},355:function(e,t){},357:function(e,t){},399:function(e,t){},400:function(e,t){},529:function(e,t,a){},530:function(e,t,a){},531:function(e,t,a){},532:function(e,t,a){},533:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),i=a(124),l=a.n(i),o=(a(305),a(306),a(48)),c=a(49),s=a(51),m=a(50),d=a(52),p=a(68),u=a(87),h=a(3),f=a(2),g=a(22),E=(a(218),r.a.createContext({token:null,userId:null,user:{},users:[],selectedUser:{},selectedPatient:{},selectedAppointment:{},patient:{},appointment:{},appointmentPatientId:null,userUpdateField:null,patientUpdateField:null,appointmentUpdateField:null,appointmentsToday:null,appointmentsWeekImportant:null,appointmentsInProgress:null,userAlert:null,visit:null,file:null,fancyDate:null,creds:null,login:function(e,t,a){},logout:function(){}})),y=a(163),v=(a(307),function(e){var t="Alerts shown here";return null!==e.alert&&(t='"'+e.alert+'"'),console.log("\n      alert: ".concat(t,",\n    ")),r.a.createElement("div",{className:"alertBox"},r.a.createElement(y.a,{variant:"warning"},t))}),N=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(a=Object(s.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(r)))).state={userAlert:null},a.submitHandler=function(e){console.log("login function..."),e.preventDefault();var t=e.target.formBasicEmail.value,n=e.target.formBasicPassword.value;if(0!==t.trim().length&&0!==n.trim().length){var r={query:'\n        query {\n          login(email: "'.concat(t,'", password: "').concat(n,'") {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(r),headers:{"Content-Type":"application/json"}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=JSON.stringify(e.data).slice(2,25);console.log("\n          resData slice: ".concat(t,",\n          resData: ").concat(JSON.stringify(e.data),",\n          ")),a.setState({userAlert:t}),e.data.login.token&&a.context.login(e.data.login.token,e.data.login.userId,e.data.login.tokenExpiration)})).catch((function(e){console.log(e),a.setState({userAlert:e})}))}},a}return Object(d.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){return r.a.createElement(g.a,null,r.a.createElement(v,{authUserId:this.context.userId,alert:this.state.userAlert}),r.a.createElement(f.a,{className:"auth-form",onSubmit:this.submitHandler},r.a.createElement(f.a.Group,{controlId:"formBasicEmail"},r.a.createElement(f.a.Label,null,"Email address"),r.a.createElement(f.a.Control,{type:"email",placeholder:"Enter email"}),r.a.createElement(f.a.Text,{className:"text-muted"},"We'll never share your email with anyone else.")),r.a.createElement(f.a.Group,{controlId:"formBasicPassword"},r.a.createElement(f.a.Label,null,"Password"),r.a.createElement(f.a.Control,{type:"password",placeholder:"Password"})),r.a.createElement(h.a,{variant:"outline-success",type:"submit",className:"loginButton",size:"lg"},"Login"),r.a.createElement(h.a,{variant:"outline-warning",className:"loginButton",size:"lg"},r.a.createElement(p.b,{to:"/signup"},"Signup"))))}}]),t}(n.Component);N.contextType=E;var b=N,I=a(5),x=a(12),C=a(15),D=(a(224),a(25),function(e){return console.log("CreateUserForm...",Object(x.a)({},e)),r.a.createElement("div",{className:"CreateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridEmail"},r.a.createElement(f.a.Label,null,"Email"),r.a.createElement(f.a.Control,{type:"email",placeholder:"Enter email"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridPassword"},r.a.createElement(f.a.Label,null,"Password"),r.a.createElement(f.a.Control,{type:"password",placeholder:"Password"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridName"},r.a.createElement(f.a.Label,null,"Name"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Name"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridRole"},r.a.createElement(f.a.Label,null,"Role"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"guest"),r.a.createElement("option",null,"nurse"),r.a.createElement("option",null,"doctor"),r.a.createElement("option",null,"staff"))),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridPhone"},r.a.createElement(f.a.Label,null,"Phone"),r.a.createElement(f.a.Control,{type:"number",placeholder:"phone"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridDob"},r.a.createElement(f.a.Label,null,"D.O.B"),r.a.createElement(f.a.Control,{type:"date",placeholder:"Date of Birth"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridEmploymentDate"},r.a.createElement(f.a.Label,null,"Employment Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"employmentDate"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridEmploymentDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTerminationDate"},r.a.createElement(f.a.Label,null,"Termination Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"terminationDate"}))),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTerminationDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressNumber"},r.a.createElement(f.a.Label,null,"Street No."),r.a.createElement(f.a.Control,{type:"number",placeholder:"addressNumber"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressStreet"},r.a.createElement(f.a.Label,null,"Street Name"),r.a.createElement(f.a.Control,{type:"text",placeholder:"addressStreet"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressTown"},r.a.createElement(f.a.Label,null,"Town"),r.a.createElement(f.a.Control,{type:"text",placeholder:"addressTown"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressParish"},r.a.createElement(f.a.Label,null,"Parish"),r.a.createElement(f.a.Control,{type:"text",placeholder:"addressParish"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressPostOffice"},r.a.createElement(f.a.Label,null,"Post Office"),r.a.createElement(f.a.Control,{type:"text",placeholder:"addressPostOffice"}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"0",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"success",type:"submit"},"Create"),r.a.createElement("p",null,e.successText)))}),S=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(a=Object(s.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(r)))).state={success:"Signup!!",userAlert:null},a.modalConfirmHandler=function(e){e.preventDefault(),console.log("signing up..."),console.log("CreateUserFormData:  ",e.target.formGridEmail.value),a.setState({creating:!1});var t=e.target.formGridEmail.value,n=e.target.formGridPassword.value,r=e.target.formGridName.value,i=e.target.formGridRole.value,l=e.target.formGridDob.value,o=e.target.formGridPhone.value,c=e.target.formGridAddressNumber.value,s=e.target.formGridAddressStreet.value,m=e.target.formGridAddressTown.value,d=e.target.formGridAddressParish.value,p=e.target.formGridAddressPostOffice.value,u=e.target.formGridEmploymentDate.value;!0===e.target.formGridEmploymentDateTodayCheckbox.checked&&(u=(new Date).toISOString().slice(0,10));var h=e.target.formGridTerminationDate.value;if(!0===e.target.formGridTerminationDateTodayCheckbox.checked&&(h=(new Date).toISOString().slice(0,10)),0===t.trim().length||0===n.trim().length||0===r.trim().length||0===i.trim().length||0===l.trim().length||0===o.trim().length||0===c.trim().length||0===s.trim().length||0===m.trim().length||0===d.trim().length||0===p.trim().length||0===u.trim().length||0===h.trim().length)return console.log("blank fields detected!!!...Please try again..."),void a.setState({userAlert:"blank fields detected!!!...Please try again..."});var f=a.context.token,g=a.context.userId;console.log("\n      creating user...\n      userId: ".concat(g,"\n      email: ").concat(t,",\n      password: ").concat(n,",\n      name: ").concat(r,",\n      role: ").concat(i,",\n      dob: ").concat(l,",\n      phone: ").concat(o,",\n      addressNumber: ").concat(c,",\n      addressStreet: ").concat(s,",\n      addressTown: ").concat(m,",\n      addressParish: ").concat(d,",\n      addressPostOffice: ").concat(p,",\n      employmentDate: ").concat(u,",\n      terminationDate: ").concat(h,",\n      ")),a.setState({userAlert:"creating user..."});var E={query:'\n          mutation {\n            createUser(userInput: {email:"'.concat(t,'",password:"').concat(n,'",name:"').concat(r,'",role:"').concat(i,'",\n\n            employmentDate:"').concat(u,'",terminationDate:"').concat(h,'"})\n            {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n          }\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(E),headers:{"Content-Type":"application/json",Authorization:"Bearer "+f}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e)),console.log("resData head slice:  ",JSON.stringify(e).slice(2,7)),"error"===JSON.stringify(e).slice(2,7)?(console.log("signup...failed..."),a.setState({success:"Something went wrong!!!"})):(a.setState({success:"Signup success...Proceed to login"}),console.log(a.state.success)),a.setState({userAlert:JSON.stringify(e).slice(2,7)})})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a}return Object(d.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(g.a,null,r.a.createElement(v,{authUserId:this.context.userId,alert:this.state.userAlert}),r.a.createElement(I.a,{className:"signupRow",md:8},r.a.createElement(D,{canConfirm:!0,onConfirm:this.modalConfirmHandler,onSubmit:this.modalConfirmHandler,confirmText:"Confirm",successText:this.state.success}))))}}]),t}(n.Component),P=a(162),A=a(53),T=a.n(A),w=a(43),O=a(54),U=a(8),G=a(7),k=a(4),L=(a(113),function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_master"},r.a.createElement("div",null,r.a.createElement("h5",{className:"userItemHeading"}," Name:"),r.a.createElement("p",{className:"userItemText"},e.name),r.a.createElement("h5",{className:"userItemHeading"}," Role:"),r.a.createElement("p",{className:"userItemText"},e.role)),r.a.createElement("div",null,r.a.createElement(h.a,{variant:"primary",onClick:e.onDetail.bind(void 0,e._id)},"Details")))}),_=(a(114),function(e){var t=e.users.map((function(t){return r.a.createElement(L,{key:t._id,userId:e.authUserId,_id:t._id,name:t.name,email:t.email,role:t.role,onDetail:e.onViewDetail})}));return r.a.createElement("ul",{className:"user__list1_master"},t)}),F=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_master"},r.a.createElement("div",null,r.a.createElement("p",{className:"userItemHeading"}," Name:"),r.a.createElement("p",{className:"userItemText"},e.name),r.a.createElement("p",{className:"userItemHeading"}," Role:"),r.a.createElement("p",{className:"userItemText"},e.role)),r.a.createElement("div",null,r.a.createElement(h.a,{variant:"primary",onClick:e.onDetail.bind(void 0,e._id)},"Details")))},H=function(e){console.log(" search user list:  ",e.searchUsers);var t=e.searchUsers.map((function(t){return r.a.createElement(r.a.Fragment,null,r.a.createElement(F,{key:t._id,userId:e.authUserId,_id:t._id,name:t.name,email:t.email,role:t.role,onDetail:e.onViewDetail}))}));return r.a.createElement("ul",{className:"user__list1_master"},t)},B=a(19),K=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Attendance"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",null,r.a.createElement("p",{className:"userItemHeading"}," Status:"),r.a.createElement("p",{className:"userItemText"},e.status)),r.a.createElement("li",null,r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.attendance)},"Delete"))))))},V=function(e){console.log("user attendance list props",e.userAttendance);var t=e.userAttendance.map((function(t){var a=t.date;return null!==a&&(a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10),console.log("userAttendanceDate",a)),r.a.createElement(K,{key:t.date,userId:e.authUserId,date:a,status:t.status,description:t.description,canDelete:e.canDelete,onDelete:e.onDelete,attendance:t})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},J=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Leave"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Type:"),r.a.createElement("p",{className:"userItemText"},e.type)),r.a.createElement("li",null,r.a.createElement("p",{className:"userItemHeading"}," Start Date:"),r.a.createElement("p",{className:"userItemText"},e.startDate)),r.a.createElement("li",null,r.a.createElement("p",{className:"userItemHeading"}," End Date:"),r.a.createElement("p",{className:"userItemText"},e.endDate))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.leave)},"Delete"))))))},j=function(e){console.log("user leave list props",e.userLeave);var t=e.userLeave.map((function(t){var a=new Date(1e3*t.startDate.substr(0,10)).toISOString().slice(0,10),n=new Date(1e3*t.endDate.substr(0,10)).toISOString().slice(0,10);return r.a.createElement(J,{key:t.type,userId:e.authUserId,type:t.type,startDate:a,endDate:n,description:t.description,canDelete:e.canDelete,onDelete:e.onDelete,leave:t})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},z=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Attachment"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Name:"),r.a.createElement("p",{className:"userItemText"},e.name)),r.a.createElement("li",null,r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.format)),r.a.createElement("li",null,r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.path))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",className:"listButton",onClick:e.onDelete.bind(void 0,e.attachment)},"Delete")),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"primary",className:"listButton",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},q=function(e){console.log("user attachment list props",e.userAttachment);var t=e.userAttachment.map((function(t){return r.a.createElement(z,{key:t.name,userId:e.authUserId,name:t.name,format:t.format,path:t.path,canDelete:e.canDelete,onDelete:e.onDelete,attachment:t,onViewAttachment:e.onViewAttachment})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},R=(a(351),function(e){var t=Object(B.a)({},e.user),a=e.authUserId,n=t.attendance,i=t.leave,l=t.attachments,o=new Date(1e3*t.employmentDate.substr(0,10)).toISOString().slice(0,10),c=t.terminationDate;return null!==t.terminationDate&&(c=new Date(1e3*t.terminationDate.substr(0,10)).toISOString().slice(0,10)),console.log("UserDetail.props.authUserId:  ",a,"  UserDetail.props.user:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UserDetailBox1"},r.a.createElement(O.a,{defaultActiveKey:"profile",id:"uncontrolled-tab-example",className:"tab"},r.a.createElement(U.a,{eventKey:"Demographics",title:"Demographics"},r.a.createElement(k.a,{className:"UserDetailCard"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,r.a.createElement("span",{className:"ul"},"User Details")),r.a.createElement(g.a,{className:"detailCardRow"},r.a.createElement(I.a,{className:"detailCardCol"},r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"ID :")," ",t._id),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Name :")," ",t.name),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Email :")," ",t.email),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Phone :")," ",t.phone),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Role :")," ",t.role)),r.a.createElement(I.a,{className:"detailCardCol"},r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Employment Date:")," ",o),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Termination Date:")," ",c))),r.a.createElement(g.a,{className:"detailCardRow"},r.a.createElement(I.a,{className:"detailCardCol"},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete},"Delete Staff !!??")),r.a.createElement(I.a,null,r.a.createElement(h.a,{variant:"warning",onClick:e.onCreatePdf.bind(void 0,t)},"Create Pdf")))))),r.a.createElement(U.a,{eventKey:"Attendance",title:"Attendance"},r.a.createElement(V,{userAttendance:n,authUserId:e.AuthContext.userId,canDelete:e.canDelete,onDelete:e.attendanceDelete})),r.a.createElement(U.a,{eventKey:"Leave",title:"Leave"},r.a.createElement(j,{userLeave:i,authUserId:e.AuthContext.userId,canDelete:e.canDelete,onDelete:e.leaveDelete})),r.a.createElement(U.a,{eventKey:"Attachments",title:"Attachments"},r.a.createElement(q,{userAttachment:l,authUserId:e.AuthContext.userId,canDelete:e.canDelete,onDelete:e.attachmentDelete,onViewAttachment:e.onViewAttachment}))))}),M=(a(353),function(){return r.a.createElement("div",{className:"spinner"},r.a.createElement("div",{className:"lds-dual-ring"}))}),Q=(a(115),function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_master"},r.a.createElement("div",null,r.a.createElement("p",null,r.a.createElement("span",{className:"bold"},"Time :")," ",e.time),r.a.createElement("p",null,r.a.createElement("span",{className:"bold"},"Title :")," ",e.title),r.a.createElement("p",null,r.a.createElement("span",{className:"bold"},"Date :")," ",e.todayDate)))}),Y=(a(116),function(e){console.log("patient Today list props",e.appointmentToday);var t=e.appointmentToday.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10);return console.log("appointmentTodayDate",a),r.a.createElement(Q,{key:t.title,userId:e.authUserId,todayDate:a,title:t.title,date:t.date,time:t.time})}));return r.a.createElement("ul",{className:"user__list1_master"},t)}),W=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_master"},r.a.createElement("div",null,r.a.createElement("p",null,r.a.createElement("span",{className:"bold"},"Time :")," ",e.time),r.a.createElement("p",null,r.a.createElement("span",{className:"bold"},"Title :")," ",e.title),r.a.createElement("p",null,r.a.createElement("span",{className:"bold"},"Date :")," ",e.inProgressDate)))},X=function(e){console.log("patient InProgress list props",e.appointmentInProgress);var t=e.appointmentInProgress.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10);return r.a.createElement(W,{key:t.title,userId:e.authUserId,inProgressDate:a,title:t.title,date:t.date,time:t.time})}));return r.a.createElement("ul",{className:"user__list1_master"},t)},Z=(a(354),function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(a=Object(s.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(r)))).state={authContext:E._currentValue},a.isActive=!0,a}return Object(d.a)(t,e),Object(c.a)(t,[{key:"componentDidMount",value:function(){console.log("state:  ",this.state.authContext)}},{key:"componentWillUnmount",value:function(){this.isActive=!1}},{key:"render",value:function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(w.a,{className:"sidebarContainer"},r.a.createElement(g.a,{className:"sidebarRow1"},r.a.createElement(I.a,{md:12,className:""},r.a.createElement(k.a,{border:"primary",className:"sidebarCard"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,{className:"cardTitle"},"You"),r.a.createElement(k.a.Subtitle,{className:"mb-2"},"ID:"),r.a.createElement(k.a.Text,null,this.context.user._id),r.a.createElement(k.a.Subtitle,{className:"mb-2"},"Name:"),r.a.createElement(k.a.Text,null,this.context.user.name),r.a.createElement(k.a.Subtitle,{className:"mb-2"},"Role:"),r.a.createElement(k.a.Text,null,this.context.user.role))),r.a.createElement(k.a,{border:"secondary",className:"sidebarCard"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,{className:"cardTitle"},"Selection"),r.a.createElement(k.a.Subtitle,{className:"mb-2"},"Staff:"),r.a.createElement(k.a.Text,null,this.context.selectedUser.name),r.a.createElement(k.a.Subtitle,{className:"mb-2"},"Patient:"),r.a.createElement(k.a.Text,null,this.context.selectedPatient.name),r.a.createElement(k.a.Subtitle,{className:"mb-2"},"Appointment:"),r.a.createElement(k.a.Text,null,this.context.selectedAppointment.title))))),r.a.createElement(g.a,{className:"sidebarRow2"},r.a.createElement(I.a,{md:12,className:"apptSidebarCol"},r.a.createElement("h5",{className:"apptSidebarTitle"},"Appointments Today"),null===this.context.appointmentsToday&&r.a.createElement(h.a,{variant:"outline-warning"},"Check the Appointments page to load"),null!==this.context.appointmentsToday&&r.a.createElement(Y,{appointmentToday:this.context.appointmentsToday,authUserId:this.context.userId}))),r.a.createElement(g.a,{className:"apptSidebarRow"},r.a.createElement(I.a,{md:12,className:""},r.a.createElement("h5",{className:"apptSidebarTitle"},"Appointments InProgress"),null===this.context.appointmentsToday&&r.a.createElement(h.a,{variant:"outline-warning"},"Check the Appointments page to load"),null!==this.context.appointmentsInProgress&&r.a.createElement(X,{appointmentInProgress:this.context.appointmentsInProgress,authUserId:this.context.userId})))))}}]),t}(n.Component));Z.contextType=E;var $=Z,ee=a(286),te=a.n(ee),ae=(a(228),function(e){var t=e.attachmentType.substr(1,4);return console.log("\n    fileType: ".concat(e.attachmentType,",\n    also fileType: ").concat(t,",\n    ")),r.a.createElement("div",{className:"attachmentViewerBg"},r.a.createElement("div",{className:"attachmentViewer"},r.a.createElement("h5",{className:"attachmentViewerTitle"},"AttachmentViewer"),r.a.createElement(h.a,{variant:"danger",className:"attachmentViewerCloseButton",onClick:e.onCloseAttachmentView},"close"),e.attachmentFile&&r.a.createElement(te.a,{fileType:e.attachmentType,filePath:e.attachmentFile})))}),ne=(a(229),function(e){return console.log("\n    props: ".concat(e,",\n    ")),r.a.createElement("div",{className:"attachmentViewerBg"},r.a.createElement("div",{className:"attachmentViewer"},r.a.createElement("h5",null," Document Generator "),r.a.createElement(h.a,{variant:"danger",onClick:e.onClosePdfCreator},"close"),r.a.createElement("p",null,e.pdfData.title),r.a.createElement("p",null,e.pdfData.body)))}),re=function(e){console.log("UpdateUserForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.user);return console.log("UpdateUserForm.props.user:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridEmail"},r.a.createElement(f.a.Label,null,"Email"),r.a.createElement(f.a.Control,{type:"email",placeholder:t.email})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridPassword"},r.a.createElement(f.a.Label,null,"Password"),r.a.createElement(f.a.Control,{type:"password",placeholder:t.password}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridName"},r.a.createElement(f.a.Label,null,"Name"),r.a.createElement(f.a.Control,{type:"text",placeholder:t.name})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridPhone"},r.a.createElement(f.a.Label,null,"Phone"),r.a.createElement(f.a.Control,{type:"number",placeholder:t.phone}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridDob"},r.a.createElement(f.a.Label,null,"D.O.B"),r.a.createElement(f.a.Control,{type:"date",placeholder:t.dob})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridEmploymentDate"},r.a.createElement(f.a.Label,null,"Employment Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:t.employmentDate})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridEmploymentDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTerminationDate"},r.a.createElement(f.a.Label,null,"Termination Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:t.terminationDate})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTerminationDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressNumber"},r.a.createElement(f.a.Label,null,"Street No."),r.a.createElement(f.a.Control,{type:"number",placeholder:t.address.number})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressStreet"},r.a.createElement(f.a.Label,null,"Street Name"),r.a.createElement(f.a.Control,{type:"text",placeholder:t.address.street})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressTown"},r.a.createElement(f.a.Label,null,"Town"),r.a.createElement(f.a.Control,{type:"text",placeholder:t.address.town}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressParish"},r.a.createElement(f.a.Label,null,"Parish"),r.a.createElement(f.a.Control,{type:"text",placeholder:t.address.parish})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressPostOffice"},r.a.createElement(f.a.Label,null,"Post Office"),r.a.createElement(f.a.Control,{type:"text",placeholder:t.address.postOffice}))),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canCancelProfile&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"primary",type:"submit"},"Submit")))},ie=function(e){console.log("UpdateUserFieldForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.user);return console.log("UpdateUserFieldForm.props.user:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridFieldSelect"},r.a.createElement(f.a.Label,null,"Field Options"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"select"),r.a.createElement("option",null,"email"),r.a.createElement("option",null,"password"),r.a.createElement("option",null,"name"),r.a.createElement("option",null,"dob"),r.a.createElement("option",null,"phone"),r.a.createElement("option",null,"address.town"),r.a.createElement("option",null,"address.parish"),r.a.createElement("option",null,"employmentDate"),r.a.createElement("option",null,"terminationDate"))),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridField"},r.a.createElement(f.a.Label,null,"Field"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Query"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridQuery"},r.a.createElement(f.a.Label,null,"Query"),r.a.createElement(f.a.Label,null,"Date Format YYYY-MM-DD"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Query"}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"2",className:"btn",onClick:e.onCancel},"Cancel"),e.canCancelProfile&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"5",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"success",type:"submit"},"Submit")))},le=function(e){console.log("UpdateUserAttendanceForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.user);return console.log("UpdateUserAttendanceForm.props.user:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAttendanceDate"},r.a.createElement(f.a.Label,null,"Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"Date"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAttendanceDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAttendanceStatus"},r.a.createElement(f.a.Label,null,"Status"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Attendance Status"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAttendanceDescription"},r.a.createElement(f.a.Label,null,"Description"),r.a.createElement(f.a.Control,{as:"textarea",rows:"3",placeholder:"Attendance Description"}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"2",className:"btn",onClick:e.onCancel},"Cancel"),e.canCancelProfile&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"5",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"success",type:"submit"},"Add Attendance")))},oe=function(e){console.log("UpdateUserAttachmentForm.props:  ",Object(x.a)({},e)," AuthContext: ",E);var t=Object(B.a)({},e.user);return console.log("UpdateUserAttachmentForm.props.user:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAttachmentFormat"},r.a.createElement(f.a.Label,null,"Format"),r.a.createElement(f.a.Control,{type:"string",placeholder:"File format"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAttachmentFile"},r.a.createElement(f.a.Label,null,"File"),r.a.createElement(f.a.Control,{type:"file",placeholder:"File",onChange:function(e){console.log(e.target.files[0]),E._currentValue.file=e.target.files[0],console.log(E._currentValue.file)}}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"2",className:"btn",onClick:e.onCancel},"Cancel"),e.canCancelProfile&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"5",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"success",type:"submit"},"Add")))},ce=function(e){console.log("UpdateUserLeaveForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.user);return console.log("UpdateUserLeaveForm.props.user:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridLeaveType"},r.a.createElement(f.a.Label,null,"Type"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Leave Type"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridLeaveTitle"},r.a.createElement(f.a.Label,null,"Title"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Leave Title"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridLeaveStartDate"},r.a.createElement(f.a.Label,null,"Start Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"Start Date"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridLeaveStartDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridLeaveEndDate"},r.a.createElement(f.a.Label,null,"End Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"End Date"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridLeaveEndDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}}))),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canCancelProfile&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"primary",type:"submit"},"Submit")))},se=function(e){return r.a.createElement("div",{className:"SearchFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Group,{controlId:"formBasicFieldSelect"},r.a.createElement(f.a.Label,null,"Field"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"select"),r.a.createElement("option",null,"email"),r.a.createElement("option",null,"password"),r.a.createElement("option",null,"name"),r.a.createElement("option",null,"dob"),r.a.createElement("option",null,"phone"),r.a.createElement("option",null,"address.town"),r.a.createElement("option",null,"address.parish"),r.a.createElement("option",null,"role"),r.a.createElement("option",null,"employmentDate"),r.a.createElement("option",null,"terminationDate")),r.a.createElement(f.a.Text,{className:"text-muted"})),r.a.createElement(f.a.Group,{controlId:"formBasicField"},r.a.createElement(f.a.Label,null,"Field"),r.a.createElement(f.a.Control,{type:"textarea",rows:"5",placeholder:"Field"})),r.a.createElement(f.a.Group,{controlId:"formBasicQuery"},r.a.createElement(f.a.Label,null,"Query"),r.a.createElement(f.a.Control,{type:"textarea",rows:"5",placeholder:"Query"})),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"primary",type:"submit"},"Submit")))},me=function(e){return r.a.createElement("div",{className:"SearchFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Group,{controlId:"formBasicId"},r.a.createElement(f.a.Label,null,"User Id"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Id"})),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"primary",type:"submit"},"Submit")))},de=function(e){return r.a.createElement("div",{className:"SearchFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Group,{controlId:"formBasicName"},r.a.createElement(f.a.Label,null,"Name"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Name"})),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"primary",type:"submit"},"Submit")))},pe=function(e){return r.a.createElement("div",{className:"SearchFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Group,{controlId:"formBasicDate"},r.a.createElement(f.a.Label,null,"Attendance Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"Date"})),r.a.createElement(f.a.Group,{controlId:"formBasicDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"primary",type:"submit"},"Submit")))},ue=function(e){return r.a.createElement("div",{className:"SearchFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Group,{controlId:"formBasicStartDate"},r.a.createElement(f.a.Label,null,"Start Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"StartDate"})),r.a.createElement(f.a.Group,{controlId:"formBasicEndDate"},r.a.createElement(f.a.Label,null,"End Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"EndDate"})),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"primary",type:"submit"},"Submit")))},he=(a(144),function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(a=Object(s.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(r)))).state={creating:!1,updating:!1,deleting:!1,searching:!1,users:[],searchUsers:[],isLoading:!1,isSorting:!1,selectedUser:null,userUpdateField:null,userSearchField:null,userSearchQuery:null,canDelete:null,userAlert:null,file:null,showAttachment:!1,showThisAttachmentFile:null,showThisAttachmentType:null,createPdf:!1,pdfData:null},a.isActive=!0,a.startCreateUserHandler=function(){a.setState({creating:!0}),console.log("CreateUserForm...")},a.startUpdateUserHandler=function(){a.setState({updating:!0}),console.log("UpdateUserForm...")},a.startSearchUserHandler=function(){a.setState({searching:!0}),console.log("SearchUserForm...")},a.modalConfirmHandler=function(e){console.log("CreateUserFormData:  ",e.target.formGridEmail.value),a.setState({creating:!1});var t=e.target.formGridEmail.value,n=e.target.formGridPassword.value,r=e.target.formGridName.value,i=e.target.formGridRole.value,l=e.target.formGridDob.value,o=e.target.formGridPhone.value,c=e.target.formGridAddressNumber.value,s=e.target.formGridAddressStreet.value,m=e.target.formGridAddressTown.value,d=e.target.formGridAddressParish.value,p=e.target.formGridAddressPostOffice.value,u=e.target.formGridEmploymentDate.value;!0===e.target.formGridEmploymentDateTodayCheckbox.checked&&(u=(new Date).toISOString().slice(0,10));var h=e.target.formGridTerminationDate.value;if(0===t.trim().length||0===n.trim().length||0===r.trim().length||0===i.trim().length||0===l.trim().length||0===o.trim().length||0===c.trim().length||0===s.trim().length||0===m.trim().length||0===d.trim().length||0===p.trim().length||0===u.trim().length)return console.log("blank fields detected!!!...Please try again..."),void a.setState({userAlert:"blank fields detected!!!...Please try again..."});var f=a.context.token,g=a.context.userId;console.log("\n      creating user...\n      userId: ".concat(g,"\n      email: ").concat(t,",\n      password: ").concat(n,",\n      name: ").concat(r,",\n      role: ").concat(i,",\n      dob: ").concat(l,",\n      phone: ").concat(o,",\n      addressNumber: ").concat(c,",\n      addressStreet: ").concat(s,",\n      addressTown: ").concat(m,",\n      addressParish: ").concat(d,",\n      addressPostOffice: ").concat(p,",\n      employmentDate: ").concat(u,",\n      terminationDate: ").concat(h,",\n      "));var E={query:'\n          mutation {createUser(userInput: {email:"'.concat(t,'",password:"').concat(n,'",name:"').concat(r,'",dob:"').concat(l,'",addressNumber:').concat(c,',addressStreet:"').concat(s,'",addressTown:"').concat(m,'",addressParish:"').concat(d,'", addressPostOffice:"').concat(p,'",phone:"').concat(o,'",role:"').concat(i,'",employmentDate:"').concat(u,'",terminationDate:"').concat(h,'"})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n        }\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(E),headers:{"Content-Type":"application/json",Authorization:"Bearer "+f}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("create user response data... "+JSON.stringify(e.data.createUser)),a.setState((function(t){var a=Object(P.a)(t.users);return a.push(e.data.createUser),{users:a}})),a.context.users.push(e.data.createUser);var t=JSON.stringify(e.data).slice(0,8);a.setState({userAlert:t})})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalConfirmUpdateHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedUser._id;n!==r&&"admin"!==a.context.user.role&&(console.log("Not the creator or Admin! No edit permission!!"),a.setState({userAlert:"Not the creator or Admin! No edit permission!!"}),r=null),console.log("UpdateUserFormData:  ",e.target.formGridEmail.value),a.setState({updating:!1});var i=e.target.formGridEmail.value,l=e.target.formGridPassword.value,o=e.target.formGridName.value,c=a.context.selectedUser.role,s=e.target.formGridDob.value,m=e.target.formGridPhone.value,d=e.target.formGridAddressNumber.value,p=e.target.formGridAddressStreet.value,u=e.target.formGridAddressTown.value,h=e.target.formGridAddressParish.value,f=e.target.formGridAddressPostOffice.value,g=e.target.formGridEmploymentDate.value;!0===e.target.formGridEmploymentDateTodayCheckbox.checked&&(g=(new Date).toISOString().slice(0,10));var E=e.target.formGridTerminationDate.value;!0===e.target.formGridTerminationDateTodayCheckbox.checked&&(E=(new Date).toISOString().slice(0,10)),0===i.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),i=a.context.selectedUser.email),0===l.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),l=a.context.selectedUser.password),0===o.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),o=a.context.selectedUser.name),0===s.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),s=a.context.selectedUser.dob),0===m.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),m=a.context.selectedUser.phone),0===d.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),d=a.context.selectedUser.address.number),0===p.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),p=a.context.selectedUser.address.street),0===u.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),u=a.context.selectedUser.address.town),0===h.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),h=a.context.selectedUser.address.parish),0===f.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),f=a.context.selectedUser.address.postOffice),0===g.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),g=a.context.selectedUser.employmentDate),0===E.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),E=a.context.selectedUser.terminationDate),console.log("\n      updating user profile...\n      userId: ".concat(n,"\n      email: ").concat(i,",\n      password: ").concat(l,",\n      name: ").concat(o,",\n      role: ").concat(c,",\n      dob: ").concat(s,",\n      phone: ").concat(m,",\n      addressNumber: ").concat(d,",\n      addressStreet: ").concat(p,",\n      addressTown: ").concat(u,",\n      addressParish: ").concat(h,",\n      addressPostOffice: ").concat(f,",\n      employmentDate: ").concat(g,",\n      terminationDate: ").concat(E,",\n      ")),a.setState({userAlert:"updating user profile..."});var y={query:'\n      mutation {updateUser(userId:"'.concat(n,'",selectedUserId:"').concat(r,'",userInput: {email:"').concat(i,'",password:"').concat(l,'",name:"').concat(o,'",dob:"').concat(s,'",addressNumber:').concat(d,',addressStreet:"').concat(p,'",addressTown:"').concat(u,'",addressParish:"').concat(h,'", addressPostOffice:"').concat(f,'",phone:"').concat(m,'",role:"').concat(c,'",employmentDate:"').concat(g,'",terminationDate:"').concat(E,'"})\n      {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(y),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e));var t=e.data.updateUser;console.log("updatedUser:  ",JSON.stringify(t)),a.setState({user:t}),a.state.users.push(e.data.updateUser),a.context.users=a.state.users;var n=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:n}),a.fetchUsers()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalConfirmUpdateFieldHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedUser._id;console.log("UpdateUserFieldFormData:  ",e.target.formGridField.value,e.target.formGridFieldSelect.value),a.setState({updating:!1});var i=null,l=e.target.formGridQuery.value;i="select"===e.target.formGridFieldSelect.value?e.target.formGridField.value:e.target.formGridFieldSelect.value,console.log("\n          field: ".concat(i,",\n          query: ").concat(l,",\n        ")),a.setState({userAlert:"updating user field..."});var o={query:'\n          mutation{updateUserField(userId:"'.concat(n,'",selectedUserId:"').concat(r,'",field:"').concat(i,'",query:"').concat(l,'")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n        }\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(o),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data.updateUserField));var t=e.data.updateUserField._id,n=a.state.users.find((function(e){return e._id===t})),r=a.state.users.indexOf(n),i=a.state.users.splice(r,1);console.log("updatedUser:  ",JSON.stringify(n),"  updatedUserPos:  ",r,"  slicedArray:  ",i),a.state.users.push(e.data.updateUserField),a.context.users=a.state.users;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l}),a.fetchUsers()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updateUserAttendanceHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedUser._id;n!==r&&"admin"!==a.context.user.role&&(console.log("Not the creator or Admin! No edit permission!!"),a.setState({userAlert:"Not the creator or Admin! No edit permission!!"}),r=null),console.log("UpdateUserAttendanceFormData:  "),a.setState({updating:!1,userUpdateField:null});var i=e.target.formGridAttendanceDate.value;!0===e.target.formGridAttendanceDateTodayCheckbox.checked&&(i=(new Date).toISOString().slice(0,10));var l=e.target.formGridAttendanceStatus.value,o=e.target.formGridAttendanceDescription.value;if(0!==i.trim().length&&0!==l.trim().length){console.log("\n      adding user attendance item...\n      userId: ".concat(n,",\n      selectedUserId: ").concat(r,"\n      attendanceDate: ").concat(i,",\n      attendanceStatus: ").concat(l,",\n      attendanceDescription: ").concat(o,"\n      ")),a.setState({userAlert:"adding user attendance item..."});var c={query:'\n          mutation {updateUserAttendance(userId:"'.concat(n,'", selectedUserId:"').concat(r,'",userInput:{attendanceDate:"').concat(i,'",attendanceStatus:"').concat(l,'",attendanceDescription:"').concat(o,'"})\n          {_id,name,email,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description}}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(c),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data.updateUserAttendance));var t=e.data.updateUserAttendance._id,n=a.state.users.find((function(e){return e._id===t})),r=a.state.users.indexOf(n),i=a.state.users.splice(r,1);console.log("updatedUser:  ",JSON.stringify(n),"  updatedUserPos:  ",r,"  slicedArray:  ",i),a.state.users.push(e.data.updateUserAttendance),a.context.users=a.state.users;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l}),a.fetchUsers()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))}else console.log("blank fields detected!!!...filling w/ previous data...")},a.updateUserAttachmentHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedUser._id;n!==r&&"admin"!==a.context.user.role&&(console.log("Not the creator or Admin! No edit permission!!"),a.setState({userAlert:"Not the creator or Admin! No edit permission!!"}),r=null),console.log("UpdateUserAttachmentFormData:  "),a.setState({updating:!1,userUpdateField:null});var i=e.target.formGridAttachmentFormat.value,l="uploads/staff/"+r+"/attachments",o=E._currentValue.file;console.log("\n      uploading to s3...\n      file.name: ".concat(o.name,",\n      AuthContext._currentValue.file: ").concat(E._currentValue.file,",\n      "));var c={bucketName:a.context.creds.s3.bucketName,dirName:l,region:a.context.creds.s3.region,accessKeyId:a.context.creds.s3.accessKeyId,secretAccessKey:a.context.creds.s3.secretAccessKey},s=new T.a(c),m=o.name,d=m;if(s.uploadFile(o,m).then((function(e){console.log(e),a.setState({userAlert:"attachment upload success!"})})).catch((function(e){console.error(e),a.setState({userAlert:"upload error:  "+e})})),0!==d.trim().length&&0!==i.trim().length&&0!==l.trim().length){console.log("\n      adding user attachment item...\n      userId: ".concat(n,",\n      selectedUserId: ").concat(r,"\n      attachmentName: ").concat(d,",\n      attachmentFormat: ").concat(i,",\n      attachmentPath: ").concat(l,",\n      ")),a.setState({userAlert:"adding user attatchment item..."});var p={query:'\n          mutation{updateUserAttachment(userId:"'.concat(n,'",selectedUserId:"').concat(r,'",userInput:{attachmentName:"').concat(d,'",attachmentFormat:"').concat(i,'",attachmentPath:"').concat(l,'"})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(p),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data.updateUserAttachment));var t=e.data.updateUserAttachment._id,n=a.state.users.find((function(e){return e._id===t})),r=a.state.users.indexOf(n),i=a.state.users.splice(r,1);console.log("updatedUser:  ",JSON.stringify(n),"  updatedUserPos:  ",r,"  slicedArray:  ",i),a.state.users.push(e.data.updateUserAttachment),a.context.users=a.state.users;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l}),a.fetchUsers()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))}else console.log("blank fields detected!!! try again")},a.updateUserLeaveHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedUser._id;n!==r&&"admin"!==a.context.user.role&&(console.log("Not the creator or Admin! No edit permission!!"),a.setState({userAlert:"Not the creator or Admin! No edit permission!!"}),r=null),console.log("UpdateUserLeaveFormData:  ",e.target.formGridLeaveType.value),a.setState({updating:!1,userUpdateField:null});var i=e.target.formGridLeaveType.value,l=e.target.formGridLeaveTitle.value,o=e.target.formGridLeaveStartDate.value;!0===e.target.formGridLeaveStartDateTodayCheckbox.checked&&(o=(new Date).toISOString().slice(0,10));var c=e.target.formGridLeaveEndDate.value;if(!0===e.target.formGridLeaveEndDateTodayCheckbox.checked&&(c=(new Date).toISOString().slice(0,10)),0===i.trim().length||0===l.trim().length||0===o.trim().length||0===c.trim().length)return console.log("blank fields detected!!!...try again"),void a.setState({userAlert:"blank fields detected!!!...try again"});console.log("\n      adding user leave item...\n      userId: ".concat(n,",\n      selectedUserId: ").concat(r,"\n      leave: {\n        type: ").concat(i,",\n        title: ").concat(l,",\n        startDate: ").concat(o,",\n        endDate: ").concat(c,"\n      }\n      ")),a.setState({userAlert:"adding user leave item..."});var s={query:'\n          mutation{updateUserLeave(userId:"'.concat(n,'",selectedUserId:"').concat(r,'",userInput:{leaveType:"').concat(i,'",leaveTitle:"').concat(l,'",leaveStartDate:"').concat(o,'",leaveEndDate:"').concat(c,'"})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(s),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updateUserLeave._id,n=a.state.users.find((function(e){return e._id===t})),r=a.state.users.indexOf(n),i=a.state.users.splice(r,1);console.log("updatedUser:  ",JSON.stringify(n),"  updatedUserPos:  ",r,"  slicedArray:  ",i),a.state.users.push(e.data.updateUserLeave),a.context.users=a.state.users;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l}),a.fetchUsers()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalConfirmSearchHandler=function(e){console.log("SearchUserForm:  ");var t=a.context.userId;console.log("SearchUserFormData:  ",e.target.formBasicField.value),a.setState({searching:!1});var n=null,r=e.target.formBasicQuery.value;if(n="select"===e.target.formBasicFieldSelect.value?e.target.formBasicField.value:e.target.formBasicFieldSelect.value,a.setState({userSearchField:n,userSearchQuery:r}),0===n.trim().length||0===r.trim().length)return console.log("blank fields detected!!!...Please try again..."),void a.setState({userAlert:"blank fields detected!!!...Please try again..."});var i={field:n,query:r};console.log("Searching for User:  ",JSON.stringify(i)),a.setState({userAlert:"Searching for User..."});var l={query:'\n          query {getUserField(userId:"'.concat(t,'",field:"').concat(n,'",query:"').concat(r,'")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        ')},o=a.context.token;fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(l),headers:{"Content-Type":"application/json",Authorization:"Bearer "+o}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e));var t=JSON.stringify(e.data).slice(0,8);a.setState({userAlert:t});var n=e.data.getUserField;a.setState({searchUsers:n}),console.log("state.searchUsers:  ",a.state.searchUsers)})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalConfirmSearchIdHandler=function(e){var t=a.context.userId;a.setState({searching:!1}),console.log("SearchUserIdFormData:",e.target.formBasicId.value);var n=e.target.formBasicId.value,r={query:'\n        query {getUserId(userId:"'.concat(t,'",selectedUserId:"').concat(n,'")\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      ')},i=a.context.token;fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(r),headers:{"Content-Type":"application/json",Authorization:"Bearer "+i}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e));var t=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:t});var n=e.data.getUserId;a.setState({searchUsers:[n]}),console.log("state.searchUsers:  ",a.state.searchUsers)})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalConfirmSearchAttendanceDateHandler=function(e){var t=a.context.userId;a.setState({searching:!1}),console.log("SearchUserAttendanceDateFormData:");var n=e.target.formBasicDate.value;!0===e.target.formBasicDateTodayCheckbox.checked&&(n=(new Date).toISOString().slice(0,10));var r={query:'\n        query {getUserAttendanceDate(userId:"'.concat(t,'",attendanceDate:"').concat(n,'")\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      ')},i=a.context.token;fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(r),headers:{"Content-Type":"application/json",Authorization:"Bearer "+i}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e));var t=JSON.stringify(e.data).slice(0,8);a.setState({userAlert:t});var n=e.data.getUserAttendanceDate;a.setState({searchUsers:n}),console.log("state.searchUsers:  ",a.state.searchUsers)})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalConfirmSearchLeaveDateRangeHandler=function(e){var t=a.context.userId;a.setState({searching:!1}),console.log("SearchUserLeaveDateRangeFormData:");var n=e.target.formBasicStartDate.value,r=e.target.formBasicEndDate.value,i={query:'\n        query{getUserLeaveDateRange(userId:"'.concat(t,'",startDate:"').concat(n,'",endDate:"').concat(r,'")\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      ')},l=a.context.token;fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(i),headers:{"Content-Type":"application/json",Authorization:"Bearer "+l}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e));var t=JSON.stringify(e.data).slice(0,8);a.setState({userAlert:t});var n=e.data.getUserLeaveDateRange;a.setState({searchUsers:n}),console.log("state.searchUsers:  ",a.state.searchUsers)})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalConfirmSearchNameHandler=function(e){console.log("SearchUserNameFormData:",e.target.formBasicName.value),a.setState({searching:!1});var t=a.state.users,n=new RegExp(e.target.formBasicName.value,"i");console.log("\n      regex: ".concat(n,",\n      "));var r=t.filter((function(e){return e.name.match(n)}));console.log("\n        result: ".concat(JSON.stringify(r),"\n        ")),a.setState({searchUsers:r})},a.modalCancelHandler=function(){a.setState({creating:!1,updating:!1,deleting:!1,searching:!1})},a.fetchUsersAsc=function(){console.log("'fetch usersAsc function' context object... "+JSON.stringify(a.context));var e=a.context.userId,t={query:'\n          query {usersNameAsc (userId:"'.concat(e,'")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json",Authorization:"Bearer "+a.context.token}}).then((function(e){if(200!==e.status&&201!==e.status)throw a.context.userAlert="Failed!",new Error("Failed!");return e.json()})).then((function(e){var t=e.data.usersNameAsc;console.log("resData:  ",e),console.log(t);var n=JSON.stringify(e.data).slice(0,8);a.setState({userAlert:n}),a.setState({users:t}),a.context.users=a.state.users})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.fetchUsersDesc=function(){console.log("'fetch usersDesc function' context object... "+JSON.stringify(a.context));var e=a.context.userId,t={query:'\n          query {usersNameDesc (userId:"'.concat(e,'")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json",Authorization:"Bearer "+a.context.token}}).then((function(e){if(200!==e.status&&201!==e.status)throw a.context.userAlert="Failed!",new Error("Failed!");return e.json()})).then((function(e){var t=e.data.usersNameDesc;console.log("resData:  ",e),console.log(t);var n=JSON.stringify(e.data).slice(0,8);a.setState({userAlert:n}),a.setState({users:t}),a.context.users=a.state.users})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalDeleteHandler=function(){console.log("deleting user...selectedUser:  ",a.context.selectedUser);var e=a.context.userId,t=a.context.selectedUser._id;"admin"!==a.context.user.role&&(console.log("Not the Admin! No edit permission!!"),a.setState({userAlert:"Not the Admin! No edit permission!!"})),a.setState({deleting:!0,userAlert:"deleting user.."});var n={query:'\n        mutation {\n          deleteUser(userId: "'.concat(e,'", selectedUserId: "').concat(t,'")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n        }\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(n),headers:{"Content-Type":"application/json",Authorization:"Bearer "+a.context.token}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=JSON.stringify(e.data).slice(0,8);a.setState({userAlert:t});var n=e.data.deleteUser;console.log(n);var r=n._id;n=a.state.users.find((function(e){return e._id===r}));var i=a.state.users.indexOf(n),l=a.state.users.splice(i,1);console.log("deletedUser:  ",JSON.stringify(n),"  deletedUserPos:  ",i,"  slicedArray:  ",l),a.setState({deleting:!1}),a.fetchUsers()})).catch((function(e){console.log(e),a.setState({userAlert:e}),a.isActive&&a.setState({deleting:!1})}))},a.deleteUserAttendanceItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedUser._id,i=new Date(1e3*e.date.substr(0,10)).toISOString().slice(0,10);console.log("\n    delete user Attendance item:\n    props: ".concat(JSON.stringify(e),",\n    token: ").concat(t,",\n    userId: ").concat(n,",\n    selectedUserId: ").concat(r,",\n    attandance date: ").concat(i,",\n    "));var l={query:'\n       mutation{deleteUserAttendance(userId:"'.concat(n,'",selectedUserId:"').concat(r,'",attendanceDate:"').concat(i,'")\n       {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n    ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(l),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("resData.data:  ",e.data.deleteUserAttendance);var t=e.data.deleteUserAttendance._id,n=a.state.users.find((function(e){return e._id===t})),r=a.state.users.indexOf(n),i=a.state.users.splice(r,1);console.log("updatedUser:  ",JSON.stringify(n),"  updatedUserPos:  ",r,"  slicedArray:  ",i),a.state.users.push(e.data.deleteUserAttendance),a.context.users=a.state.users;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l}),a.fetchUsers()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.deleteUserLeaveItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedUser._id;console.log("\n    delete user Leave item:\n    props: ".concat(JSON.stringify(e),",\n    token: ").concat(t,",\n    userId: ").concat(n,",\n    selectedUserId: ").concat(r,",\n    "));var i={query:'\n       mutation{deleteUserLeave(userId:"'.concat(n,'",selectedUserId:"').concat(r,'",leaveTitle:"').concat(e.title,'")\n       {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n    ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(i),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deleteUserLeave;console.log(t);var n=e.data.deleteUserLeave._id,r=a.state.users.find((function(e){return e._id===n})),i=a.state.users.indexOf(r),l=a.state.users.splice(i,1);console.log("updatedUser:  ",JSON.stringify(r),"  updatedUserPos:  ",i,"  slicedArray:  ",l),a.state.users.push(e.data.deleteUserLeave),a.context.users=a.state.users;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchUsers()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.deleteUserAttachmentItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedUser._id;console.log("\n    delete user Attachment item:\n    props: ".concat(JSON.stringify(e),",\n    token: ").concat(t,",\n    userId: ").concat(n,",\n    selectedUserId: ").concat(r,",\n    "));var i={query:'\n       mutation{deleteUserAttachment(userId:"'.concat(n,'",selectedUserId:"').concat(r,'",attachmentName:"').concat(e.name,'")\n       {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n    ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(i),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deleteUserAttachment;console.log(t);var n=e.data.deleteUserAttachment._id,r=a.state.users.find((function(e){return e._id===n})),i=a.state.users.indexOf(r),l=a.state.users.splice(i,1);console.log("updatedUser:  ",JSON.stringify(r),"  updatedUserPos:  ",i,"  slicedArray:  ",l),a.state.users.push(e.data.deleteUserAttachment),a.context.users=a.state.users;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchUsers()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.showDetailHandler=function(e){a.setState((function(t){var n=t.users.find((function(t){return t._id===e}));return a.context.selectedUser=n,a.setState({selectedUser:n}),console.log("User selected  :  ",n),{selectedUser:n}}))},a.onViewAttachment=function(e){console.log("\n      setting up attachment viewer...\n      attachment: ".concat(JSON.stringify(e),"\n      ")),a.setState({showAttachment:!0});var t="https://ent-emr-bucket.s3-us-east-2.amazonaws.com/"+e.path+"/"+e.name,n=e.format;a.setState({showThisAttachmentFile:t,showThisAttachmentType:n})},a.closeAttachmentView=function(){console.log("\n      closing attachment viewer...\n      "),a.setState({showAttachment:!1})},a.createPdf=function(e){console.log("\n        creating pdf...\n        user: ".concat(JSON.stringify(e),"\n      "));var t={title:e.name,body:e.dob};a.setState({createPdf:!0,pdfData:t})},a.closePdfCreator=function(){console.log("\n      closing pdf creator...\n      "),a.setState({createPdf:!1,pdfData:null})},a}return Object(d.a)(t,e),Object(c.a)(t,[{key:"componentDidMount",value:function(){this.fetchUsers(),"Lord-of-the-Manor"===this.context.user.name&&this.setState({canDelete:!0})}},{key:"fetchUsers",value:function(){var e=this;console.log("fetch users:");var t=this.context.userId;this.setState({isLoading:!0});var a={query:'\n          query {users (userId:"'.concat(t,'")\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(a),headers:{"Content-Type":"application/json",Authorization:"Bearer "+this.context.token}}).then((function(t){if(200!==t.status&&201!==t.status)throw e.context.userAlert="Failed!",new Error("Failed!");return t.json()})).then((function(t){var a=JSON.stringify(t.data).slice(0,8);e.setState({userAlert:a});var n=t.data.users;console.log("resData:  ",t),console.log(n),e.isActive&&e.setState({users:n,isLoading:!1}),e.context.users=e.state.users})).catch((function(t){console.log(t),e.setState({userAlert:t}),e.isActive&&e.setState({isLoading:!1})}))}},{key:"updateUserSpecial",value:function(e){console.log("special field to update:  ",e.target.value);var t=e.target.value;this.setState({userUpdateField:t})}},{key:"userSearchClearlHandler",value:function(){console.log("clearing user search results"),this.setState({searchUsers:[],userAlert:"clearing user search results"})}},{key:"componentWillUnmount",value:function(){this.isActive=!1}},{key:"render",value:function(){return r.a.createElement(r.a.Fragment,null,!0===this.state.showAttachment&&r.a.createElement(ae,{onCloseAttachmentView:this.closeAttachmentView,attachmentFile:this.state.showThisAttachmentFile,attachmentType:this.state.showThisAttachmentType}),!0===this.state.createPdf&&r.a.createElement(ne,{pdfData:this.state.pdfData,onClosePdfCreator:this.closePdfCreator}),r.a.createElement(C.a,null,r.a.createElement(g.a,null,r.a.createElement(I.a,{md:3,className:"MasterCol1"},r.a.createElement(v,{authUserId:this.context.userId,alert:this.state.userAlert}),r.a.createElement($,null)),r.a.createElement(I.a,{md:9,className:"MasterCol2"},r.a.createElement(w.a,{className:"containerCombinedDetail"},r.a.createElement(U.a.Container,{id:"left-tabs-example",defaultActiveKey:"userDetail"},r.a.createElement(g.a,null,r.a.createElement(I.a,{sm:2},r.a.createElement(G.a,{variant:"pills",className:"flex-column"},r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"MasterList"},"MASTER LIST")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"userDetail"},"Selected")),"admin"===this.context.user.role&&r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"userCreate"},"Create New")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"disabled",disabled:!0},"Edit:")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"userEditDemographics"},"Demographics")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"userEditField"},"Single Field")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"disabled",disabled:!0},"Add:")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"userEditAttendance"},"Attendance")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"userEditLeave"},"Leave")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"userEditAttachment"},"Attachment")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"disabled",disabled:!0},"Search:")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"SearchInput"},"Input")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"SearchResult"},"Results")))),r.a.createElement(I.a,{sm:10},r.a.createElement(U.a.Content,null,r.a.createElement(U.a.Pane,{eventKey:"userDetail"},null===this.state.selectedUser&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select a Staff member from the Master List"),!1===this.state.isLoading&&null!==this.state.selectedUser&&r.a.createElement(R,{authUserId:this.context.userId,AuthContext:this.context,user:this.state.selectedUser,onEdit:this.startUpdateUserHandler,canDelete:this.state.canDelete,onDelete:this.modalDeleteHandler,attendanceDelete:this.deleteUserAttendanceItem,leaveDelete:this.deleteUserLeaveItem,attachmentDelete:this.deleteUserAttachmentItem,onViewAttachment:this.onViewAttachment,onCreatePdf:this.createPdf})),"admin"===this.context.user.role&&r.a.createElement(U.a.Pane,{eventKey:"userCreate"},r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",onClick:this.startCreateUserHandler},"Create a NEW Staff Profile"),this.state.creating&&r.a.createElement(D,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmHandler,onSubmit:this.modalConfirmHandler,confirmText:"Confirm"})),r.a.createElement(U.a.Pane,{eventKey:"userEditDemographics"},null===this.state.selectedUser&&r.a.createElement(h.a,{variant:"outline-warning",className:"confirmEditButton",size:"lg"},"Select a Staff member from the Master List"),null!==this.state.selectedUser&&"admin"===this.context.user.role&&r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",onClick:this.startUpdateUserHandler},"Edit Demographics as Admin"),null!==this.state.selectedUser&&this.state.selectedUser._id===this.context.user._id&&r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",onClick:this.startUpdateUserHandler},"Edit Demographics"),null!==this.state.selectedUser&&this.state.selectedUser._id===this.context.user._id&&r.a.createElement(h.a,{variant:"outline-danger",className:"confirmEditButton",size:"lg"},"Your Profile"),null!==this.state.selectedUser&&this.state.selectedUser._id!==this.context.user._id&&r.a.createElement(h.a,{variant:"outline-danger",className:"confirmEditButton",size:"lg"},"Not my profile"),this.state.updating&&null!==this.state.selectedUser&&r.a.createElement(re,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmUpdateHandler,confirmText:"Confirm",user:this.context.selectedUser})),r.a.createElement(U.a.Pane,{eventKey:"userEditField"},null===this.state.selectedUser&&r.a.createElement(h.a,{variant:"outline-warning",className:"confirmEditButton",size:"lg"},"Select a Staff member from the Master List"),null!==this.state.selectedUser&&"admin"===this.context.user.role&&r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",onClick:this.startUpdateUserHandler},"Edit Field as Admin"),null!==this.state.selectedUser&&this.state.selectedUser._id===this.context.user._id&&r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",onClick:this.startUpdateUserHandler},"Edit a Single Field"),null!==this.state.selectedUser&&this.state.selectedUser._id===this.context.user._id&&r.a.createElement(h.a,{variant:"outline-success",className:"confirmEditButton",size:"lg"},"Your Profile"),null!==this.state.selectedUser&&this.state.selectedUser._id!==this.context.user._id&&r.a.createElement(h.a,{variant:"outline-danger",className:"confirmEditButton",size:"lg"},"Not my profile"),this.state.updating&&null!==this.state.selectedUser&&r.a.createElement(ie,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmUpdateFieldHandler,confirmText:"Confirm",user:this.state.selectedUser})),r.a.createElement(U.a.Pane,{eventKey:"userEditAttendance"},null===this.state.selectedUser&&r.a.createElement(h.a,{variant:"outline-warning",className:"confirmEditButton",size:"lg"},"Select a Staff member from the Master List below"),null!==this.state.selectedUser&&"admin"===this.context.user.role&&r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",value:"attendance",onClick:this.updateUserSpecial.bind(this)},"Add Attendance as Admin"),null!==this.state.selectedUser&&this.state.selectedUser._id===this.context.user._id&&r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",value:"attendance",onClick:this.updateUserSpecial.bind(this)},"Add Attendance"),null!==this.state.selectedUser&&this.state.selectedUser._id===this.context.user._id&&r.a.createElement(h.a,{variant:"outline-success",className:"confirmEditButton",size:"lg"},"Your Profile"),null!==this.state.selectedUser&&this.state.selectedUser._id!==this.context.user._id&&r.a.createElement(h.a,{variant:"outline-danger",className:"confirmEditButton",size:"lg"},"Not my profile"),"attendance"===this.state.userUpdateField&&null!==this.state.selectedUser&&r.a.createElement(le,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updateUserAttendanceHandler,confirmText:"Confirm",user:this.state.selectedUser})),r.a.createElement(U.a.Pane,{eventKey:"userEditLeave"},null===this.state.selectedUser&&r.a.createElement(h.a,{variant:"outline-warning",className:"confirmEditButton",size:"lg"},"Select a Staff member from the Master List"),null!==this.state.selectedUser&&"admin"===this.context.user.role&&r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",value:"leave",onClick:this.updateUserSpecial.bind(this)},"Add Leave as Admin"),null!==this.state.selectedUser&&this.state.selectedUser._id===this.context.user._id&&r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",value:"leave",onClick:this.updateUserSpecial.bind(this)},"Add Leave"),null!==this.state.selectedUser&&this.state.selectedUser._id===this.context.user._id&&r.a.createElement(h.a,{variant:"outline-success",className:"confirmEditButton",size:"lg"},"Your Profile"),null!==this.state.selectedUser&&this.state.selectedUser._id!==this.context.user._id&&r.a.createElement(h.a,{variant:"outline-danger",className:"confirmEditButton",size:"lg"},"Not my profile"),"leave"===this.state.userUpdateField&&null!==this.state.selectedUser&&r.a.createElement(ce,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updateUserLeaveHandler,confirmText:"Confirm",user:this.state.selectedUser})),r.a.createElement(U.a.Pane,{eventKey:"userEditAttachment"},null===this.state.selectedUser&&r.a.createElement(h.a,{variant:"outline-warning",className:"confirmEditButton",size:"lg"},"Select a Staff member from the Master List"),null!==this.state.selectedUser&&"admin"===this.context.user.role&&r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",value:"attachments",onClick:this.updateUserSpecial.bind(this)},"Add Attachment as Admin"),null!==this.state.selectedUser&&this.state.selectedUser._id===this.context.user._id&&r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",value:"attachments",onClick:this.updateUserSpecial.bind(this)},"Add Attachment"),null!==this.state.selectedUser&&this.state.selectedUser._id===this.context.user._id&&r.a.createElement(h.a,{variant:"outline-success",className:"confirmEditButton",size:"lg"},"Your Profile"),null!==this.state.selectedUser&&this.state.selectedUser._id!==this.context.user._id&&r.a.createElement(h.a,{variant:"outline-danger",className:"confirmEditButton",size:"lg"},"Not my profile"),"attachments"===this.state.userUpdateField&&null!==this.state.selectedUser&&r.a.createElement(oe,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updateUserAttachmentHandler,confirmText:"Confirm",user:this.state.selectedUser})),r.a.createElement(U.a.Pane,{eventKey:"MasterList"},r.a.createElement(w.a,{className:"containerUserMasterList"},r.a.createElement(g.a,{className:"searchListRow"},r.a.createElement(h.a,{variant:"primary",size:"sm",onClick:this.fetchUsersAsc},"Sort Asc"),r.a.createElement(h.a,{variant:"info",size:"sm",onClick:this.fetchUsersDesc},"Sort Desc"),this.state.isLoading?r.a.createElement(M,null):r.a.createElement(_,{users:this.state.users,authUserId:this.context.userId,onViewDetail:this.showDetailHandler})))),r.a.createElement(U.a.Pane,{eventKey:"SearchInput"},r.a.createElement(w.a,{className:"containerSearchUserInput"},r.a.createElement(g.a,{className:"searchUserRowAdd"},r.a.createElement(h.a,{variant:"primary",onClick:this.startSearchUserHandler},"Search")),r.a.createElement(g.a,{className:"searchUserRowForm"},r.a.createElement(I.a,{md:10,className:"searchUserColForm"},r.a.createElement(O.a,{defaultActiveKey:"Field",id:"uncontrolled-tab-example"},r.a.createElement(U.a,{eventKey:"Search",title:"Search:",disabled:!0}),r.a.createElement(U.a,{eventKey:"Field",title:"Search by Field:"},!0!==this.state.searching&&r.a.createElement(h.a,{variant:"outline-warning",className:"confirmEditButton",size:"lg"},"Click the 'Search' Button start"),!0===this.state.searching&&r.a.createElement(se,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchHandler,confirmText:"Search",user:this.context.selectedUser})),r.a.createElement(U.a,{eventKey:"Id",title:"Search by ID:"},!0!==this.state.searching&&r.a.createElement(h.a,{variant:"outline-warning",className:"confirmEditButton",size:"lg"},"Click the 'Search' Button start"),!0===this.state.searching&&r.a.createElement(me,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchIdHandler,confirmText:"Search",user:this.context.selectedUser})),r.a.createElement(U.a,{eventKey:"Attendance",title:"Search by Attendance:"},!0!==this.state.searching&&r.a.createElement(h.a,{variant:"outline-warning",className:"confirmEditButton",size:"lg"},"Click the 'Search' Button start"),!0===this.state.searching&&r.a.createElement(pe,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchAttendanceDateHandler,confirmText:"Search",user:this.context.selectedUser})),r.a.createElement(U.a,{eventKey:"Leave",title:"Search by Leave:"},!0!==this.state.searching&&r.a.createElement(h.a,{variant:"outline-warning",className:"confirmEditButton",size:"lg"},"Click the 'Search' Button start"),!0===this.state.searching&&r.a.createElement(ue,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchLeaveDateRangeHandler,confirmText:"Search",user:this.context.selectedUser})),r.a.createElement(U.a,{eventKey:"Name",title:"Search by Name:"},!0!==this.state.searching&&r.a.createElement(h.a,{variant:"outline-warning",className:"confirmEditButton",size:"lg"},"Click the 'Search' Button start"),!0===this.state.searching&&r.a.createElement(de,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchNameHandler,confirmText:"Search",user:this.context.selectedUser})))),r.a.createElement(I.a,{md:10})))),r.a.createElement(U.a.Pane,{eventKey:"SearchResult"},r.a.createElement(w.a,{className:"containerSearchUserResults"},r.a.createElement(g.a,null,r.a.createElement(k.a,{className:"searchCard"},r.a.createElement(k.a.Body,{className:"searchCardBody"},r.a.createElement(k.a.Title,null,"Your Search"),r.a.createElement(k.a.Text,null,"Field: ",this.state.userSearchField),r.a.createElement(k.a.Text,null,"Query: ",this.state.userSearchQuery)))),r.a.createElement(g.a,{className:"searchListRow"},this.state.searchUsers!==[]&&r.a.createElement(H,{searchUsers:this.state.searchUsers,authUserId:this.context.userId,onViewDetail:this.showDetailHandler})))))))))))))}}]),t}(n.Component));he.contextType=E;var fe=he,ge=(a(29),function(e){return r.a.createElement("li",{key:e.patientId,className:"users__list-item_master"},r.a.createElement("div",null,r.a.createElement("h5",{className:"userItemHeading"}," Name:"),r.a.createElement("p",{className:"userItemText"},e.name),r.a.createElement("h5",{className:"userItemHeading"}," Age:"),r.a.createElement("p",{className:"userItemText"},e.age),r.a.createElement("h5",{className:"userItemHeading"}," Gender:"),r.a.createElement("p",{className:"userItemText"},e.gender)),r.a.createElement("div",null,r.a.createElement(h.a,{variant:"primary",onClick:e.onDetail.bind(void 0,e._id)},"Details")))}),Ee=(a(30),function(e){var t=e.patients.map((function(t){var a=null;return null!==t.registrationDate&&(a=new Date(1e3*t.registrationDate.substr(0,10)).toISOString().slice(0,10)),r.a.createElement(ge,{key:t._id,_id:t._id,name:t.name,age:t.age,gender:t.gender,registrationDate:a,onDetail:e.onViewDetail})}));return r.a.createElement("ul",{className:"user__list1_master"},t)}),ye=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Appointment"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Type:"),r.a.createElement("p",{className:"userItemText"},e.type)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Time:"),r.a.createElement("p",{className:"userItemText"},e.time)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Title:"),r.a.createElement("p",{className:"userItemText"},e.title)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Location:"),r.a.createElement("p",{className:"userItemText"},e.location))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.appointment)},"Delete"))))))},ve=function(e){console.log("patient Appointment list props",e.patientAppointment);var t=e.patientAppointment.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10);return r.a.createElement(ye,{key:t.date,userId:e.authUserId,type:t.type,date:a,canDelete:e.canDelete,onDelete:e.onDelete,time:t.time,title:t.title,description:t.description,location:t.location,appointment:t})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},Ne=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Insurance"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Company:"),r.a.createElement("p",{className:"userItemText"},e.company)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Number:"),r.a.createElement("p",{className:"userItemText"},e.number)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Expiry:"),r.a.createElement("p",{className:"userItemText"},e.expiry)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Subscriber Company:"),r.a.createElement("p",{className:"userItemText"},e.subscriber.company)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Subscriber Description:"),r.a.createElement("p",{className:"userItemText"},e.subscriber.description))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.insurance)},"Delete"))))))},be=function(e){console.log("patient insurance list props",e.patientInsurance);var t=e.patientInsurance.map((function(t){var a=new Date(1e3*t.expiry.substr(0,10)).toISOString().slice(0,10);return r.a.createElement(Ne,{key:t.number,userId:e.authUserId,company:t.company,number:t.number,expiry:a,description:t.description,subscriber:t.subscriber,canDelete:e.canDelete,onDelete:e.onDelete,insurance:t})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},Ie=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Consultant"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," ID:"),r.a.createElement("p",{className:"userItemText"},e.referenceId)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Name:"),r.a.createElement("p",{className:"userItemText"},e.referenceName)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Role:"),r.a.createElement("p",{className:"userItemText"},e.referenceRole))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.consultant)},"Delete"))))))},xe=function(e){console.log("patient consultant list props",e.patientConsultant);var t=e.patientConsultant.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10),n=void 0,i=void 0,l=void 0;return null!==t.reference?(n=t.reference._id,i=t.reference.name,l=t.reference.role):(n="no consultant info to show",i="no consultant info to show",l="no consultant info to show"),r.a.createElement(Ie,{key:t.date,userId:e.authUserId,date:a,referenceId:n,referenceName:i,referenceRole:l,canDelete:e.canDelete,onDelete:e.onDelete,consultant:t})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},Ce=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Next of Kin"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Name:"),r.a.createElement("p",{className:"userItemText"},e.name)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Email:"),r.a.createElement("p",{className:"userItemText"},e.email)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Phone:"),r.a.createElement("p",{className:"userItemText"},e.phone))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.nextOfKin)},"Delete"))))))},De=function(e){console.log("patient NextOfKin list props",e.patientNextOfKin);var t=e.patientNextOfKin.map((function(t){return r.a.createElement(Ce,{key:t.number,userId:e.authUserId,name:t.name,email:t.contact.email,phone:t.contact.phone,canDelete:e.canDelete,onDelete:e.onDelete,nextOfKin:t})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},Se=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Complaint"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Title:"),r.a.createElement("p",{className:"userItemText"},e.title)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Anamnesis:"),r.a.createElement("p",{className:"userItemText"},e.anamnesis)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Attachment:"),r.a.createElement("p",{className:"userItemText"},e.attachment.name)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.attachment.format)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.attachment.path))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.complaint)},"Delete")),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},Pe=function(e){console.log("patient complaintlist props",e.patientComplaint);var t=e.patientComplaint.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10);return r.a.createElement(Se,{key:t.date,userId:e.authUserId,date:a,title:t.title,description:t.description,anamnesis:t.anamnesis,attachment:t.attachment,canDelete:e.canDelete,onDelete:e.onDelete,complaint:t,onViewAttachment:e.onViewAttachment})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},Ae=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Survey"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Title:"),r.a.createElement("p",{className:"userItemText"},e.title)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Type:"),r.a.createElement("p",{className:"userItemText"},e.type)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Attachment:"),r.a.createElement("p",{className:"userItemText"},e.attachment.name)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.attachment.format)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.attachment.path))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.survey)},"Delete")),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},Te=function(e){console.log("patient survey list props",e.patientSurvey);var t=e.patientSurvey.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10);return r.a.createElement(Ae,{key:t.title,userId:e.authUserId,title:t.title,date:a,description:t.description,attachment:t.attachment,canDelete:e.canDelete,onDelete:e.onDelete,survey:t,onViewAttachment:e.onViewAttachment})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},we=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Vitals"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Pulse Rate:"),r.a.createElement("p",{className:"userItemText"},e.pr)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Blood Pressure 1:"),r.a.createElement("p",{className:"userItemText"},e.bp1)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Blood Pressure 2:"),r.a.createElement("p",{className:"userItemText"},e.bp2)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Resp Rate:"),r.a.createElement("p",{className:"userItemText"},e.rr)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Temp:"),r.a.createElement("p",{className:"userItemText"},e.temp)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," ps02:"),r.a.createElement("p",{className:"userItemText"},e.ps02)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Height:"),r.a.createElement("p",{className:"userItemText"},e.height)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Weight:"),r.a.createElement("p",{className:"userItemText"},e.weight)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Bmi:"),r.a.createElement("p",{className:"userItemText"},e.Bmi)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Urine Type:"),r.a.createElement("p",{className:"userItemText"},e.urineType)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Urine Value:"),r.a.createElement("p",{className:"userItemText"},e.urineValue))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.vitals)},"Delete"))))))},Oe=function(e){console.log("patient Vitals list props",e.patientVitals);var t=e.patientVitals.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10);return r.a.createElement(we,{key:a,userId:e.authUserId,date:a,pr:t.pr,bp1:t.bp1,bp2:t.bp2,rr:t.rr,temp:t.temp,height:t.height,weight:t.weight,bmi:t.bmi,urineType:t.urine.type,urineValue:t.urine.value,canDelete:e.canDelete,onDelete:e.onDelete,vitals:t})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},Ue=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Examination"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," General:"),r.a.createElement("p",{className:"userItemText"},e.general)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Area:"),r.a.createElement("p",{className:"userItemText"},e.area)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Type:"),r.a.createElement("p",{className:"userItemText"},e.type)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Measure:"),r.a.createElement("p",{className:"userItemText"},e.measure)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Value:"),r.a.createElement("p",{className:"userItemText"},e.value)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Follow Up ?"),r.a.createElement("p",{className:"userItemText"},e.followUp)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Attachment Name:"),r.a.createElement("p",{className:"userItemText"},e.attachment.name)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.attachment.format)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.attachment.path))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.examination)},"Delete")),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},Ge=function(e){console.log("patient examination list props",e.patientExamination);var t=e.patientExamination.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10);return r.a.createElement(Ue,{key:t.area,userId:e.authUserId,date:a,general:t.general,area:t.area,type:t.type,measure:t.measure,value:t.value,description:t.description,followUp:t.followUp,attachment:t.attachment,canDelete:e.canDelete,onDelete:e.onDelete,examination:t,onViewAttachment:e.onViewAttachment})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},ke=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"History"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Type:"),r.a.createElement("p",{className:"userItemText"},e.type)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Title:"),r.a.createElement("p",{className:"userItemText"},e.title)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Attachment Name:"),r.a.createElement("p",{className:"userItemText"},e.attachment.name)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.attachment.format)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.attachment.path))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.history)},"Delete")),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},Le=function(e){console.log("patient history list props",e.patientHistory);var t=e.patientHistory.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10);return r.a.createElement(ke,{key:t.date,userId:e.authUserId,type:t.type,date:a,title:t.title,description:t.description,attachment:t.attachment,canDelete:e.canDelete,onDelete:e.onDelete,history:t,onViewAttachment:e.onViewAttachment})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},_e=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Allergy"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Title:"),r.a.createElement("p",{className:"userItemText"},e.title)),r.a.createElement("li",null,r.a.createElement("p",{className:"userItemHeading"}," Type:"),r.a.createElement("p",{className:"userItemText"},e.type)),r.a.createElement("li",null,r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",null,r.a.createElement("p",{className:"userItemHeading"}," Attachment:"),r.a.createElement("p",{className:"userItemText"},e.attachment.name)),r.a.createElement("li",null,r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.attachment.format)),r.a.createElement("li",null,r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.attachment.path))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.allergies)},"Delete")),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},Fe=function(e){console.log("patient allergies list props",e.patientAllergies);var t=e.patientAllergies.map((function(t){return r.a.createElement(_e,{key:t.title,userId:e.authUserId,title:t.title,type:t.type,description:t.description,attachment:t.attachment,canDelete:e.canDelete,onDelete:e.onDelete,allergies:t,onViewAttachment:e.onViewAttachment})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},He=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Medication"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Title:"),r.a.createElement("p",{className:"userItemText"},e.title)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Type:"),r.a.createElement("p",{className:"userItemText"},e.type)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Attachment:"),r.a.createElement("p",{className:"userItemText"},e.attachment.name)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.attachment.format)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.attachment.path))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.medication)},"Delete")),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},Be=function(e){console.log("patient medication list props",e.patientMedication);var t=e.patientMedication.map((function(t){return r.a.createElement(He,{key:t.title,userId:e.authUserId,title:t.title,type:t.type,description:t.description,attachment:t.attachment,canDelete:e.canDelete,onDelete:e.onDelete,medication:t,onViewAttachment:e.onViewAttachment})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},Ke=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Investigation"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Title:"),r.a.createElement("p",{className:"userItemText"},e.title)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Type:"),r.a.createElement("p",{className:"userItemText"},e.type)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Attachment Name:"),r.a.createElement("p",{className:"userItemText"},e.attachment.name)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.attachment.format)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.attachment.path))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.investigation)},"Delete")),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},Ve=function(e){console.log("patient investigation list props",e.patientInvestigation);var t=e.patientInvestigation.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10);return r.a.createElement(Ke,{key:t.date,userId:e.authUserId,date:a,title:t.title,type:t.type,description:t.description,attachment:t.attachment,canDelete:e.canDelete,onDelete:e.onDelete,investigation:t,onViewAttachment:e.onViewAttachment})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},Je=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Diagnosis"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Title:"),r.a.createElement("p",{className:"userItemText"},e.title)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Type:"),r.a.createElement("p",{className:"userItemText"},e.type)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Attachment:"),r.a.createElement("p",{className:"userItemText"},e.attachment.name)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.attachment.format)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.attachment.path))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.diagnosis)},"Delete")),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},je=function(e){console.log("patient diagnosis list props",e.patientDiagnosis);var t=e.patientDiagnosis.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10);return r.a.createElement(Je,{key:t.date,userId:e.authUserId,date:a,title:t.title,type:t.type,description:t.description,attachment:t.attachment,canDelete:e.canDelete,onDelete:e.onDelete,diagnosis:t,onViewAttachment:e.onViewAttachment})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},ze=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Treatment"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Title:"),r.a.createElement("p",{className:"userItemText"},e.title)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Type:"),r.a.createElement("p",{className:"userItemText"},e.type)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Dose:"),r.a.createElement("p",{className:"userItemText"},e.dose)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Frequency:"),r.a.createElement("p",{className:"userItemText"},e.frequency)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Attachment Name:"),r.a.createElement("p",{className:"userItemText"},e.attachment.name)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.attachment.format)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.attachment.path))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.treatment)},"Delete")),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},qe=function(e){console.log("patient treatment list props",e.patientTreatment);var t=e.patientTreatment.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10);return r.a.createElement(ze,{key:t.title,userId:e.authUserId,date:a,title:t.title,type:t.type,description:t.description,dose:t.dose,frequency:t.frequency,attachment:t.attachment,canDelete:e.canDelete,onDelete:e.onDelete,treatment:t,onViewAttachment:e.onViewAttachment})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},Re=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Billing"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Title:"),r.a.createElement("p",{className:"userItemText"},e.title)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Type:"),r.a.createElement("p",{className:"userItemText"},e.type)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Amount:"),r.a.createElement("p",{className:"userItemText"},e.amount)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Paid ?"),r.a.createElement("p",{className:"userItemText"},e.paid)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Notes:"),r.a.createElement("p",{className:"userItemText"},e.notes)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Attachment:"),r.a.createElement("p",{className:"userItemText"},e.attachment.name)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.attachment.format)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.attachment.path))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.billing)},"Delete")),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},Me=function(e){console.log("patient billing list props",e.patientBilling);var t=e.patientBilling.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10);return r.a.createElement(Re,{key:t.date,userId:e.authUserId,date:a,type:t.type,title:t.title,description:t.description,amount:t.amount,paid:t.paid,notes:t.notes,attachment:t.attachment,canDelete:e.canDelete,onDelete:e.onDelete,billing:t,onViewAttachment:e.onViewAttachment})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},Qe=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Attachment"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Name:"),r.a.createElement("p",{className:"userItemText"},e.name)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.format)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.path))),r.a.createElement(k.a.Link,{href:""},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.attachment)},"Delete")),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},Ye=function(e){console.log("patient attachments list props",e.patientAttachments);var t=e.patientAttachments.map((function(t){return r.a.createElement(Qe,{key:t.name,userId:e.authUserId,name:t.name,format:t.format,path:t.path,canDelete:e.canDelete,onDelete:e.onDelete,attachment:t,onViewAttachment:e.onViewAttachment})}));return r.a.createElement("ul",{className:"user__list1_detail"},t)},We=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_master"},r.a.createElement("div",null,r.a.createElement("h6",{className:"userItemHeading"}," Note:"),r.a.createElement("p",{className:"userItemText"},e.note)),!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.note)},"Delete"))},Xe=function(e){console.log("patient Notes list props",e.patientNotes);var t=e.patientNotes.map((function(t){return r.a.createElement(We,{key:t,userId:e.authUserId,note:t,canDelete:e.canDelete,onDelete:e.onDelete})}));return r.a.createElement("ul",{className:"user__list1_master"},t)},Ze=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_master"},r.a.createElement("div",null,r.a.createElement("h6",{className:"userItemHeading"}," Tag:"),r.a.createElement("p",{className:"userItemText"},e.tag)),!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete.bind(void 0,e.tag)},"Delete"))},$e=function(e){console.log("patient Tags list props",e.patientTags);var t=e.patientTags.map((function(t){return r.a.createElement(Ze,{key:t,userId:e.authUserId,tag:t,canDelete:e.canDelete,onDelete:e.onDelete})}));return r.a.createElement("ul",{className:"user__list1_master"},t)},et=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Consultant"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Name:"),r.a.createElement("p",{className:"userItemText"},e.name)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Role:"),r.a.createElement("p",{className:"userItemText"},e.role)))))))},tt=function(e){console.log("VisitConsultantlist props",e.consultant);var t=void 0;if(e.consultant)return t=e.consultant.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10),n=t.reference;return console.log("\n      visitConsultantDate: ".concat(a,",\n      consultantReference: ").concat(JSON.stringify(n),",\n      ")),r.a.createElement(et,{key:t.date,userId:e.authUserId,date:a,name:n.name,role:n.role})})),r.a.createElement("ul",{className:"user__list1_detail"},t)},at=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Complaint"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Title:"),r.a.createElement("p",{className:"userItemText"},e.title)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Anamnesis:"),r.a.createElement("p",{className:"userItemText"},e.anamnesis)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Name:"),r.a.createElement("p",{className:"userItemText"},e.attachmentName)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.attachmentFormat)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.attachmentPath))),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},nt=function(e){console.log("VisitComplaintlist props",e.complaint);var t=void 0;if(e.complaint)return t=e.complaint.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10),n=t.attachment;return console.log("\n      visitComplaintDate: ".concat(a,",\n      ")),r.a.createElement(at,{key:t.date,userId:e.authUserId,date:a,title:t.title,description:t.description,anamnesis:t.anamnesis,attachment:t.attachment,attachmentName:n.name,attachmentFormat:n.format,attachmentPath:n.path,onViewAttachment:e.onViewAttachment})})),r.a.createElement("ul",{className:"user__list1_detail"},t)},rt=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Examination"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," General:"),r.a.createElement("p",{className:"userItemText"},e.general)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Area:"),r.a.createElement("p",{className:"userItemText"},e.area)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Type:"),r.a.createElement("p",{className:"userItemText"},e.type)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Measure:"),r.a.createElement("p",{className:"userItemText"},e.measure)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Value:"),r.a.createElement("p",{className:"userItemText"},e.value)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Follow Up ?"),r.a.createElement("p",{className:"userItemText"},e.followUp)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Attachment Name:"),r.a.createElement("p",{className:"userItemText"},e.attachmentName)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.attachmentFormat)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.attachmentPath))),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},it=function(e){console.log("VisitExaminationlist props",e.examination);var t=void 0;if(e.examination)return t=e.examination.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10),n=t.attachment;return console.log("\n      visitExaminationDate: ".concat(a,",\n      ")),r.a.createElement(rt,{key:t.date,userId:e.authUserId,date:a,general:t.general,area:t.area,type:t.type,measure:t.measure,value:t.value,description:t.description,followUp:t.followUp,attachment:t.attachment,attachmentName:n.name,attachmentFormat:n.format,attachmentPath:n.path,onViewAttachment:e.onViewAttachment})})),r.a.createElement("ul",{className:"user__list1_detail"},t)},lt=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Survey"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Title:"),r.a.createElement("p",{className:"userItemText"},e.title)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Attachment Name:"),r.a.createElement("p",{className:"userItemText"},e.attachmentName)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.attachmentFormat)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.attachmentPath))),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},ot=function(e){console.log("VisitSurveylist props",e.survey);var t=void 0;return e.survey&&(t=e.survey.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10),n=t.attachment;return console.log("\n      visitSurveyDate: ".concat(a,",\n      ")),r.a.createElement(lt,{key:t.date,userId:e.authUserId,date:a,title:t.title,description:t.description,attachment:t.attachment,attachmentName:n.name,attachmentFormat:n.format,attachmentPath:n.path,onViewAttachment:e.onViewAttachment})}))),r.a.createElement("ul",{className:"user__list1_detail"},t)},ct=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Vitals"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Pulse Rate:"),r.a.createElement("p",{className:"userItemText"},e.pr)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Blood Pressure 1:"),r.a.createElement("p",{className:"userItemText"},e.bp1)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Blood Pressure 2:"),r.a.createElement("p",{className:"userItemText"},e.bp2)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Resp Rate:"),r.a.createElement("p",{className:"userItemText"},e.rr)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Temp:"),r.a.createElement("p",{className:"userItemText"},e.temp)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Sp02:"),r.a.createElement("p",{className:"userItemText"},e.ps02)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Height:"),r.a.createElement("p",{className:"userItemText"},e.height)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Weight:"),r.a.createElement("p",{className:"userItemText"},e.weight)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Bmi:"),r.a.createElement("p",{className:"userItemText"},e.Bmi)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Urine Type:"),r.a.createElement("p",{className:"userItemText"},e.urineType)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Urine Value:"),r.a.createElement("p",{className:"userItemText"},e.urineValue)))))))},st=function(e){console.log("VisitVitalslist props",e.vitals);var t=void 0;return e.vitals&&(t=e.vitals.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10),n=t.urine;return console.log("\n        visitVitalsDate: ".concat(a,",\n        ")),r.a.createElement(ct,{key:t.date,userId:e.authUserId,date:a,pr:t.pr,bp1:t.bp1,bp2:t.bp2,rr:t.rr,temp:t.temp,ps02:t.ps02,height:t.height,weight:t.weight,bmi:t.bmi,urineType:n.type,urineValue:n.value})}))),r.a.createElement("ul",{className:"user__list1_detail"},t)},mt=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"History"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Type:"),r.a.createElement("p",{className:"userItemText"},e.type)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Title:"),r.a.createElement("p",{className:"userItemText"},e.title)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Attachment Name:"),r.a.createElement("p",{className:"userItemText"},e.attachmentName)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.attachmentFormat)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.attachmentPath))),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},dt=function(e){console.log("VisitHistorylist props",e.history);var t=void 0;if(e.history)return t=e.history.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10),n=t.attachment;return console.log("\n      visitHistoryDate: ".concat(a,",\n      ")),r.a.createElement(mt,{key:t.date,userId:e.authUserId,date:a,title:t.title,description:t.description,attachment:t.attachment,attachmentName:n.name,attachmentFormat:n.format,attachmentPath:n.path,onViewAttachment:e.onViewAttachment})})),r.a.createElement("ul",{className:"user__list1_detail"},t)},pt=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Investigation"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Type:"),r.a.createElement("p",{className:"userItemText"},e.type)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Title:"),r.a.createElement("p",{className:"userItemText"},e.title)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Attachment Name:"),r.a.createElement("p",{className:"userItemText"},e.attachmentName)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.attachmentFormat)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.attachmentPath))),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},ut=function(e){console.log("VisitInvestigationlist props",e.investigation);var t=void 0;return e.investigation&&(t=e.investigation.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10),n=t.attachment;return console.log("\n      visitInvestigationDate: ".concat(a,",\n      ")),r.a.createElement(pt,{key:t.date,userId:e.authUserId,date:a,type:t.type,title:t.title,description:t.description,attachment:t.attachment,attachmentName:n.name,attachmentFormat:n.format,attachmentPath:n.path,onViewAttachment:e.onViewAttachment})}))),r.a.createElement("ul",{className:"user__list1_detail"},t)},ht=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Diagnosis"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Title:"),r.a.createElement("p",{className:"userItemText"},e.title)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Type:"),r.a.createElement("p",{className:"userItemText"},e.type)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Name:"),r.a.createElement("p",{className:"userItemText"},e.attachmentName)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.attachmentFormat)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.attachmentPath))),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},ft=function(e){console.log("VisitDiagnosislist props",e.diagnosis);var t=void 0;if(e.diagnosis)return t=e.diagnosis.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10),n=t.attachment;return console.log("\n      visitDiagnosisDate: ".concat(a,",\n      ")),r.a.createElement(ht,{key:t.date,userId:e.authUserId,date:a,type:t.type,title:t.title,description:t.description,attachment:t.attachment,attachmentName:n.name,attachmentFormat:n.format,attachmentPath:n.path,onViewAttachment:e.onViewAttachment})})),r.a.createElement("ul",{className:"user__list1_detail"},t)},gt=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Treatment"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Title:"),r.a.createElement("p",{className:"userItemText"},e.title)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Type:"),r.a.createElement("p",{className:"userItemText"},e.type)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Dose:"),r.a.createElement("p",{className:"userItemText"},e.dose)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Frequency:"),r.a.createElement("p",{className:"userItemText"},e.frequency)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Attachment Name:"),r.a.createElement("p",{className:"userItemText"},e.attachmentName)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.attachmentFormat)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.attachmentPath))),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},Et=function(e){console.log("VisitTreatmentlist props",e.treatment);var t=void 0;return e.treatment&&(t=e.treatment.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10),n=t.attachment;return console.log("\n      visitTreatmentDate: ".concat(a,",\n      ")),r.a.createElement(gt,{key:t.date,userId:e.authUserId,date:a,type:t.type,title:t.title,description:t.description,dose:t.dose,frequency:t.frequency,attachment:t.attachment,attachmentName:n.name,attachmentFormat:n.format,attachmentPath:n.path,onViewAttachment:e.onViewAttachment})}))),r.a.createElement("ul",{className:"user__list1_master"},t)},yt=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_detail"},r.a.createElement("div",null,r.a.createElement(k.a,{className:"card"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,"Billing"),r.a.createElement("ul",{className:"cardUl"},r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Title:"),r.a.createElement("p",{className:"userItemText"},e.title)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Type:"),r.a.createElement("p",{className:"userItemText"},e.type)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Date:"),r.a.createElement("p",{className:"userItemText"},e.date)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Description:"),r.a.createElement("p",{className:"userItemText"},e.description)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Amount:"),r.a.createElement("p",{className:"userItemText"},e.amount)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Paid ?"),r.a.createElement("p",{className:"userItemText"},e.paid)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Notes:"),r.a.createElement("p",{className:"userItemText"},e.notes)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Attachment Name:"),r.a.createElement("p",{className:"userItemText"},e.attachmentName)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Format:"),r.a.createElement("p",{className:"userItemText"},e.attachmentFormat)),r.a.createElement("li",{className:"cardLi"},r.a.createElement("p",{className:"userItemHeading"}," Path:"),r.a.createElement("p",{className:"userItemText"},e.attachmentPath))),r.a.createElement(k.a.Link,{href:""},r.a.createElement(h.a,{variant:"info",onClick:e.onViewAttachment.bind(void 0,e.attachment)},"View"))))))},vt=function(e){console.log("VisitBillinglist props",e.billing);var t=void 0;if(e.billing)return t=e.billing.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10),n=t.attachment;return console.log("\n      visitBillingDate: ".concat(a,",\n      ")),r.a.createElement(yt,{key:t.date,userId:e.authUserId,date:a,type:t.type,title:t.title,description:t.description,amount:t.amount,paid:t.paid,notes:t.notes,attachment:t.attachment,attachmentName:n.name,attachmentFormat:n.format,attachmentPath:n.path,onViewAttachment:e.onViewAttachment})})),r.a.createElement("ul",{className:"user__list1_detail"},t)},Nt=(a(281),function(e){var t={date:"",patientName:"",consultant:"",complaint:"",examination:"",survey:"",vitals:"",history:"",investigation:"",diagnosis:"",treatment:"",billing:""};null!==e.visit&&(t=e.visit);var a=t.consultant,n=t.complaint,i=t.examination,l=t.survey,o=t.vitals,c=t.history,s=t.investigation,m=t.diagnosis,d=t.treatment,p=t.billing;return console.log("\n    patientVisit: ".concat(JSON.stringify(t),",\n    date: ").concat(t.date,",\n    consultant: ").concat(a,",\n    complaint: ").concat(n,",\n    examination: ").concat(i,",\n    survey: ").concat(l,",\n    investigation: ").concat(s,",\n    diagnosis: ").concat(m,",\n    treatment: ").concat(d,",\n    billing: ").concat(p,",\n        ")),r.a.createElement("div",{className:"PatientDetailBox1"},r.a.createElement("p",null,"Date: ",new Date(t.date).toISOString().slice(0,10)),r.a.createElement("p",null,"Patient: ",t.patientName),r.a.createElement(O.a,{defaultActiveKey:"Visit",id:"uncontrolled-tab-example",className:"tab"},r.a.createElement(U.a,{eventKey:"",title:"Visit:",disabled:!0}),r.a.createElement(U.a,{eventKey:"Consultant",title:"Consultant"},r.a.createElement(k.a,{className:"PatientDetailCard"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Text,null,"Consultants"),r.a.createElement(tt,{consultant:a,authUserId:e.authUserId})))),r.a.createElement(U.a,{eventKey:"Complaint",title:"Complaint"},r.a.createElement(k.a,{className:"PatientDetailCard"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Text,null,"Complaints"),r.a.createElement(nt,{complaint:n,authUserId:e.authUserId,onViewAttachment:e.onViewAttachment})))),r.a.createElement(U.a,{eventKey:"Examination",title:"Examination"},r.a.createElement(k.a,{className:"PatientDetailCard"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Text,null,"Examinations"),r.a.createElement(it,{examination:i,authUserId:e.authUserId,onViewAttachment:e.onViewAttachment})))),r.a.createElement(U.a,{eventKey:"Survey",title:"Survey"},r.a.createElement(k.a,{className:"PatientDetailCard"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Text,null,"Surveys"),r.a.createElement(ot,{survey:l,authUserId:e.authUserId,onViewAttachment:e.onViewAttachment})))),r.a.createElement(U.a,{eventKey:"Vitals",title:"Vitals"},r.a.createElement(k.a,{className:"PatientDetailCard"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Text,null,"Vitals"),r.a.createElement(st,{vitals:o,authUserId:e.authUserId})))),r.a.createElement(U.a,{eventKey:"History",title:"History"},r.a.createElement(k.a,{className:"PatientDetailCard"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Text,null,"History"),r.a.createElement(dt,{history:c,authUserId:e.authUserId,onViewAttachment:e.onViewAttachment})))),r.a.createElement(U.a,{eventKey:"Investigation",title:"Investigation"},r.a.createElement(k.a,{className:"PatientDetailCard"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Text,null,"Investigations"),r.a.createElement(ut,{investigation:s,authUserId:e.authUserId,onViewAttachment:e.onViewAttachment})))),r.a.createElement(U.a,{eventKey:"Diagnosis",title:"Diagnosis"},r.a.createElement(k.a,{className:"PatientDetailCard"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Text,null,"Diagnosis"),r.a.createElement(ft,{diagnosis:m,authUserId:e.authUserId,onViewAttachment:e.onViewAttachment})))),r.a.createElement(U.a,{eventKey:"Treatment",title:"Treatment"},r.a.createElement(k.a,{className:"PatientDetailCard"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Text,null,"Treatment"),r.a.createElement(Et,{treatment:d,authUserId:e.authUserId,onViewAttachment:e.onViewAttachment})))),r.a.createElement(U.a,{eventKey:"Billing",title:"Billing"},r.a.createElement(k.a,{className:"PatientDetailCard"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Text,null,"Billing"),r.a.createElement(vt,{billing:p,authUserId:e.authUserId,onViewAttachment:e.onViewAttachment}))))))}),bt=function(e){return r.a.createElement("div",{className:"SearchFormContainer"},r.a.createElement(f.a,{onSubmit:e.onGetVisit},r.a.createElement(f.a.Group,{controlId:"formBasicVisitDate"},r.a.createElement(f.a.Label,null,"Visit Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"VisitDate"})),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"primary",type:"submit"},"Submit")))},It=function(e){var t=Object(B.a)({},e.patient),a=t.appointments,n=t.insurance,i=t.consultant,l=t.nextOfKin,o=t.complaints,c=t.surveys,s=t.vitals,m=t.examination,d=t.history,p=t.allergies,u=t.medication,f=t.investigation,E=t.diagnosis,y=t.treatment,v=t.billing,N=t.attachments,b=t.notes,C=t.tags,D=new Date(1e3*t.registrationDate.substr(0,10)).toISOString().slice(0,10),S=new Date(1e3*t.dob.substr(0,10)).toISOString().slice(0,10),P=t.referralDate;t.referralDate&&(P=new Date(1e3*t.referralDate.substr(0,10)).toISOString().slice(0,10));var A=void 0;return A=null!==t.expirationDate?new Date(1e3*t.expirationDate.substr(0,10)).toISOString().slice(0,10):t.expirationDate,console.log("PatientDetail.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"PatientDetailBox1"},r.a.createElement(O.a,{defaultActiveKey:"Demographics",id:"uncontrolled-tab-example",className:"tab"},r.a.createElement(U.a,{eventKey:"Demographics",title:"Demographics"},r.a.createElement(k.a,{className:"PatientDetailCard"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,r.a.createElement("span",{className:"ul"},"Patient Details")),r.a.createElement(g.a,{className:"detailCardRow"},r.a.createElement(I.a,{md:4,className:"detailCardCol"},r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"ID :")," ",t._id),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Title :")," ",t.title),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Name :")," ",t.name),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"D.O.B :")," ",S),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Age :")," ",t.age),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Gender :")," ",t.gender),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Reg Date :")," ",D),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Ref Date :")," ",P),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Exp Date :")," ",A)),r.a.createElement(I.a,{md:4,className:"detailCardCol"},r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Phone :")," ",t.contact.phone),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Email :")," ",t.contact.email),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Address :")),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Street No :")," ",t.address.number),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Street Name :")," ",t.address.street),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Town :")," ",t.address.town),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Parish :")," ",t.address.parish),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"PO :")," ",t.address.postOffice)),r.a.createElement(I.a,{md:4,className:"detailCardCol"},r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Job Position :")," ",t.occupation.role),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Employer :")," ",t.occupation.employer),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Employer Phone :")," ",t.occupation.contact.phone),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Employer Email :")," ",t.occupation.contact.email),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Referring Doctor :")),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Name :")," ",t.referringDoctor.name),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Phone :")," ",t.referringDoctor.phone),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Email :")," ",t.referringDoctor.email),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Attending Physician :")),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Name :")," ",t.attendingPhysician.name),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Phone :")," ",t.attendingPhysician.phone),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Email :")," ",t.attendingPhysician.email))),r.a.createElement(g.a,{className:"detailCardRow"},r.a.createElement(I.a,{className:"detailCardCol"},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete},"Delete Patient !!??")),r.a.createElement(I.a,{className:"detailCardCol"},r.a.createElement(h.a,{variant:"warning",onClick:e.onCreatePdf.bind(void 0,t)},"Create Pdf")))))),r.a.createElement(U.a,{eventKey:"Appointments",title:"Appointments"},r.a.createElement(k.a.Text,null,"Appointments:"),r.a.createElement(ve,{patientAppointment:a,authUserId:e.authUserId,canDelete:e.canDelete,onDelete:e.appointmentDelete})),r.a.createElement(U.a,{eventKey:"Consultant",title:"Consultant"},r.a.createElement(k.a.Text,null,"Consultants:"),null!==i&&r.a.createElement(xe,{patientConsultant:i,authUserId:e.authUserId,canDelete:e.canDelete,onDelete:e.consultantDelete})),r.a.createElement(U.a,{eventKey:"Insurance",title:"Insurance"},r.a.createElement(k.a.Text,null,"Insurance:"),r.a.createElement(be,{patientInsurance:n,authUserId:e.authUserId,canDelete:e.canDelete,onDelete:e.insuranceDelete})),r.a.createElement(U.a,{eventKey:"NextOfKin",title:"NextOfKin"},r.a.createElement(k.a.Text,null,"NextOfKin:"),r.a.createElement(De,{patientNextOfKin:l,authUserId:e.authUserId,canDelete:e.canDelete,onDelete:e.nextOfKinDelete})),r.a.createElement(U.a,{eventKey:"Complaint",title:"Complaint"},r.a.createElement(k.a.Text,null,"Complaint:"),r.a.createElement(Pe,{patientComplaint:o,authUserId:e.authUserId,canDelete:e.canDelete,onDelete:e.complaintDelete,onViewAttachment:e.onViewAttachment})),r.a.createElement(U.a,{eventKey:"Survey",title:"Survey"},r.a.createElement(k.a.Text,null,"Surveys:"),r.a.createElement(Te,{patientSurvey:c,authUserId:e.authUserId,canDelete:e.canDelete,onDelete:e.surveyDelete,onViewAttachment:e.onViewAttachment})),r.a.createElement(U.a,{eventKey:"Vitals",title:"Vitals"},r.a.createElement(k.a.Text,null,"Vitals:"),r.a.createElement(Oe,{patientVitals:s,authUserId:e.authUserId,canDelete:e.canDelete,onDelete:e.vitalsDelete})),r.a.createElement(U.a,{eventKey:"Examination",title:"Examination"},r.a.createElement(k.a.Text,null,"Examination:"),r.a.createElement(Ge,{patientExamination:m,authUserId:e.authUserId,canDelete:e.canDelete,onDelete:e.examinationDelete,onViewAttachment:e.onViewAttachment})),r.a.createElement(U.a,{eventKey:"History",title:"History"},r.a.createElement(k.a.Text,null,"History:"),r.a.createElement(Le,{patientHistory:d,authUserId:e.authUserId,canDelete:e.canDelete,onDelete:e.historyDelete,onViewAttachment:e.onViewAttachment})),r.a.createElement(U.a,{eventKey:"Allergies",title:"Allergies"},r.a.createElement(k.a.Text,null,"Allergies:"),r.a.createElement(Fe,{patientAllergies:p,authUserId:e.authUserId,canDelete:e.canDelete,onDelete:e.allergiesDelete,onViewAttachment:e.onViewAttachment})),r.a.createElement(U.a,{eventKey:"Medication",title:"Medication"},r.a.createElement(k.a.Text,null,"Medication:"),r.a.createElement(Be,{patientMedication:u,authUserId:e.authUserId,canDelete:e.canDelete,onDelete:e.medicationDelete,onViewAttachment:e.onViewAttachment})),r.a.createElement(U.a,{eventKey:"Investigation",title:"Investigation"},r.a.createElement(k.a.Text,null,"Investigation:"),r.a.createElement(Ve,{patientInvestigation:f,authUserId:e.authUserId,canDelete:e.canDelete,onDelete:e.investigationDelete,onViewAttachment:e.onViewAttachment})),r.a.createElement(U.a,{eventKey:"Diagnosis",title:"Diagnosis"},r.a.createElement(k.a.Text,null,"Diagnosis:"),r.a.createElement(je,{patientDiagnosis:E,authUserId:e.authUserId,canDelete:e.canDelete,onDelete:e.diagnosisDelete,onViewAttachment:e.onViewAttachment})),r.a.createElement(U.a,{eventKey:"Treatment",title:"Treatment"},r.a.createElement(k.a.Text,null,"Treatment:"),r.a.createElement(qe,{patientTreatment:y,authUserId:e.authUserId,canDelete:e.canDelete,onDelete:e.treatmentDelete,onViewAttachment:e.onViewAttachment})),r.a.createElement(U.a,{eventKey:"Billing",title:"Billing"},r.a.createElement(k.a.Text,null,"Billing:"),r.a.createElement(Me,{patientBilling:v,authUserId:e.authUserId,canDelete:e.canDelete,onDelete:e.billingDelete,onViewAttachment:e.onViewAttachment})),r.a.createElement(U.a,{eventKey:"Attachments",title:"Attachments"},r.a.createElement(k.a.Text,null,"Attachments:"),r.a.createElement(Ye,{patientAttachments:N,authUserId:e.authUserId,canDelete:e.canDelete,onDelete:e.attachmentDelete,onViewAttachment:e.onViewAttachment})),r.a.createElement(U.a,{eventKey:"Notes",title:"Notes"},r.a.createElement(k.a.Text,null,"Notes:"),r.a.createElement(Xe,{patientNotes:b,authUserId:e.authUserId,canDelete:e.canDelete,onDelete:e.noteDelete})),r.a.createElement(U.a,{eventKey:"Tags",title:"Tags"},r.a.createElement(k.a.Text,null,"Tags:"),r.a.createElement($e,{patientTags:C,authUserId:e.authUserId,canDelete:e.canDelete,onDelete:e.tagDelete})),r.a.createElement(U.a,{eventKey:"Visit",title:"Visit"},r.a.createElement(k.a.Text,null),r.a.createElement(bt,{authUserId:e.authUserId,canConfirm:!0,onGetVisit:e.onGetVisit,confirmText:"Search",patient:e.patient}),null!==e.visit&&r.a.createElement(Nt,{authUserId:e.authUserId,visit:e.visit,onViewAttachment:e.onViewAttachment}))))},xt=function(e){return r.a.createElement("li",{key:e.patientId,className:"users__list-item_master"},r.a.createElement("div",null,r.a.createElement("h5",{className:"userItemHeading"}," Name:"),r.a.createElement("p",{className:"userItemText"},e.name),r.a.createElement("h5",{className:"userItemHeading"}," Address:"),r.a.createElement("p",{className:"userItemText"},e.addressParish),r.a.createElement("p",{className:"userItemText"},e.addressTown)),r.a.createElement("div",null,r.a.createElement(h.a,{variant:"primary",onClick:e.onDetail.bind(void 0,e._id)},"Details")))},Ct=function(e){var t=e.searchPatients.map((function(t){return r.a.createElement(r.a.Fragment,null,r.a.createElement(xt,{key:t._id,userId:e.authUserId,_id:t._id,name:t.name,addressParish:t.address.parish,addressTown:t.address.town,onDetail:e.onViewDetail}))}));return r.a.createElement("ul",{className:"user__list1_master"},t)},Dt=function(e){return r.a.createElement("div",{className:"SearchFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Group,{controlId:"formBasicFieldSelect"},r.a.createElement(f.a.Label,null,"Field"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"select"),r.a.createElement("option",null,"name"),r.a.createElement("option",null,"dob"),r.a.createElement("option",null,"age"),r.a.createElement("option",null,"gender"),r.a.createElement("option",null,"address.town"),r.a.createElement("option",null,"address.parish"),r.a.createElement("option",null,"registrationDate"),r.a.createElement("option",null,"referralDate"),r.a.createElement("option",null,"expirationDate"),r.a.createElement("option",null,"attendingPhysician.name"),r.a.createElement("option",null,"referringDoctor.name"))),r.a.createElement(f.a.Group,{controlId:"formBasicField"},r.a.createElement(f.a.Label,null,"Field"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Field"})),r.a.createElement(f.a.Group,{controlId:"formBasicQuery"},r.a.createElement(f.a.Label,null,"Query"),r.a.createElement(f.a.Control,{type:"textarea",rows:"5",placeholder:"Query"})),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"success",type:"submit"},"Search")))},St=function(e){return r.a.createElement("div",{className:"SearchFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Group,{controlId:"formBasicId"},r.a.createElement(f.a.Label,null,"Patient Id"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Id"})),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"success",type:"submit"},"Search")))},Pt=function(e){return r.a.createElement("div",{className:"SearchFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Group,{controlId:"formBasicName"},r.a.createElement(f.a.Label,null,"Name"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Name"})),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"success",type:"submit"},"Search")))},At=function(e){return r.a.createElement("div",{className:"CreateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTitle"},r.a.createElement(f.a.Label,null,"Title"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Patient Title"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridName"},r.a.createElement(f.a.Label,null,"Name"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Patient Name"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridDob"},r.a.createElement(f.a.Label,null,"D.O.B"),r.a.createElement(f.a.Control,{type:"date",placeholder:"Date of Birth"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAge"},r.a.createElement(f.a.Label,null,"Age"),r.a.createElement(f.a.Control,{type:"number",placeholder:"Age"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridGender"},r.a.createElement(f.a.Label,null,"Gender"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"Male"),r.a.createElement("option",null,"Female")))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridContactEmail"},r.a.createElement(f.a.Label,null,"Email"),r.a.createElement(f.a.Control,{type:"email",placeholder:"Patient Email"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridContactPhone"},r.a.createElement(f.a.Label,null,"Phone"),r.a.createElement(f.a.Control,{type:"number",placeholder:"Address Phone"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressNumber"},r.a.createElement(f.a.Label,null,"Street No."),r.a.createElement(f.a.Control,{type:"number",placeholder:"Address Street No."})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressStreet"},r.a.createElement(f.a.Label,null,"Street Name"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Address Street Name"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressTown"},r.a.createElement(f.a.Label,null,"Town"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Address Town"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressParish"},r.a.createElement(f.a.Label,null,"Parish"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Address Parish"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressPostOffice"},r.a.createElement(f.a.Label,null,"Post Office"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Address PostOffice"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridRegistrationDate"},r.a.createElement(f.a.Label,null,"Registration Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"Registration Date"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridRegistrationDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridReferralDate"},r.a.createElement(f.a.Label,null,"Referral Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"Referral Date"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridReferralDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridExpirationDate"},r.a.createElement(f.a.Label,null,"Expiration Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"Expiration Date"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridReferringDoctorName"},r.a.createElement(f.a.Label,null,"Referring Doctor: Name"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Ref Doctor Name"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridReferringDoctorEmail"},r.a.createElement(f.a.Label,null,"Referring Doctor: Email"),r.a.createElement(f.a.Control,{type:"email",placeholder:"Ref Doctor Email"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridReferringDoctorPhone"},r.a.createElement(f.a.Label,null,"Referring Doctor: Phone"),r.a.createElement(f.a.Control,{type:"number",placeholder:"Ref Doctor Phone"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAttendingPhysicianName"},r.a.createElement(f.a.Label,null,"Attending Physician: Name"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Attending Physician Name"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAttendingPhysicianEmail"},r.a.createElement(f.a.Label,null,"Attending Physician: Email"),r.a.createElement(f.a.Control,{type:"email",placeholder:"Attending Physician Email"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAttendingPhysicianPhone"},r.a.createElement(f.a.Label,null,"Attending Physician: Phone"),r.a.createElement(f.a.Control,{type:"number",placeholder:"Attending Physician Phone"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridOccupationRole"},r.a.createElement(f.a.Label,null,"Job Role"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Job Role"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridOccupationEmployer"},r.a.createElement(f.a.Label,null,"Employer"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Employer Name"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridOccupationEmployerContactPhone"},r.a.createElement(f.a.Label,null,"Employer: Phone"),r.a.createElement(f.a.Control,{type:"number",placeholder:"Employer Phone"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridOccupationEmployerContactEmail"},r.a.createElement(f.a.Label,null,"Employer: Email"),r.a.createElement(f.a.Control,{type:"email",placeholder:"Employer Email"}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"2",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"success",type:"submit"},"Create New")))},Tt=function(e){console.log("UpdatePatientForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientForm.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTitle"},r.a.createElement(f.a.Label,null,"Title"),r.a.createElement(f.a.Control,{type:"text",placeholder:t.title})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridName"},r.a.createElement(f.a.Label,null,"Name"),r.a.createElement(f.a.Control,{type:"text",placeholder:t.name})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridDob"},r.a.createElement(f.a.Label,null,"D.O.B"),r.a.createElement(f.a.Control,{type:"date",placeholder:t.dob})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAge"},r.a.createElement(f.a.Label,null,"Age"),r.a.createElement(f.a.Control,{type:"number",placeholder:t.age})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridGender"},r.a.createElement(f.a.Label,null,"Gender"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"Male"),r.a.createElement("option",null,"Female")))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridContactEmail"},r.a.createElement(f.a.Label,null,"Email"),r.a.createElement(f.a.Control,{type:"email",placeholder:t.contact.email})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridContactPhone"},r.a.createElement(f.a.Label,null,"Phone"),r.a.createElement(f.a.Control,{type:"number",placeholder:t.contact.phone}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressNumber"},r.a.createElement(f.a.Label,null,"Street No."),r.a.createElement(f.a.Control,{type:"number",placeholder:t.address.number})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressStreet"},r.a.createElement(f.a.Label,null,"Street Name"),r.a.createElement(f.a.Control,{type:"text",placeholder:t.address.street})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressTown"},r.a.createElement(f.a.Label,null,"Town"),r.a.createElement(f.a.Control,{type:"text",placeholder:t.address.town})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressParish"},r.a.createElement(f.a.Label,null,"Parish"),r.a.createElement(f.a.Control,{type:"text",placeholder:t.address.parish})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAddressPostOffice"},r.a.createElement(f.a.Label,null,"Post Office"),r.a.createElement(f.a.Control,{type:"text",placeholder:t.address.postOffice}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridRegistrationDate"},r.a.createElement(f.a.Label,null,"Registration Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:t.registrationDate})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridRegistrationDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridReferralDate"},r.a.createElement(f.a.Label,null,"Referral Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:t.referralDate})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridReferralDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridExpirationDate"},r.a.createElement(f.a.Label,null,"Expiration Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:t.expirationDate})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridExpirationDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridReferringDoctorName"},r.a.createElement(f.a.Label,null,"Referring Doctor: Name"),r.a.createElement(f.a.Control,{type:"text",placeholder:t.referringDoctor.name})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridReferringDoctorEmail"},r.a.createElement(f.a.Label,null,"Referring Doctor: Email"),r.a.createElement(f.a.Control,{type:"email",placeholder:t.referringDoctor.email})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridReferringDoctorPhone"},r.a.createElement(f.a.Label,null,"Referring Doctor: Phone"),r.a.createElement(f.a.Control,{type:"number",placeholder:t.referringDoctor.phone}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAttendingPhysicianName"},r.a.createElement(f.a.Label,null,"Attending Physician: Name"),r.a.createElement(f.a.Control,{type:"text",placeholder:t.attendingPhysician.name})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAttendingPhysicianEmail"},r.a.createElement(f.a.Label,null,"Attending Physician: Email"),r.a.createElement(f.a.Control,{type:"email",placeholder:t.attendingPhysician.email})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAttendingPhysicianPhone"},r.a.createElement(f.a.Label,null,"Attending Physician: Phone"),r.a.createElement(f.a.Control,{type:"number",placeholder:t.attendingPhysician.phone}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridOccupationRole"},r.a.createElement(f.a.Label,null,"Job Role"),r.a.createElement(f.a.Control,{type:"text",placeholder:t.occupation.role})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridOccupationEmployer"},r.a.createElement(f.a.Label,null,"Employer"),r.a.createElement(f.a.Control,{type:"text",placeholder:t.occupation.employer})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridOccupationEmployerContactPhone"},r.a.createElement(f.a.Label,null,"Employer: Phone"),r.a.createElement(f.a.Control,{type:"number",placeholder:t.occupation.contact.phone}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridOccupationEmployerContactEmail"},r.a.createElement(f.a.Label,null,"Employer: Email"),r.a.createElement(f.a.Control,{type:"email",placeholder:t.occupation.contact.email}))),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"success",type:"submit"},"Edit Patient")))},wt=function(e){console.log("UpdatePatientFieldForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientFieldForm.props.user:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridFieldSelect"},r.a.createElement(f.a.Label,null,"Field Options"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"select"),r.a.createElement("option",null,"name"),r.a.createElement("option",null,"dob"),r.a.createElement("option",null,"age"),r.a.createElement("option",null,"gender"),r.a.createElement("option",null,"address.town"),r.a.createElement("option",null,"address.parish"),r.a.createElement("option",null,"registrationDate"),r.a.createElement("option",null,"referralDate"),r.a.createElement("option",null,"expirationDate"),r.a.createElement("option",null,"attendingPhysician.name"),r.a.createElement("option",null,"referringDoctor.name"))),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridField"},r.a.createElement(f.a.Label,null,"Field"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Field"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridQuery"},r.a.createElement(f.a.Label,null,"Query"),r.a.createElement(f.a.Label,null,"Date Format YYYY-MM-DD"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Query"}))),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"success",type:"submit"},"Edit Patient Field")))},Ot=function(e){console.log("UpdatePatientConsultantForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientConsultantForm.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridConsultantDate"},r.a.createElement(f.a.Label,null,"Consultation Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"ConsultantDate"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridConsultantDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"9",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"success",eventKey:"9",className:"btn",type:"submit"},"Submit")))},Ut=function(e){console.log("UpdatePatientInsuranceForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientInsuranceForm.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridInsuranceCompany"},r.a.createElement(f.a.Label,null,"Company"),r.a.createElement(f.a.Control,{type:"text",placeholder:"insuranceCompany"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridInsuranceNumber"},r.a.createElement(f.a.Label,null,"Number"),r.a.createElement(f.a.Control,{type:"number",placeholder:"insuranceNumber"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridInsuranceDescription"},r.a.createElement(f.a.Label,null,"Description"),r.a.createElement(f.a.Control,{type:"text",placeholder:"insuranceDescription"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridInsuranceExpiry"},r.a.createElement(f.a.Label,null,"Expiry"),r.a.createElement(f.a.Control,{type:"date",placeholder:"insuranceExpiry"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridInsuranceSubscriberCompany"},r.a.createElement(f.a.Label,null,"Subscriber Company"),r.a.createElement(f.a.Control,{type:"text",placeholder:"insuranceSubscriberCompany"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridInsuranceSubscriberDescription"},r.a.createElement(f.a.Label,null,"Description"),r.a.createElement(f.a.Control,{tas:"textarea",rows:"3",placeholder:"insuranceSubscriberDescription"}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"9",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"success",eventKey:"9",className:"btn",type:"submit"},"Submit")))},Gt=function(e){console.log("UpdatePatientNextOfKinForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientNextOfKinForm.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridNextOfKinName"},r.a.createElement(f.a.Label,null,"Name"),r.a.createElement(f.a.Control,{type:"text",placeholder:"NextOfKinName"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridNextOfKinPhone"},r.a.createElement(f.a.Label,null,"Phone"),r.a.createElement(f.a.Control,{type:"number",placeholder:"NextOfKinPhone"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridNextOfKinEmail"},r.a.createElement(f.a.Label,null,"Email"),r.a.createElement(f.a.Control,{type:"email",placeholder:"NextOfKinEmail"}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"9",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"success",eventKey:"9",className:"btn",type:"submit"},"Submit")))},kt=function(e){console.log("UpdatePatientComplaintForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientComplaintForm.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridComplaintDate"},r.a.createElement(f.a.Label,null,"Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"ComplaintDate"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridComplaintDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridComplaintTitle"},r.a.createElement(f.a.Label,null,"Title"),r.a.createElement(f.a.Control,{type:"text",placeholder:"ComplaintTitle"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridComplaintDescription"},r.a.createElement(f.a.Label,null,"Description"),r.a.createElement(f.a.Control,{as:"textarea",rows:"3",placeholder:"ComplaintDescription"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridComplaintAnamnesis"},r.a.createElement(f.a.Label,null,"Anamnesis"),r.a.createElement(f.a.Control,{as:"textarea",rows:"3",placeholder:"ComplaintAnamnesis"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridComplaintAttachmentFormat"},r.a.createElement(f.a.Label,null,"Attachment Format"),r.a.createElement(f.a.Control,{type:"text",placeholder:"complaintAttachmentFormat"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridComplaintAttachmentFile"},r.a.createElement(f.a.Label,null,"File"),r.a.createElement(f.a.Control,{type:"file",placeholder:"File",onChange:function(e){console.log(e.target.files[0]),E._currentValue.file=e.target.files[0],console.log(E._currentValue.file)}}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"9",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"success",eventKey:"9",className:"btn",type:"submit"},"Submit")))},Lt=function(e){console.log("UpdatePatientSurveyForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientSurveyForm.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridSurveyDate"},r.a.createElement(f.a.Label,null,"Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"SurveyDate"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridSurveyDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridSurveyTitle"},r.a.createElement(f.a.Label,null,"Title"),r.a.createElement(f.a.Control,{type:"text",placeholder:"SurveyTitle"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridSurveyDescription"},r.a.createElement(f.a.Label,null,"Description"),r.a.createElement(f.a.Control,{as:"textarea",rows:"3",placeholder:"SurveyDescription"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridSurveyAttachmentFormat"},r.a.createElement(f.a.Label,null,"Attachment Format"),r.a.createElement(f.a.Control,{type:"text",placeholder:"SurveyAttachmentFormat"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridSurveyAttachmentFile"},r.a.createElement(f.a.Label,null,"File"),r.a.createElement(f.a.Control,{type:"file",placeholder:"File",onChange:function(e){console.log(e.target.files[0]),E._currentValue.file=e.target.files[0],console.log(E._currentValue.file)}}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"9",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"success",eventKey:"9",className:"btn",type:"submit"},"Submit")))},_t=function(e){console.log("UpdatePatientVitalsForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientVitalsForm.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridVitalsDate"},r.a.createElement(f.a.Label,null,"Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"VitalsDate"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridVitalsDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridVitalsPr"},r.a.createElement(f.a.Label,null,"Pulse rate (unit)"),r.a.createElement(f.a.Control,{type:"number",placeholder:"VitalsPr"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridVitalsBp1"},r.a.createElement(f.a.Label,null,"Blood pressure 1 "),r.a.createElement(f.a.Control,{type:"number",placeholder:"VitalsBp1"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridVitalsBp2"},r.a.createElement(f.a.Label,null,"Blood pressure 2"),r.a.createElement(f.a.Control,{type:"number",placeholder:"VitalsBp2"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridVitalsRr"},r.a.createElement(f.a.Label,null,"Respiratory rate (unit)"),r.a.createElement(f.a.Control,{type:"number",placeholder:"VitalsRr"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridVitalsTemp"},r.a.createElement(f.a.Label,null,"Temperature (unit) "),r.a.createElement(f.a.Control,{type:"number",placeholder:"VitalsTemp"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridVitalsPs02"},r.a.createElement(f.a.Label,null,"02 saturation (unit)"),r.a.createElement(f.a.Control,{type:"number",placeholder:"VitalsPs02"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridVitalsHeight"},r.a.createElement(f.a.Label,null,"Height (unit)"),r.a.createElement(f.a.Control,{type:"number",placeholder:"VitalsHeight"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridVitalsWeight"},r.a.createElement(f.a.Label,null,"Weight (unit)"),r.a.createElement(f.a.Control,{type:"number",placeholder:"VitalsWeight"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridVitalsBmi"},r.a.createElement(f.a.Label,null,"Bmi"),r.a.createElement(f.a.Control,{type:"number",placeholder:"VitalsBmi"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridVitalsUrineType"},r.a.createElement(f.a.Label,null,"Urine type"),r.a.createElement(f.a.Control,{type:"text",placeholder:"VitalsUrineType"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridVitalsUrineValue"},r.a.createElement(f.a.Label,null,"Urine value"),r.a.createElement(f.a.Control,{type:"text",placeholder:"VitalsUrineValue"}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"9",className:"btn"},"Cancel"),e.canConfirm&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"success",eventKey:"9",className:"btn",type:"submit"},"Submit")))},Ft=function(e){console.log("UpdatePatientExaminationForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientExaminationForm.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridExaminationDate"},r.a.createElement(f.a.Label,null,"Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"ExaminationDate"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridExaminationDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridExaminationAreaSelect"},r.a.createElement(f.a.Label,null,"Area Options"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"select"),r.a.createElement("option",null,"nose"),r.a.createElement("option",null,"fauces"),r.a.createElement("option",null,"ears"),r.a.createElement("option",null,"larynx"),r.a.createElement("option",null,"neck"),r.a.createElement("option",null,"chest"),r.a.createElement("option",null,"cvs"),r.a.createElement("option",null,"abdomen"))),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridExaminationArea"},r.a.createElement(f.a.Label,null,"Area"),r.a.createElement(f.a.Control,{type:"text",placeholder:"ExaminationArea"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridExaminationGeneral"},r.a.createElement(f.a.Label,null,"General"),r.a.createElement(f.a.Control,{type:"text",placeholder:"ExaminationGeneral"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridExaminationType"},r.a.createElement(f.a.Label,null,"Type"),r.a.createElement(f.a.Control,{type:"text",placeholder:"ExaminationType"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridExaminationMeasure"},r.a.createElement(f.a.Label,null,"Measure"),r.a.createElement(f.a.Control,{type:"text",placeholder:"ExaminationMeasure"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridExaminationValue"},r.a.createElement(f.a.Label,null,"Value"),r.a.createElement(f.a.Control,{type:"text",placeholder:"ExaminationValue"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridExaminationDescription"},r.a.createElement(f.a.Label,null,"Description"),r.a.createElement(f.a.Control,{as:"textarea",rows:"3",placeholder:"ExaminationDescription"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridExaminationFollowUp"},r.a.createElement(f.a.Label,null,"FollowUp ?"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"true"),r.a.createElement("option",null,"false")))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridExaminationAttachmentFormat"},r.a.createElement(f.a.Label,null,"Attachment Format"),r.a.createElement(f.a.Control,{type:"text",placeholder:"ExaminationAttachmentFormat"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridExaminationAttachmentFile"},r.a.createElement(f.a.Label,null,"File"),r.a.createElement(f.a.Control,{type:"file",placeholder:"File",onChange:function(e){console.log(e.target.files[0]),E._currentValue.file=e.target.files[0],console.log(E._currentValue.file)}}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"9",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"success",eventKey:"9",className:"btn",type:"submit"},"Submit")))},Ht=function(e){console.log("UpdatePatientHistoryForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientHistoryForm.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridHistoryType"},r.a.createElement(f.a.Label,null,"Type"),r.a.createElement(f.a.Control,{type:"text",placeholder:"HistoryType"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridHistoryDate"},r.a.createElement(f.a.Label,null,"Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"HistoryDate"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridHistoryDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridHistoryTitle"},r.a.createElement(f.a.Label,null,"Title"),r.a.createElement(f.a.Control,{type:"text",placeholder:"HistoryTitle"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridHistoryDescription"},r.a.createElement(f.a.Label,null,"Description"),r.a.createElement(f.a.Control,{as:"textarea",rows:"3",placeholder:"HistoryDescription"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridHistoryAttachmentFormat"},r.a.createElement(f.a.Label,null,"Attachment Format"),r.a.createElement(f.a.Control,{type:"text",placeholder:"HistoryAttachmentFormat"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridHistoryAttachmentFile"},r.a.createElement(f.a.Label,null,"File"),r.a.createElement(f.a.Control,{type:"file",placeholder:"File",onChange:function(e){console.log(e.target.files[0]),E._currentValue.file=e.target.files[0],console.log(E._currentValue.file)}}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"9",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"success",eventKey:"9",className:"btn",type:"submit"},"Submit")))},Bt=function(e){console.log("UpdatePatientAllergiesForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientAllergiesForm.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAllergiesTitle"},r.a.createElement(f.a.Label,null,"Title"),r.a.createElement(f.a.Control,{type:"text",placeholder:"AllergiesTitle"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAllergiesTypeSelect"},r.a.createElement(f.a.Label,null,"Type Options"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"select"),r.a.createElement("option",null,"food"),r.a.createElement("option",null,"drug"))),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAllergiesType"},r.a.createElement(f.a.Label,null,"Type"),r.a.createElement(f.a.Control,{type:"text",placeholder:"AllergiesType"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAllergiesDescription"},r.a.createElement(f.a.Label,null,"Description"),r.a.createElement(f.a.Control,{as:"textarea",rows:"3",placeholder:"AllergiesDescription"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAllergiesAttachmentFormat"},r.a.createElement(f.a.Label,null,"Attachment Format"),r.a.createElement(f.a.Control,{type:"text",placeholder:"AllergiesAttachmentFormat"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAllergiesAttachmentFile"},r.a.createElement(f.a.Label,null,"File"),r.a.createElement(f.a.Control,{type:"file",placeholder:"File",onChange:function(e){console.log(e.target.files[0]),E._currentValue.file=e.target.files[0],console.log(E._currentValue.file)}}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"9",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"success",eventKey:"9",className:"btn",type:"submit"},"Submit")))},Kt=function(e){console.log("UpdatePatientMedicationForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientMedicationForm.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridMedicationTitle"},r.a.createElement(f.a.Label,null,"Title"),r.a.createElement(f.a.Control,{type:"text",placeholder:"MedicationTitle"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridMedicationType"},r.a.createElement(f.a.Label,null,"Type"),r.a.createElement(f.a.Control,{type:"text",placeholder:"MedicationType"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridMedicationDescription"},r.a.createElement(f.a.Label,null,"Description"),r.a.createElement(f.a.Control,{as:"textarea",rows:"3",placeholder:"MedicationDescription"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridMedicationAttachmentFormat"},r.a.createElement(f.a.Label,null,"Attachment Format"),r.a.createElement(f.a.Control,{type:"text",placeholder:"MedicationAttachmentFormat"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridMedicationAttachmentFile"},r.a.createElement(f.a.Label,null,"File"),r.a.createElement(f.a.Control,{type:"file",placeholder:"File",onChange:function(e){console.log(e.target.files[0]),E._currentValue.file=e.target.files[0],console.log(E._currentValue.file)}}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"9",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"success",eventKey:"9",className:"btn",type:"submit"},"Submit")))},Vt=function(e){console.log("UpdatePatientInvestigationForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientInvestigationForm.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridInvestigationDate"},r.a.createElement(f.a.Label,null,"Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"InvestigationDate"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridInvestigationTitle"},r.a.createElement(f.a.Label,null,"Title"),r.a.createElement(f.a.Control,{type:"text",placeholder:"InvestigationTitle"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridInvestigationTypeSelect"},r.a.createElement(f.a.Label,null,"Type Options"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"select"),r.a.createElement("option",null,"procedure"),r.a.createElement("option",null,"prescription"))),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridInvestigationType"},r.a.createElement(f.a.Label,null,"Type"),r.a.createElement(f.a.Control,{type:"text",placeholder:"InvestigationType"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridInvestigationDescription"},r.a.createElement(f.a.Label,null,"Description"),r.a.createElement(f.a.Control,{as:"textarea",rows:"3",placeholder:"InvestigationDescription"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridInvestigationAttachmentFormat"},r.a.createElement(f.a.Label,null,"Attachment Format"),r.a.createElement(f.a.Control,{type:"text",placeholder:"InvestigationAttachmentFormat"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridInvestigationAttachmentFile"},r.a.createElement(f.a.Label,null,"File"),r.a.createElement(f.a.Control,{type:"file",placeholder:"File",onChange:function(e){console.log(e.target.files[0]),E._currentValue.file=e.target.files[0],console.log(E._currentValue.file)}}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"9",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"success",eventKey:"9",className:"btn",type:"submit"},"Submit")))},Jt=function(e){console.log("UpdatePatientDiagnosisForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientDiagnosisForm.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridDiagnosisDate"},r.a.createElement(f.a.Label,null,"Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"DiagnosisDate"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridDiagnosisDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridDiagnosisTitle"},r.a.createElement(f.a.Label,null,"Title"),r.a.createElement(f.a.Control,{type:"text",placeholder:"DiagnosisTitle"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridDiagnosisType"},r.a.createElement(f.a.Label,null,"Type"),r.a.createElement(f.a.Control,{type:"text",placeholder:"DiagnosisType"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridDiagnosisDescription"},r.a.createElement(f.a.Label,null,"Description"),r.a.createElement(f.a.Control,{as:"textarea",rows:"3",placeholder:"DiagnosisDescription"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridDiagnosisAttachmentFormat"},r.a.createElement(f.a.Label,null,"Attachment Format"),r.a.createElement(f.a.Control,{type:"text",placeholder:"DiagnosisAttachmentFormat"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridDiagnosisAttachmentFile"},r.a.createElement(f.a.Label,null,"File"),r.a.createElement(f.a.Control,{type:"file",placeholder:"File",onChange:function(e){console.log(e.target.files[0]),E._currentValue.file=e.target.files[0],console.log(E._currentValue.file)}}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"9",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"success",eventKey:"9",className:"btn",type:"submit"},"Submit")))},jt=function(e){console.log("UpdatePatientTreatmentForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientTreatmentForm.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTreatmentDate"},r.a.createElement(f.a.Label,null,"Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"TreatmentDate"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTreatmentDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTreatmentTitle"},r.a.createElement(f.a.Label,null,"Title"),r.a.createElement(f.a.Control,{type:"text",placeholder:"TreatmentTitle"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTreatmentType"},r.a.createElement(f.a.Label,null,"Type"),r.a.createElement(f.a.Control,{type:"text",placeholder:"TreatmentType"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTreatmentDescription"},r.a.createElement(f.a.Label,null,"Description"),r.a.createElement(f.a.Control,{as:"textarea",rows:"3",placeholder:"TreatmentDescription"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTreatmentDose"},r.a.createElement(f.a.Label,null,"Dose"),r.a.createElement(f.a.Control,{type:"text",placeholder:"TreatmentDose"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTreatmentFrequency"},r.a.createElement(f.a.Label,null,"Frequency"),r.a.createElement(f.a.Control,{type:"text",placeholder:"TreatmentFrequency"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTreatmentTypeSelect"},r.a.createElement(f.a.Label,null,"Type Options"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"select"),r.a.createElement("option",null,"procedure"),r.a.createElement("option",null,"prescription"))),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTreatmentType"},r.a.createElement(f.a.Label,null,"Type"),r.a.createElement(f.a.Control,{type:"text",placeholder:"TreatmentType"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTreatmentAttachmentFormat"},r.a.createElement(f.a.Label,null,"Attachment Format"),r.a.createElement(f.a.Control,{type:"text",placeholder:"TreatmentAttachmentFormat"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTreatmentAttachmentFile"},r.a.createElement(f.a.Label,null,"File"),r.a.createElement(f.a.Control,{type:"file",placeholder:"File",onChange:function(e){console.log(e.target.files[0]),E._currentValue.file=e.target.files[0],console.log(E._currentValue.file)}}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"9",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"success",eventKey:"9",className:"btn",type:"submit"},"Submit")))},zt=function(e){console.log("UpdatePatientBillingForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientBillingForm.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridBillingDate"},r.a.createElement(f.a.Label,null,"Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"BillingDate"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridBillingDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridBillingTitle"},r.a.createElement(f.a.Label,null,"Title"),r.a.createElement(f.a.Control,{type:"text",placeholder:"BillingTitle"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridBillingType"},r.a.createElement(f.a.Label,null,"Type"),r.a.createElement(f.a.Control,{type:"text",placeholder:"BillingType"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridBillingDescription"},r.a.createElement(f.a.Label,null,"Description"),r.a.createElement(f.a.Control,{as:"textarea",rows:"3",placeholder:"BillingDescription"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridBillingAmount"},r.a.createElement(f.a.Label,null,"Amount"),r.a.createElement(f.a.Control,{type:"text",placeholder:"BillingAmount"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridBillingPaid"},r.a.createElement(f.a.Label,null,"Paid ?"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"true"),r.a.createElement("option",null,"false"))),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridBillingNotes"},r.a.createElement(f.a.Label,null,"Notes"),r.a.createElement(f.a.Control,{as:"textarea",rows:"3",placeholder:"BillingNotes"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridBillingAttachmentFormat"},r.a.createElement(f.a.Label,null,"Attachment Format"),r.a.createElement(f.a.Control,{type:"text",placeholder:"BillingAttachmentFormat"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridBillingAttachmentFile"},r.a.createElement(f.a.Label,null,"File"),r.a.createElement(f.a.Control,{type:"file",placeholder:"File",onChange:function(e){console.log(e.target.files[0]),E._currentValue.file=e.target.files[0],console.log(E._currentValue.file)}}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"9",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"success",eventKey:"9",className:"btn",type:"submit"},"Submit")))},qt=function(e){console.log("UpdatePatientAttachmentForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientAttachmentForm.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridPatientAttachmentFormat"},r.a.createElement(f.a.Label,null,"Format"),r.a.createElement(f.a.Control,{type:"text",placeholder:"PatientAttachmentFormat"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAttachmentFile"},r.a.createElement(f.a.Label,null,"File"),r.a.createElement(f.a.Control,{type:"file",placeholder:"File",onChange:function(e){console.log(e.target.files[0]),E._currentValue.file=e.target.files[0],console.log(E._currentValue.file)}}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"9",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"success",type:"submit"},"Add")))},Rt=function(e){console.log("UpdatePatientNoteForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientNoteForm.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridNote"},r.a.createElement(f.a.Label,null,"Note"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Note"}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"9",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"success",eventKey:"9",className:"btn",type:"submit"},"Submit")))},Mt=function(e){console.log("UpdatePatientTagForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.patient);return console.log("UpdatePatientTagForm.props.patient:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTag"},r.a.createElement(f.a.Label,null,"Tag"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Tag"}))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"9",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"success",eventKey:"9",className:"btn",type:"submit"},"Submit")))},Qt=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(s.a)(this,Object(m.a)(t).call(this,e))).state={creating:!1,updating:!1,searching:!1,updatingArray:!1,deleting:!1,patients:[],searchPatients:[],isLoading:!1,selectedPatient:null,patientUpdateField:null,patientSearchField:null,patientSearchQuery:null,canDelete:null,visit:null,userAlert:null,showAttachment:!1,showThisAttachmentFile:null,showThisAttachmentType:null,createPdf:!1,pdfData:null},a.isActive=!0,a.startCreatePatientHandler=function(){a.setState({creating:!0}),console.log("CreatePatientForm...")},a.startUpdatePatientHandler=function(){a.setState({updating:!0,updatingArray:!0}),console.log("UpdatePatientForm...")},a.startSearchPatientHandler=function(){a.setState({searching:!0}),console.log("SearchPatientForm...")},a.modalConfirmHandler=function(e){console.log("CreatePatientFormData:  ",e.target.formGridName.value),a.setState({creating:!1});var t=a.context.userId,n=e.target.formGridTitle.value,r=e.target.formGridName.value,i=e.target.formGridDob.value,l=e.target.formGridAge.value,o=e.target.formGridGender.value,c=e.target.formGridAddressNumber.value,s=e.target.formGridAddressStreet.value,m=e.target.formGridAddressTown.value,d=e.target.formGridAddressParish.value,p=e.target.formGridAddressPostOffice.value,u=e.target.formGridContactPhone.value,h=e.target.formGridContactEmail.value,f=e.target.formGridRegistrationDate.value;!0===e.target.formGridRegistrationDateTodayCheckbox.checked&&(f=(new Date).toISOString().slice(0,10));var g=e.target.formGridReferralDate.value;!0===e.target.formGridReferralDateTodayCheckbox.checked&&(g=(new Date).toISOString().slice(0,10));var E=e.target.formGridExpirationDate.value,y=e.target.formGridAttendingPhysicianName.value,v=e.target.formGridAttendingPhysicianEmail.value,N=e.target.formGridAttendingPhysicianPhone.value,b=e.target.formGridReferringDoctorName.value,I=e.target.formGridReferringDoctorEmail.value,x=e.target.formGridReferringDoctorPhone.value,C=e.target.formGridOccupationRole.value,D=e.target.formGridOccupationEmployer.value,S=e.target.formGridOccupationEmployerContactPhone.value,A=e.target.formGridOccupationEmployerContactEmail.value;if(0===r.trim().length||0===l.trim().length||0===c.trim().length||0===s.trim().length||0===u.trim().length||0===f.trim().length)return console.log("patient must have at least: Name, Age, Contact Number, Street Name & Number and Registration Date!!!...Please try again..."),void a.setState({userAlert:"patient must have at least: Name, Age, Contact Number, Street Name & Number and Registration Date!!!...Please try again..."});console.log("\n      creating patient...\n      title: ".concat(n,",\n      name: ").concat(r,",\n      dob: ").concat(i,",\n      age: ").concat(l,",\n      gender: ").concat(o,",\n      addressNumber: ").concat(c,",\n      addressStreet: ").concat(s,",\n      addressTown: ").concat(m,",\n      addressParish: ").concat(d,",\n      addressPostOffice: ").concat(p,",\n      contactPhone: ").concat(u,",\n      contactEmail: ").concat(h,",\n      registrationDate: ").concat(f,",\n      referralDate: ").concat(g,",\n      expirationDate: ").concat(E,",\n      attendingPhysicianName: ").concat(y,",\n      attendingPhysicianEmail: ").concat(v,",\n      attendingPhysicianPhone: ").concat(N,",\n      referringDoctorName: ").concat(b,",\n      referringDoctorEmail: ").concat(I,",\n      referringDoctorPhone: ").concat(x,",\n      occupationRole: ").concat(C,",\n      occupationEmployer: ").concat(D,",\n      occupationEmployerContactPhone: ").concat(S,",\n      occupationEmployerContactEmail: ").concat(A,",\n      "));var T={query:'\n        mutation {createPatient(userId:"'.concat(t,'", patientInput:{title:"').concat(n,'",name:"').concat(r,'",dob:"').concat(i,'",age:').concat(l,',gender:"').concat(o,'",addressNumber:').concat(c,',addressStreet:"').concat(s,'",addressTown:"').concat(m,'",addressParish:"').concat(d,'",addressPostOffice:"').concat(p,'",contactPhone:"').concat(u,'",contactEmail:"').concat(h,'",registrationDate:"').concat(f,'",referralDate:"').concat(g,'",expirationDate:"').concat(E,'",referringDoctorName:"').concat(b,'",referringDoctorEmail:"').concat(I,'",referringDoctorPhone:"').concat(x,'",attendingPhysicianName:"').concat(y,'",attendingPhysicianEmail:"').concat(v,'",attendingPhysicianPhone:"').concat(N,'",occupationRole:"').concat(C,'",occupationEmployer:"').concat(D,'",occupationEmployerContactPhone:"').concat(S,'",occupationEmployerContactEmail:"').concat(A,'"})\n        {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n        ')},w=a.context.token;fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(T),headers:{"Content-Type":"application/json",Authorization:"Bearer "+w}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("\n          response data:\n          ".concat(JSON.stringify(e.data.createPatient),"\n          "));var t=JSON.stringify(e.data).slice(2,15);a.setState({userAlert:t});var n=e.data.createPatient;a.setState((function(e){var t=Object(P.a)(e.patients);return t.push(n),{patients:t}}))})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalCancelHandler=function(){a.setState({creating:!1,updating:!1,selectedPatient:null})},a.modalConfirmUpdateHandler=function(e){var t=a.context.userId,n=a.context.selectedPatient._id;console.log("UpdatePatientFormData:  ",e.target.formGridName.value),a.setState({updating:!1});var r=e.target.formGridTitle.value,i=e.target.formGridName.value,l=e.target.formGridDob.value,o=e.target.formGridAge.value,c=e.target.formGridGender.value,s=e.target.formGridAddressNumber.value,m=e.target.formGridAddressStreet.value,d=e.target.formGridAddressTown.value,p=e.target.formGridAddressParish.value,u=e.target.formGridAddressPostOffice.value,h=e.target.formGridContactPhone.value,f=e.target.formGridContactEmail.value,g=e.target.formGridRegistrationDate.value;!0===e.target.formGridRegistrationDateTodayCheckbox.checked&&(g=(new Date).toISOString().slice(0,10));var E=e.target.formGridReferralDate.value;!0===e.target.formGridReferralDateTodayCheckbox.checked&&(E=(new Date).toISOString().slice(0,10));var y=e.target.formGridExpirationDate.value;!0===e.target.formGridExpirationDateTodayCheckbox.checked&&(y=(new Date).toISOString().slice(0,10));var v=e.target.formGridAttendingPhysicianName.value,N=e.target.formGridAttendingPhysicianEmail.value,b=e.target.formGridAttendingPhysicianPhone.value,I=e.target.formGridReferringDoctorName.value,x=e.target.formGridReferringDoctorEmail.value,C=e.target.formGridReferringDoctorPhone.value,D=e.target.formGridOccupationRole.value,S=e.target.formGridOccupationEmployer.value,P=e.target.formGridOccupationEmployerContactPhone.value,A=e.target.formGridOccupationEmployerContactEmail.value;0===r.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),r=a.context.selectedPatient.title),0===i.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),i=a.context.selectedPatient.name),0===l.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),l=a.context.selectedPatient.dob),0===c.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),c=a.context.selectedPatient.gender),0===o.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),o=a.context.selectedPatient.age),0===s.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),s=a.context.selectedPatient.address.number),0===m.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),m=a.context.selectedPatient.address.street),0===d.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),d=a.context.selectedPatient.address.town),0===p.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),p=a.context.selectedPatient.address.parish),0===u.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),u=a.context.selectedPatient.address.postOffice),0===h.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),h=a.context.selectedPatient.contact.phone),0===f.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),f=a.context.selectedPatient.contact.email),0===g.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),g=a.context.selectedPatient.registrationDate),0===v.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),v=a.context.selectedPatient.attendingPhysician.name),0===N.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),N=a.context.selectedPatient.attendingPhysician.email),0===b.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),b=a.context.selectedPatient.attendingPhysician.phone),0===I.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),I=a.context.selectedPatient.referringDoctor.name),0===x.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),x=a.context.selectedPatient.referringDoctor.email),0===C.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),C=a.context.selectedPatient.referringDoctor.phone),0===D.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),D=a.context.selectedPatient.occupation.role),0===S.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),S=a.context.selectedPatient.occupation.employer),0===A.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),A=a.context.selectedPatient.occupation.contact.email),0===P.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),P=a.context.selectedPatient.occupation.contact.phone),console.log("\n      updating patient...\n      title: ".concat(r,",\n      name: ").concat(i,",\n      dob: ").concat(l,",\n      age: ").concat(o,",\n      gender: ").concat(c,",\n      addressNumber: ").concat(s,",\n      addressStreet: ").concat(m,",\n      addressTown: ").concat(d,",\n      addressParish: ").concat(p,",\n      addressPostOffice: ").concat(u,",\n      contactPhone: ").concat(h,",\n      contactEmail: ").concat(f,",\n      registrationDate: ").concat(g,",\n      referralDate: ").concat(E,",\n      expirationDate: ").concat(y,",\n      attendingPhysicianName: ").concat(v,",\n      attendingPhysicianEmail: ").concat(N,",\n      attendingPhysicianPhone: ").concat(b,",\n      referringDoctorName: ").concat(I,",\n      referringDoctorEmail: ").concat(x,",\n      referringDoctorPhone: ").concat(C,",\n      occupationRole: ").concat(D,",\n      occupationEmployer: ").concat(S,",\n      occupationEmployerContactPhone: ").concat(P,",\n      occupationEmployerContactEmail: ").concat(A,",\n      ")),a.setState({userAlert:"updating patient..."});var T={query:'\n          mutation {updatePatient(userId:"'.concat(t,'",patientId:"').concat(n,'", patientInput:{title:"').concat(r,'",name:"').concat(i,'",dob:"').concat(l,'",age:').concat(o,',gender:"').concat(c,'",addressNumber:').concat(s,',addressStreet:"').concat(m,'",addressTown:"').concat(d,'",addressParish:"').concat(p,'",addressPostOffice:"').concat(u,'",contactPhone:"').concat(h,'",contactEmail:"').concat(f,'",registrationDate:"').concat(g,'",referralDate:"').concat(E,'",expirationDate:"').concat(y,'",referringDoctorName:"').concat(I,'",referringDoctorEmail:"').concat(x,'",referringDoctorPhone:"').concat(C,'",attendingPhysicianName:"').concat(v,'",attendingPhysicianEmail:"').concat(N,'",attendingPhysicianPhone:"').concat(b,'",occupationRole:"').concat(D,'",occupationEmployer:"').concat(S,'",occupationEmployerContactPhone:"').concat(P,'",occupationEmployerContactEmail:"').concat(P,'"})\n          {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n        ')},w=a.context.token;fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(T),headers:{"Content-Type":"application/json",Authorization:"Bearer "+w}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e));var t=e.data.updatePatient._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatient);var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l,selectedPatient:e.data.updatePatient}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalConfirmUpdateFieldHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedPatient._id;console.log("UpdatePatientFieldFormData:  ",e.target.formGridField.value),a.setState({updating:!1});var i=null,l=e.target.formGridQuery.value;i="select"===e.target.formGridFieldSelect.value?e.target.formGridField.value:e.target.formGridFieldSelect.value;var o={query:'\n          mutation {updatePatientField(userId:"'.concat(n,'",patientId:"').concat(r,'",field:"').concat(i,'",query:"').concat(l,'")\n          {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(o),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data.updatePatientField));var t=e.data.updatePatientField._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatientField),a.context.patients=a.state.patients;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l,selectedPatient:e.data.updatePatientField}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updatePatientConsultantHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedPatient._id,i=a.context.selectedUser._id;void 0===i&&(console.log("\n      select a Staff member before adding a Patient Consultant!!\n      "),a.setState({userAlert:"select a Staff member before adding a Patient Consultant!!..."}),t=null),console.log("UpdatePatientConsultantFormData:  ",e.target.formGridConsultantDate.value),a.setState({updating:!1,patientUpdateField:null});var l=e.target.formGridConsultantDate.value;!0===e.target.formGridConsultantDateTodayCheckbox.checked&&(l=(new Date).toISOString().slice(0,10)),console.log("\n    adding patient consultant item...\n    userId: ".concat(n,",\n    selectedPatientId: ").concat(r,",\n    consultantDate: ").concat(l,",\n    consultantReference: ").concat(i,",\n    "));var o={query:'\n        mutation {updatePatientConsultant(userId:"'.concat(n,'", patientId:"').concat(r,'",patientInput:{consultantDate:" ').concat(l,'",consultantReference: "').concat(i,'"})\n        {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(o),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updatePatientConsultant._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatientConsultant),a.context.patients=a.state.patients;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l,selectedPatient:e.data.updatePatientConsultant}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updatePatientInsuranceHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedPatient._id;console.log("UpdatePatientInsuranceFormData:  ",e.target.formGridInsuranceCompany.value),a.setState({updating:!1,patientUpdateField:null});var i=e.target.formGridInsuranceCompany.value,l=e.target.formGridInsuranceNumber.value,o=e.target.formGridInsuranceExpiry.value,c=e.target.formGridInsuranceDescription.value,s=e.target.formGridInsuranceSubscriberCompany.value,m=e.target.formGridInsuranceSubscriberDescription.value;console.log("\n    adding patient insurance item...\n    userId: ".concat(n,",\n    selectedPatientId: ").concat(r,",\n    insuranceCompany: ").concat(i,",\n    insuranceNumber: ").concat(l,",\n    insuranceExpiry: ").concat(o,",\n    insuranceDescription: ").concat(c,",\n    insuranceSubscriberCompany: ").concat(s,",\n    insuranceSubscriberDescription: ").concat(m,",\n    ")),a.setState({userAlert:"adding patient insurance item..."});var d={query:'\n        mutation {updatePatientInsurance(userId:"'.concat(n,'", patientId:"').concat(r,'",patientInput:{insuranceCompany:"').concat(i,'",insuranceNumber:"').concat(l,'",insuranceDescription:"').concat(c,'",insuranceExpiry:"').concat(o,'",insuranceSubscriberCompany:"').concat(s,'",insuranceSubscriberDescription:"').concat(m,'"})\n        {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(d),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updatePatientInsurance._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatientInsurance),a.context.patients=a.state.patients;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l,selectedPatient:e.data.updatePatientInsurance}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updatePatientNextOfKinHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedPatient._id;console.log("UpdatePatientNextOfKinFormData:  ",e.target.formGridNextOfKinName.value),a.setState({updating:!1,patientUpdateField:null});var i=e.target.formGridNextOfKinName.value,l=e.target.formGridNextOfKinPhone.value,o=e.target.formGridNextOfKinEmail.value;console.log("\n    adding patient nextOfKin item...\n    userId: ".concat(n,",\n    selectedPatientId: ").concat(r,",\n    nextOfKinName: ").concat(i,",\n    nextOfKinPhone: ").concat(l,",\n    nextOfKinEmail: ").concat(o,",\n    ")),a.setState({userAlert:"adding patient nextOfKin item..."});var c={query:'\n        mutation {updatePatientNextOfKin(userId:"'.concat(n,'", patientId:"').concat(r,'",patientInput:{nextOfKinName:"').concat(i,'",nextOfKinEmail:"').concat(o,'",nextOfKinPhone:"').concat(l,'"})\n        {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(c),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updatePatientNextOfKin._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatientNextOfKin),a.context.patients=a.state.patients;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l,selectedPatient:e.data.updatePatientNextOfKin}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updatePatientComplaintHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedPatient._id;console.log("UpdatePatientComplaintFormData:  ",e.target.formGridComplaintTitle.value),a.setState({updating:!1,patientUpdateField:null});var i=e.target.formGridComplaintTitle.value,l=e.target.formGridComplaintDate.value;!0===e.target.formGridComplaintDateTodayCheckbox.checked&&(l=(new Date).toISOString().slice(0,10));var o=e.target.formGridComplaintDescription.value,c=e.target.formGridComplaintAnamnesis.value,s=e.target.formGridComplaintAttachmentFormat.value,m="uploads/patients/"+r+"/complaints",d=E._currentValue.file;console.log("\n    uploading to s3...\n    file.name: ".concat(d.name,",\n    AuthContext._currentValue.file: ").concat(E._currentValue.file,",\n    "));var p={bucketName:a.context.creds.s3.bucketName,dirName:m,region:a.context.creds.s3.region,accessKeyId:a.context.creds.s3.accessKeyId,secretAccessKey:a.context.creds.s3.secretAccessKey},u=new T.a(p),h=d.name,f=h;u.uploadFile(d,h).then((function(e){console.log(e),a.setState({userAlert:"attachment upload success!"})})).catch((function(e){console.error(e),a.setState({userAlert:"upload error:  "+e})})),console.log("\n    adding patient complaint...\n    userId: ".concat(n,",\n    patientId: ").concat(r,",\n    complaintTitle: ").concat(i,",\n    complaintDate: ").concat(l,",\n    complaintDescription: ").concat(o,",\n    complaintAnamnesis: ").concat(c,",\n    complaintAttachmentName: ").concat(f,",\n    complaintAttachmentFormat: ").concat(s,",\n    complaintAttachmentPath: ").concat(m,",\n    ")),a.setState({userAlert:"adding patient complaint..."});var g={query:'\n        mutation {updatePatientComplaint(userId:"'.concat(n,'", patientId:"').concat(r,'",patientInput:{complaintDate:"').concat(l,'",complaintTitle:"').concat(i,'",complaintDescription:"').concat(o,'",complaintAnamnesis:"').concat(c,'",complaintAttachmentName:"').concat(f,'",complaintAttachmentFormat:"').concat(s,'",complaintAttachmentPath:"').concat(m,'"})\n        {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(g),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updatePatientComplaint._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatientComplaint),a.context.patients=a.state.patients;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l,selectedPatient:e.data.updatePatientComplaint}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updatePatientSurveyHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedPatient._id;console.log("UpdatePatientSurveyFormData:  ",e.target.formGridSurveyTitle.value),a.setState({updating:!1,patientUpdateField:null});var i=e.target.formGridSurveyDate.value;!0===e.target.formGridSurveyDateTodayCheckbox.checked&&(i=(new Date).toISOString().slice(0,10));var l=e.target.formGridSurveyTitle.value,o=e.target.formGridSurveyDescription.value,c=e.target.formGridSurveyAttachmentFormat.value,s="uploads/patients/"+r+"/surveys",m=E._currentValue.file;console.log("\n    uploading to s3...\n    file.name: ".concat(m.name,",\n    AuthContext._currentValue.file: ").concat(E._currentValue.file,",\n    "));var d={bucketName:a.context.creds.s3.bucketName,dirName:s,region:a.context.creds.s3.region,accessKeyId:a.context.creds.s3.accessKeyId,secretAccessKey:a.context.creds.s3.secretAccessKey},p=new T.a(d),u=m.name,h=u;p.uploadFile(m,u).then((function(e){console.log(e),a.setState({userAlert:"attachment upload success!"})})).catch((function(e){console.error(e),a.setState({userAlert:"upload error:  "+e})})),console.log("\n    adding patient survey...\n    userId: ".concat(n,",\n    patientId: ").concat(r,",\n    surveyDate: ").concat(i,",\n    surveyTitle: ").concat(l,",\n    surveyDescription: ").concat(o,",\n    surveyAttachmentName: ").concat(h,",\n    surveyAttachmentFormat: ").concat(c,",\n    surveyAttachmentPath: ").concat(s,",\n    ")),a.setState({userAlert:"adding patient survey..."});var f={query:'\n        mutation {updatePatientSurvey(userId:"'.concat(n,'",patientId:"').concat(r,'",patientInput:{surveyDate:"').concat(i,'",surveyTitle:"').concat(l,'",surveyDescription:"').concat(o,'",surveyAttachmentName:"').concat(h,'",surveyAttachmentFormat:"').concat(c,'",surveyAttachmentPath:"').concat(s,'"})\n        {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(f),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updatePatientSurvey._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatientSurvey),a.context.patients=a.state.patients;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l,selectedPatient:e.data.updatePatientSurvey}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updatePatientVitalsHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedPatient._id;console.log("UpdatePatientVitalsFormData:  ",e.target.formGridVitalsDate.value),a.setState({updating:!1,patientUpdateField:null});var i=e.target.formGridVitalsDate.value;!0===e.target.formGridVitalsDateTodayCheckbox.checked&&(i=(new Date).toISOString().slice(0,10));var l=e.target.formGridVitalsPr.value,o=e.target.formGridVitalsBp1.value,c=e.target.formGridVitalsBp2.value,s=e.target.formGridVitalsRr.value,m=e.target.formGridVitalsTemp.value,d=e.target.formGridVitalsPs02.value,p=e.target.formGridVitalsHeight.value,u=e.target.formGridVitalsWeight.value,h=e.target.formGridVitalsBmi.value,f=e.target.formGridVitalsUrineType.value,g=e.target.formGridVitalsUrineValue.value;console.log("\n    adding patient vitals...\n    userId: ".concat(n,",\n    patientId: ").concat(r,",\n    ")),a.setState({userAlert:"adding patient vitals..."});var E={query:'\n        mutation {updatePatientVitals(userId:"'.concat(n,'",patientId:"').concat(r,'",patientInput:{vitalsDate:"').concat(i,'",vitalsPr:').concat(l,",vitalsBp1:").concat(o,",vitalsBp2:").concat(c,",vitalsRr:").concat(s,",vitalsTemp:").concat(m,",vitalsPs02:").concat(d,",vitalsHeight:").concat(p,",vitalsWeight:").concat(u,",vitalsBmi:").concat(h,',vitalsUrineType:"').concat(f,'",vitalsUrineValue:"').concat(g,'"})\n        {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(E),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updatePatientVitals._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatientVitals),a.context.patients=a.state.patients;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l,selectedPatient:e.data.updatePatientVitals}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updatePatientExaminationHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedPatient._id;console.log("UpdatePatientExaminationFormData:  ",e.target.formGridExaminationArea.value),a.setState({updating:!1,patientUpdateField:null});var i=e.target.formGridExaminationDate.value;!0===e.target.formGridExaminationDateTodayCheckbox.checked&&(i=(new Date).toISOString().slice(0,10));var l=e.target.formGridExaminationGeneral.value,o=void 0;o="select"===e.target.formGridExaminationAreaSelect?e.target.formGridExaminationArea.value:e.target.formGridExaminationAreaSelect.value;var c=e.target.formGridExaminationType.value,s=e.target.formGridExaminationMeasure.value,m=e.target.formGridExaminationValue.value,d=e.target.formGridExaminationDescription.value,p=e.target.formGridExaminationFollowUp.value,u=e.target.formGridExaminationAttachmentFormat.value,h="uploads/patients/"+r+"/examinations",f=E._currentValue.file;console.log("\n    uploading to s3...\n    file.name: ".concat(f.name,",\n    AuthContext._currentValue.file: ").concat(E._currentValue.file,",\n    "));var g={bucketName:a.context.creds.s3.bucketName,dirName:h,region:a.context.creds.s3.region,accessKeyId:a.context.creds.s3.accessKeyId,secretAccessKey:a.context.creds.s3.secretAccessKey},y=new T.a(g),v=f.name,N=v;y.uploadFile(f,v).then((function(e){console.log(e),a.setState({userAlert:"attachment upload success!"})})).catch((function(e){console.error(e),a.setState({userAlert:"upload error:  "+e})})),console.log("\n    adding patient examination...\n    userId: ".concat(n,",\n    patientId: ").concat(r,",\n    examinationDate: ").concat(i,",\n    examinationGeneral: ").concat(l,",\n    examinationArea: ").concat(o,",\n    examinationType: ").concat(c,",\n    examinationMeasure: ").concat(s,",\n    examinationValue: ").concat(m,",\n    examinationDescription: ").concat(d,",\n    examinationFollowUp: ").concat(p,",\n    examinationAttachmentName: ").concat(N,",\n    examinationAttachmentFormat: ").concat(u,",\n    examinationAttachmentPath: ").concat(h,",\n    ")),a.setState({userAlert:"adding patient examination..."});var b={query:'\n        mutation {updatePatientExamination(userId:"'.concat(n,'",patientId:"').concat(r,'",patientInput:{examinationDate:"').concat(i,'",examinationGeneral:"').concat(l,'",examinationArea:"').concat(o,'",examinationType:"').concat(c,'",examinationMeasure:"').concat(s,'",examinationValue:"').concat(m,'",examinationDescription:"').concat(d,'",examinationFollowUp:').concat(p,',examinationAttachmentName:"').concat(N,'",examinationAttachmentFormat:"').concat(u,'",examinationAttachmentPath:"').concat(h,'"})\n        {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(b),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updatePatientExamination._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatientExamination),a.context.patients=a.state.patients;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l,selectedPatient:e.data.updatePatientExamination}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updatePatientHistoryHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedPatient._id;console.log("UpdatePatientHistoryFormData:  ",e.target.formGridHistoryTitle.value),a.setState({updating:!1,patientUpdateField:null});var i=e.target.formGridHistoryType.value,l=e.target.formGridHistoryDate.value;!0===e.target.formGridHistoryDateTodayCheckbox.checked&&(l=(new Date).toISOString().slice(0,10));var o=e.target.formGridHistoryTitle.value,c=e.target.formGridHistoryDescription.value,s=e.target.formGridHistoryAttachmentFormat.value,m="uploads/patients/"+r+"/history",d=E._currentValue.file;console.log("\n    uploading to s3...\n    file.name: ".concat(d.name,",\n    AuthContext._currentValue.file: ").concat(E._currentValue.file,",\n    "));var p={bucketName:a.context.creds.s3.bucketName,dirName:m,region:a.context.creds.s3.region,accessKeyId:a.context.creds.s3.accessKeyId,secretAccessKey:a.context.creds.s3.secretAccessKey},u=new T.a(p),h=d.name,f=h;u.uploadFile(d,h).then((function(e){console.log(e),a.setState({userAlert:"attachment upload success!"})})).catch((function(e){console.error(e),a.setState({userAlert:"upload error:  "+e})})),console.log("\n    adding patient history...\n    userId: ".concat(n,",\n    patientId: ").concat(r,",\n    historyType: ").concat(i,",\n    historyDate: ").concat(l,",\n    historyTitle: ").concat(o,",\n    historyDescription: ").concat(c,",\n    historyAttachmentName: ").concat(f,",\n    historyAttachmentFormat: ").concat(s,",\n    historyAttachmentPath: ").concat(m,",\n    ")),a.setState({userAlert:"adding patient history..."});var g={query:'\n        mutation {updatePatientHistory(userId:"'.concat(n,'", patientId:"').concat(r,'",patientInput:{historyTitle:"').concat(o,'",historyType:"').concat(i,'",historyDate:"').concat(l,'",historyDescription:"').concat(c,'",historyAttachmentName:"').concat(f,'",historyAttachmentFormat:"').concat(s,'",historyAttachmentPath:"').concat(m,'"})\n        {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(g),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updatePatientHistory._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatientHistory),a.context.patients=a.state.patients;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l,selectedPatient:e.data.updatePatientHistory}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updatePatientAllergiesHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedPatient._id;console.log("UpdatePatientAllergiesFormData:  ",e.target.formGridAllergiesTitle.value),a.setState({updating:!1,patientUpdateField:null});var i=e.target.formGridAllergiesTitle.value,l=void 0;l="select"===e.target.formGridAllergiesTypeSelect?e.target.formGridAllergiesType.value:e.target.formGridAllergiesTypeSelect.value;var o=e.target.formGridAllergiesDescription.value,c=e.target.formGridAllergiesAttachmentFormat.value,s="uploads/patients/"+r+"/allergies",m=E._currentValue.file;console.log("\n    uploading to s3...\n    file.name: ".concat(m.name,",\n    AuthContext._currentValue.file: ").concat(E._currentValue.file,",\n    "));var d={bucketName:a.context.creds.s3.bucketName,dirName:s,region:a.context.creds.s3.region,accessKeyId:a.context.creds.s3.accessKeyId,secretAccessKey:a.context.creds.s3.secretAccessKey},p=new T.a(d),u=m.name,h=u;p.uploadFile(m,u).then((function(e){console.log(e),a.setState({userAlert:"attachment upload success!"})})).catch((function(e){console.error(e),a.setState({userAlert:"upload error:  "+e})})),console.log("\n    adding patient allergies...\n    userId: ".concat(n,",\n    patientId: ").concat(r,",\n    allergiesTitle: ").concat(i,",\n    allergiesType: ").concat(l,",\n    allergiesDescription: ").concat(o,",\n    allergiesAttachmentName: ").concat(h,",\n    allergiesAttachmentFormat: ").concat(c,",\n    allergiesAttachmentPath: ").concat(s,",\n    ")),a.setState({userAlert:"adding patient allergies..."});var f={query:'\n        mutation {updatePatientAllergies(userId:"'.concat(n,'", patientId:"').concat(r,'",patientInput:{allergiesTitle:"').concat(i,'",allergiesType:"').concat(l,'", allergiesDescription:"').concat(o,'",allergiesAttachmentName:"').concat(h,'",allergiesAttachmentFormat:"').concat(c,'",allergiesAttachmentPath:"').concat(s,'"})\n        {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(f),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updatePatientAllergies._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatientAllergies),a.context.patients=a.state.patients;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l,selectedPatient:e.data.updatePatientAllergies}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updatePatientMedicationHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedPatient._id;console.log("UpdatePatientMedicationFormData:  ",e.target.formGridMedicationTitle.value),a.setState({updating:!1,patientUpdateField:null});var i=e.target.formGridMedicationTitle.value,l=e.target.formGridMedicationType.value,o=e.target.formGridMedicationDescription.value,c=e.target.formGridMedicationAttachmentFormat.value,s="uploads/patients/"+r+"/medication",m=E._currentValue.file;console.log("\n    uploading to s3...\n    file.name: ".concat(m.name,",\n    AuthContext._currentValue.file: ").concat(E._currentValue.file,",\n    "));var d={bucketName:a.context.creds.s3.bucketName,dirName:s,region:a.context.creds.s3.region,accessKeyId:a.context.creds.s3.accessKeyId,secretAccessKey:a.context.creds.s3.secretAccessKey},p=new T.a(d),u=m.name,h=u;p.uploadFile(m,u).then((function(e){console.log(e),a.setState({userAlert:"attachment upload success!"})})).catch((function(e){console.error(e),a.setState({userAlert:"upload error:  "+e})})),console.log("\n    adding patient medication...\n    userId: ".concat(n,",\n    patientId: ").concat(r,",\n    medicationTitle: ").concat(i,",\n    medicationType: ").concat(l,",\n    medicationDescription: ").concat(o,",\n    medicationAttachmentName: ").concat(h,",\n    medicationAttachmentFormat: ").concat(c,",\n    medicationAttachmentPath: ").concat(s,",\n    ")),a.setState({userAlert:"adding patient medication..."});var f={query:'\n      mutation {updatePatientMedication(userId:"'.concat(n,'", patientId:"').concat(r,'",patientInput:{medicationTitle:"').concat(i,'",medicationType:"').concat(l,'" medicationDescription:"').concat(o,'",medicationAttachmentName:"').concat(h,'",medicationAttachmentFormat:"').concat(c,'",medicationAttachmentPath:"').concat(s,'"})\n      {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(f),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updatePatientMedication._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatientMedication),a.context.patients=a.state.patients;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l,selectedPatient:e.data.updatePatientMedication}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updatePatientInvestigationHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedPatient._id;console.log("UpdatePatientInvestigationFormData:  ",e.target.formGridInvestigationTitle.value),a.setState({updating:!1,patientUpdateField:null});var i=e.target.formGridInvestigationDate.value;!0===e.target.formGridInvestigationDateTodayCheckbox.checked&&(i=(new Date).toISOString().slice(0,10));var l=e.target.formGridInvestigationTitle.value,o=void 0;o="select"===e.target.formGridInvestigationTypeSelect?e.target.formGridInvestigationType.value:e.target.formGridInvestigationTypeSelect.value;var c=e.target.formGridInvestigationDescription.value,s=e.target.formGridInvestigationAttachmentFormat.value,m="uploads/patients/"+r+"/investigation",d=E._currentValue.file;console.log("\n    uploading to s3...\n    file.name: ".concat(d.name,",\n    AuthContext._currentValue.file: ").concat(E._currentValue.file,",\n    "));var p={bucketName:a.context.creds.s3.bucketName,dirName:m,region:a.context.creds.s3.region,accessKeyId:a.context.creds.s3.accessKeyId,secretAccessKey:a.context.creds.s3.secretAccessKey},u=new T.a(p),h=d.name,f=h;u.uploadFile(d,h).then((function(e){console.log(e),a.setState({userAlert:"attachment upload success!"})})).catch((function(e){console.error(e),a.setState({userAlert:"upload error:  "+e})})),console.log("\n    adding patient investigation...\n    userId: ".concat(n,",\n    patientId: ").concat(r,",\n    investigationDate: ").concat(i,",\n    investigationTitle: ").concat(l,",\n    investigationType: ").concat(o,",\n    investigationDescription: ").concat(c,",\n    investigationAttachmentName: ").concat(f,",\n    investigationAttachmentFormat: ").concat(s,",\n    investigationAttachmentPath: ").concat(m,",\n    ")),a.setState({userAlert:"adding patient investigation..."});var g={query:'\n        mutation {updatePatientInvestigation(userId:"'.concat(n,'", patientId:"').concat(r,'",patientInput:{investigationDate:"').concat(i,'",investigationTitle:"').concat(l,'",investigationType:"').concat(o,'",investigationDescription:"').concat(c,'",investigationAttachmentName:"').concat(f,'",investigationAttachmentFormat:"').concat(s,'",investigationAttachmentPath:"').concat(m,'"})\n        {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(g),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updatePatientInvestigation._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatientInvestigation),a.context.patients=a.state.patients;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l,selectedPatient:e.data.updatePatientInvestigation}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updatePatientDiagnosisHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedPatient._id;console.log("UpdatePatientDiagnosisFormData:  ",e.target.formGridDiagnosisTitle.value),a.setState({updating:!1,patientUpdateField:null});var i=e.target.formGridDiagnosisDate.value;!0===e.target.formGridDiagnosisDateTodayCheckbox.checked&&(i=(new Date).toISOString().slice(0,10));var l=e.target.formGridDiagnosisTitle.value,o=e.target.formGridDiagnosisType.value,c=e.target.formGridDiagnosisDescription.value,s=e.target.formGridDiagnosisAttachmentFormat.value,m="uploads/patients/"+r+"/diagnosis",d=E._currentValue.file;console.log("\n    uploading to s3...\n    file.name: ".concat(d.name,",\n    AuthContext._currentValue.file: ").concat(E._currentValue.file,",\n    "));var p={bucketName:a.context.creds.s3.bucketName,dirName:m,region:a.context.creds.s3.region,accessKeyId:a.context.creds.s3.accessKeyId,secretAccessKey:a.context.creds.s3.secretAccessKey},u=new T.a(p),h=d.name,f=h;u.uploadFile(d,h).then((function(e){console.log(e),a.setState({userAlert:"attachment upload success!"})})).catch((function(e){console.error(e),a.setState({userAlert:"upload error:  "+e})})),console.log("\n    adding patient diagnosis...\n    userId: ".concat(n,",\n    patientId: ").concat(r,",\n    diagnosisDate: ").concat(i,",\n    diagnosisTitle: ").concat(l,",\n    diagnosisType: ").concat(o,",\n    diagnosisDescription: ").concat(c,",\n    diagnosisAttachmentName: ").concat(f,",\n    diagnosisAttachmentFormat: ").concat(s,",\n    diagnosisAttachmentPath: ").concat(m,",\n    ")),a.setState({userAlert:"adding patient diagnosis..."});var g={query:'\n        mutation {updatePatientDiagnosis(userId:"'.concat(n,'", patientId:"').concat(r,'",patientInput:{diagnosisDate:"').concat(i,'",diagnosisTitle:"').concat(l,'",diagnosisType:"').concat(o,'",diagnosisDescription:"').concat(c,'",diagnosisAttachmentName:"').concat(f,'",diagnosisAttachmentFormat:"').concat(s,'",diagnosisAttachmentPath:"').concat(m,'"})\n        {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(g),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updatePatientDiagnosis._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatientDiagnosis),a.context.patients=a.state.patients;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l,selectedPatient:e.data.updatePatientDiagnosis}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updatePatientTreatmentHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedPatient._id;console.log("UpdatePatientTreatmentFormData:  ",e.target.formGridTreatmentTitle.value),a.setState({updating:!1,patientUpdateField:null});var i=e.target.formGridTreatmentDate.value;!0===e.target.formGridTreatmentDateTodayCheckbox.checked&&(i=(new Date).toISOString().slice(0,10));var l=e.target.formGridTreatmentTitle.value,o=e.target.formGridTreatmentDescription.value,c=e.target.formGridTreatmentDose.value,s=e.target.formGridTreatmentFrequency.value,m=void 0;m="select"===e.target.formGridInvestigationTypeSelect?e.target.formGridTreatmentType.value:e.target.formGridTreatmentTypeSelect.value;var d=e.target.formGridTreatmentAttachmentFormat.value,p="uploads/patients/"+r+"/treatment",u=E._currentValue.file;console.log("\n    uploading to s3...\n    file.name: ".concat(u.name,",\n    AuthContext._currentValue.file: ").concat(E._currentValue.file,",\n    "));var h={bucketName:a.context.creds.s3.bucketName,dirName:p,region:a.context.creds.s3.region,accessKeyId:a.context.creds.s3.accessKeyId,secretAccessKey:a.context.creds.s3.secretAccessKey},f=new T.a(h),g=u.name,y=g;f.uploadFile(u,g).then((function(e){console.log(e),a.setState({userAlert:"attachment upload success!"})})).catch((function(e){console.error(e),a.setState({userAlert:"upload error:  "+e})})),console.log("\n    adding patient treatment...\n    userId: ".concat(n,",\n    patientId: ").concat(r,",\n    treatmentDate: ").concat(i,",\n    treatmentTitle: ").concat(l,",\n    treatmentDescription: ").concat(o,",\n    treatmentDose: ").concat(c,",\n    treatmentFrequency: ").concat(s,",\n    treatmentType: ").concat(m,",\n    treatmentAttachmentName: ").concat(y,",\n    treatmentAttachmentFormat: ").concat(d,",\n    treatmentAttachmentPath: ").concat(p,",\n    ")),a.setState({userAlert:"adding patient treatment..."});var v={query:'\n        mutation {updatePatientTreatment(userId:"'.concat(n,'",patientId:"').concat(r,'",patientInput:{treatmentDate:"').concat(i,'",treatmentTitle:"').concat(l,'",treatmentType:"').concat(m,'",treatmentDescription:"').concat(o,'",treatmentDose:"').concat(c,'",treatmentFrequency:"').concat(s,'",treatmentAttachmentName:"').concat(y,'",treatmentAttachmentFormat:"').concat(d,'",treatmentAttachmentPath:"').concat(p,'"})\n        {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(v),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updatePatientTreatment._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatientTreatment),a.context.patients=a.state.patients;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l,selectedPatient:e.data.updatePatientTreatment}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updatePatientBillingHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedPatient._id;console.log("UpdatePatientBillingFormData:  ",e.target.formGridBillingTitle.value),a.setState({updating:!1,patientUpdateField:null});var i=e.target.formGridBillingDate.value;!0===e.target.formGridBillingDateTodayCheckbox.checked&&(i=(new Date).toISOString().slice(0,10));var l=e.target.formGridBillingTitle.value,o=e.target.formGridBillingType.value,c=e.target.formGridBillingDescription.value,s=e.target.formGridBillingAmount.value,m=e.target.formGridBillingPaid.value,d=e.target.formGridBillingNotes.value,p=e.target.formGridBillingAttachmentFormat.value,u="uploads/patients/"+r+"/billing",h=E._currentValue.file;console.log("\n    uploading to s3...\n    file.name: ".concat(h.name,",\n    AuthContext._currentValue.file: ").concat(E._currentValue.file,",\n    "));var f={bucketName:a.context.creds.s3.bucketName,dirName:u,region:a.context.creds.s3.region,accessKeyId:a.context.creds.s3.accessKeyId,secretAccessKey:a.context.creds.s3.secretAccessKey},g=new T.a(f),y=h.name,v=y;g.uploadFile(h,y).then((function(e){console.log(e),a.setState({userAlert:"attachment upload success!"})})).catch((function(e){console.error(e),a.setState({userAlert:"upload error:  "+e})})),console.log("\n    adding patient billing...\n    userId: ".concat(n,",\n    patientId: ").concat(r,",\n    billingDate: ").concat(i,",\n    billingTitle: ").concat(l,",\n    billingType: ").concat(o,",\n    billingDescription: ").concat(c,",\n    billingAmount: ").concat(s,",\n    billingPaid: ").concat(m,",\n    billingNotes: ").concat(d,",\n    billingAttachmentName: ").concat(v,",\n    billingAttachmentFormat: ").concat(p,",\n    billingAttachmentPath: ").concat(u,",\n    ")),a.setState({userAlert:"adding patient billing..."});var N={query:'\n        mutation {updatePatientBilling(userId:"'.concat(n,'", patientId:"').concat(r,'",patientInput:{billingDate:"').concat(i,'",billingTitle:"').concat(l,'",billingType:"').concat(o,'",billingDescription:"').concat(c,'",billingAmount:').concat(s,",billingPaid:").concat(m,',billingNotes:"').concat(d,'",billingAttachmentName:"').concat(v,'",billingAttachmentFormat:"').concat(p,'",billingAttachmentPath:"').concat(u,'"})\n        {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(N),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updatePatientBilling._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatientBilling),a.context.patients=a.state.patients;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l,selectedPatient:e.data.updatePatientBilling}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updatePatientAttachmentHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedPatient._id;console.log("\n        UpdatePatientAttachmentFormData:\n      "),a.setState({updating:!1,patientUpdateField:null});var i=e.target.formGridPatientAttachmentFormat.value,l="uploads/patients/"+r+"/attachments",o=E._currentValue.file;console.log("\n      uploading to s3...\n      file.name: ".concat(o.name,",\n      AuthContext._currentValue.file: ").concat(E._currentValue.file,",\n      "));var c={bucketName:a.context.creds.s3.bucketName,dirName:l,region:a.context.creds.s3.region,accessKeyId:a.context.creds.s3.accessKeyId,secretAccessKey:a.context.creds.s3.secretAccessKey},s=new T.a(c),m=o.name,d=m;if(s.uploadFile(o,m).then((function(e){console.log(e),a.setState({userAlert:"attachment upload success!"})})).catch((function(e){console.error(e),a.setState({userAlert:"upload error:  "+e})})),0===d.trim().length||0===i.trim().length||0===l.trim().length)return console.log("blank fields detected!!!...Please try again..."),void a.setState({userAlert:"blank fields detected!!!...Please try again..."});a.setState({userAlert:"adding patient attachment"});var p={query:'\n                    mutation {updatePatientAttachment(userId:"'.concat(n,'",patientId:"').concat(r,'",patientInput:{attachmentName:"').concat(d,'",attachmentFormat:"').concat(i,'",attachmentPath:"').concat(i,'"})\n                    {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,date,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n            ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(p),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updatePatientAttachment._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatientAttachment),a.context.patients=a.state.patients;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updatePatientNoteHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedPatient._id;console.log("\n      UpdatePatientNoteFormData:\n      ".concat(e.target.formGridNote.value,"\n    ")),a.setState({updating:!1,patientUpdateField:null});var i=e.target.formGridNote.value;if(0===i.trim().length)return console.log("Can't Submit a blank form!!!...Please try again..."),void a.setState({userAlert:"Can't Submit a blank form!!!...Please try again..."});a.setState({userAlert:"adding patient note"});var l={query:'\n              mutation {updatePatientNotes(userId:"'.concat(n,'",patientId:"').concat(r,'",patientInput:{notes:"').concat(i,'"})\n              {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n            ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(l),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updatePatientNotes._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatientNotes),a.context.patients=a.state.patients;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updatePatientTagHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedPatient._id;console.log("\n      UpdatePatientTagFormData:\n      ".concat(e.target.formGridTag.value,"\n    ")),a.setState({updating:!1,patientUpdateField:null});var i=e.target.formGridTag.value;if(0===i.trim().length)return console.log("Can't Submit a blank form!!!...Please try again..."),void a.setState({userAlert:"Can't Submit a blank form!!!...Please try again..."});var l={query:'\n                    mutation {updatePatientTags(userId:"'.concat(n,'",patientId:"').concat(r,'",patientInput:{tag:"').concat(i,'"})\n                    {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n            ')};a.setState({userAlert:"adding patient tag"}),fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(l),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updatePatientTags._id,n=a.state.patients.find((function(e){return e._id===t})),r=a.state.patients.indexOf(n),i=a.state.patients.splice(r,1);console.log("updatedPatient:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.patients.push(e.data.updatePatientTags),a.context.patients=a.state.patients;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalConfirmSearchHandler=function(e){console.log("SearchPatientForm:  ");var t=a.context.userId;console.log("SearchPatientFormData:  ",e.target.formBasicField.value),a.setState({searching:!1});var n=null,r=e.target.formBasicQuery.value;if(n="select"===e.target.formBasicFieldSelect.value?e.target.formBasicField.value:e.target.formBasicFieldSelect.value,a.setState({patientSearchField:n,patientSearchQuery:r}),0!==n.trim().length&&0!==r.trim().length){a.setState({userAlert:"Searching for Patient:  "});var i={query:'\n        query {\n          getPatientField(userId: "'.concat(t,'", field: "').concat(n,'", query: "').concat(r,'" )\n          {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n      ')},l=a.context.token;fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(i),headers:{"Content-Type":"application/json",Authorization:"Bearer "+l}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e));var t=JSON.stringify(e.data).slice(2,15);a.setState({userAlert:t});var n=e.data.getPatientField;a.setState({searchPatients:n}),console.log("state.searchPatients:  ",a.state.searchPatients)})).catch((function(e){console.log(e),a.setState({userAlert:e})}))}else console.log("blank fields detected!!!...Please try again...")},a.modalConfirmSearchIdHandler=function(e){console.log("SearchPatientIdFormData");var t=a.context.userId;a.setState({searching:!1});var n=e.target.formBasicId.value,r={query:'\n      query {getPatientId(userId:"'.concat(t,'",patientId:"').concat(n,'")\n      {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{_id,title,time,location},consultant{date,reference{_id,name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n    ')},i=a.context.token;fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(r),headers:{"Content-Type":"application/json",Authorization:"Bearer "+i}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e));var t=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:t});var n=e.data.getPatientId;a.setState({searchPatients:[n]}),console.log("state.searchPatients:  ",a.state.searchPatients)})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalConfirmSearchNameHandler=function(e){console.log("SearchPatientNameFormData:",e.target.formBasicName.value),a.setState({searching:!1});var t=a.state.patients,n=new RegExp(e.target.formBasicName.value,"i");console.log("\n    regex: ".concat(n,",\n    "));var r=t.filter((function(e){return e.name.match(n)}));console.log("\n      result: ".concat(JSON.stringify(r),"\n      ")),a.setState({searchPatients:r})},a.getPatientVisit=function(e){var t=a.state.selectedPatient;e.preventDefault(),console.log("\n        getUserVisit function:\n        selectedPatient.consultant: ".concat(JSON.stringify(t.consultant),",\n        selectedPatient.complaints: ").concat(JSON.stringify(t.complaints),",\n        visitDate: ").concat(new Date(e.target.formBasicVisitDate.value),",\n        complaintDate: ").concat(new Date(15805152e5),",\n      "));var n=new Date(e.target.formBasicVisitDate.value).toISOString().substring(0,10),r=t.surveys.filter((function(e){return new Date(1e3*e.date.substr(0,10)).toISOString().substring(0,10)===n})),i=t.consultant.filter((function(e){return new Date(1e3*e.date.substr(0,10)).toISOString().substring(0,10)===n})),l=t.complaints.filter((function(e){return new Date(1e3*e.date.substr(0,10)).toISOString().substring(0,10)===n})),o=t.vitals.filter((function(e){return new Date(1e3*e.date.substr(0,10)).toISOString().substring(0,10)===n})),c=t.examination.filter((function(e){return new Date(1e3*e.date.substr(0,10)).toISOString().substring(0,10)===n})),s=t.history.filter((function(e){return new Date(1e3*e.date.substr(0,10)).toISOString().substring(0,10)===n})),m=t.investigation.filter((function(e){return new Date(1e3*e.date.substr(0,10)).toISOString().substring(0,10)===n})),d=t.diagnosis.filter((function(e){return new Date(1e3*e.date.substr(0,10)).toISOString().substring(0,10)===n})),p=t.treatment.filter((function(e){return new Date(1e3*e.date.substr(0,10)).toISOString().substring(0,10)===n})),u=t.billing.filter((function(e){return new Date(1e3*e.date.substr(0,10)).toISOString().substring(0,10)===n})),h={date:n,patientName:a.context.selectedPatient.name,consultant:i,complaint:l,examination:c,survey:r,vitals:o,history:s,investigation:m,diagnosis:d,treatment:p,billing:u};console.log("\n        visit: ".concat(JSON.stringify(h),",\n        ")),a.context.visit=h,a.setState({visit:h})},a.modalCancelHandler=function(){a.setState({creating:!1,updating:!1,searching:!1,selectedPatient:null})},a.fetchPatientsAsc=function(){console.log("fetch patients function:  ");var e=a.context.userId,t=a.context.token,n={query:'\n          query {patientsNameAsc(userId:"'.concat(e,'")\n          {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{_id,title,time,location,date},consultant{date,reference{_id,name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(n),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("resData",e);var t=e.data.patientsNameAsc;console.log(t);var n=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:n}),a.context.patients=t,a.setState({patients:t})})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.fetchPatientsDesc=function(){console.log("fetch patients function:  ");var e=a.context.userId,t=a.context.token,n={query:'\n          query {patientsNameDesc(userId:"'.concat(e,'")\n          {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{_id,title,time,location,date},consultant{date,reference{_id,name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(n),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("resData",e);var t=e.data.patientsNameDesc;console.log(t);var n=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:n}),a.context.patients=t,a.setState({patients:t})})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalDeleteHandler=function(){console.log("deleting patient...selectedPatient:  ",a.context.selectedPatient);var e=a.context.selectedPatient._id,t=a.context.selectedUser._id;"admin"!==a.context.user.role&&console.log("Not the Admin! No edit permission!!"),a.setState({deleting:!0});var n={query:'\n          mutation {deletePatient(userId:"'.concat(t,'",patientId:"').concat(e,'")\n          {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(n),headers:{"Content-Type":"application/json",Authorization:"Bearer "+a.context.token}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatient;console.log(t);var n=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:n});var r=t._id;t=a.state.patients.find((function(e){return e._id===r}));var i=a.state.patients.indexOf(t),l=a.state.patients.splice(i,1);console.log("deletedPatient:  ",JSON.stringify(t),"  deletedUserPos:  ",i,"  slicedArray:  ",l),a.setState({deleting:!1}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e}),a.isActive&&a.setState({deleting:!1})}))},a.deletePatientInsuranceItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedPatient._id;console.log("\n      delete patient insurance item:\n      props: ".concat(JSON.stringify(e),",\n      token: ").concat(t,",\n      userId: ").concat(n,",\n      patientId: ").concat(r,",\n      "));var i={query:'\n         mutation {deletePatientInsurance (userId:"'.concat(n,'", patientId:"').concat(r,'",insuranceCompany:"').concat(e.company,'",insuranceNumber:"').concat(e.number,'")\n         {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(i),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatientInsurance;console.log(t);var n=e.data.deletePatientInsurance._id,r=a.state.patients.find((function(e){return e._id===n})),i=a.state.patients.indexOf(r),l=a.state.patients.splice(i,1);console.log("updatedPatient:  ",JSON.stringify(r),"  updatedPatientPos:  ",i,"  slicedArray:  ",l),a.state.patients.push(e.data.deletePatientInsurance),a.context.patients=a.state.patients;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchPatients()})).catch((function(e){console.log(e)}))},a.deletePatientAppointmentItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedPatient._id,i=new Date(1e3*e.date.substr(0,10)).toISOString().slice(0,10);console.log("\n      delete patient appointment item:\n      props: ".concat(JSON.stringify(e),",\n      token: ").concat(t,",\n      userId: ").concat(n,",\n      patientId: ").concat(r,",\n      appointment date: ").concat(i,",\n      "));var l={query:'\n         mutation {deletePatientAppointment (userId:"'.concat(n,'", patientId:"').concat(r,'",appointmentId:"').concat(e._id,'",appointmentDate:"').concat(i,'")\n         {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(l),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatientAppointment;console.log(t);var n=e.data.deletePatientAppointment._id,r=a.state.patients.find((function(e){return e._id===n})),i=a.state.patients.indexOf(r),l=a.state.patients.splice(i,1);console.log("updatedPatient:  ",JSON.stringify(r),"  updatedPatientPos:  ",i,"  slicedArray:  ",l),a.state.patients.push(e.data.deletePatientAppointment),a.context.patients=a.state.patients;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchPatients()})).catch((function(e){console.log(e)}))},a.deletePatientConsultantItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedPatient._id,i=new Date(1e3*e.date.substr(0,10)).toISOString().slice(0,10);console.log("\n      delete patient consultant item:\n      props: ".concat(JSON.stringify(e),",\n      token: ").concat(t,",\n      userId: ").concat(n,",\n      patientId: ").concat(r,",\n      consultant date: ").concat(i,",\n      "));var l={query:'\n         mutation {deletePatientConsultant (userId:"'.concat(n,'", patientId:"').concat(r,'",consultantId:"').concat(e.reference.id,'",consultantDate:"').concat(i,'")\n         {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(l),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatientConsultant;console.log(t);var n=e.data.deletePatientConsultant._id,r=a.state.patients.find((function(e){return e._id===n})),i=a.state.patients.indexOf(r),l=a.state.patients.splice(i,1);console.log("updatedPatient:  ",JSON.stringify(r),"  updatedPatientPos:  ",i,"  slicedArray:  ",l),a.state.patients.push(e.data.deletePatientConsultant),a.context.patients=a.state.patients;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchPatients()})).catch((function(e){console.log(e)}))},a.deletePatientNextOfKinItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedPatient._id;console.log("\n    delete patient nextOfKin item:\n    props: ".concat(JSON.stringify(e),",\n    token: ").concat(t,",\n    userId: ").concat(n,",\n    patientId: ").concat(r,",\n    "));var i={query:'\n       mutation {deletePatientNextOfKin (userId:"'.concat(n,'", patientId:"').concat(r,'",nextOfKinName:"').concat(e.name,'")\n       {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n    ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(i),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatientNextOfKin;console.log(t);var n=e.data.deletePatientNextOfKin._id,r=a.state.patients.find((function(e){return e._id===n})),i=a.state.patients.indexOf(r),l=a.state.patients.splice(i,1);console.log("updatedPatient:  ",JSON.stringify(r),"  updatedPatientPos:  ",i,"  slicedArray:  ",l),a.state.patients.push(e.data.deletePatientNextOfKin),a.context.patients=a.state.patients;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchPatients()})).catch((function(e){console.log(e)}))},a.deletePatientComplaintItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedPatient._id,i=new Date(1e3*e.date.substr(0,10)).toISOString().slice(0,10);console.log("\n    delete patient Complaint item:\n    props: ".concat(JSON.stringify(e),",\n    token: ").concat(t,",\n    userId: ").concat(n,",\n    patientId: ").concat(r,",\n    complaint date: ").concat(i,",\n    "));var l={query:'\n       mutation {deletePatientComplaint (userId:"'.concat(n,'", patientId:"').concat(r,'",complaintTitle:"').concat(e.title,'",complaintDate:"').concat(i,'")\n       {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n    ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(l),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatientComplaint;console.log(t);var n=e.data.deletePatientComplaint._id,r=a.state.patients.find((function(e){return e._id===n})),i=a.state.patients.indexOf(r),l=a.state.patients.splice(i,1);console.log("updatedPatient:  ",JSON.stringify(r),"  updatedPatientPos:  ",i,"  slicedArray:  ",l),a.state.patients.push(e.data.deletePatientComplaint),a.context.patients=a.state.patients;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchPatients()})).catch((function(e){console.log(e)}))},a.deletePatientSurveyItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedPatient._id,i=new Date(1e3*e.date.substr(0,10)).toISOString().slice(0,10);console.log("\n    delete patient Survey item:\n    props: ".concat(JSON.stringify(e),",\n    token: ").concat(t,",\n    userId: ").concat(n,",\n    patientId: ").concat(r,",\n    survey date: ").concat(i,"\n    "));var l={query:'\n       mutation {deletePatientSurvey (userId:"'.concat(n,'", patientId:"').concat(r,'",surveyTitle:"').concat(e.title,'",surveyDate:"').concat(i,'")\n       {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n    ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(l),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatientSurvey;console.log(t);var n=e.data.deletePatientSurvey._id,r=a.state.patients.find((function(e){return e._id===n})),i=a.state.patients.indexOf(r),l=a.state.patients.splice(i,1);console.log("updatedPatient:  ",JSON.stringify(r),"  updatedPatientPos:  ",i,"  slicedArray:  ",l),a.state.patients.push(e.data.deletePatientSurvey),a.context.patients=a.state.patients;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchPatients()})).catch((function(e){console.log(e)}))},a.deletePatientVitalsItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedPatient._id,i=new Date(1e3*e.date.substr(0,10)).toISOString().slice(0,10);console.log("\n    delete patient Vitals item:\n    props: ".concat(JSON.stringify(e),",\n    token: ").concat(t,",\n    userId: ").concat(n,",\n    patientId: ").concat(r,",\n    vitals date: ").concat(i,",\n    "));var l={query:'\n       mutation {deletePatientVitals (userId:"'.concat(n,'", patientId:"').concat(r,'",vitalsDate:"').concat(i,'")\n       {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n    ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(l),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatientVitals;console.log(t);var n=e.data.deletePatientVitals._id,r=a.state.patients.find((function(e){return e._id===n})),i=a.state.patients.indexOf(r),l=a.state.patients.splice(i,1);console.log("updatedPatient:  ",JSON.stringify(r),"  updatedPatientPos:  ",i,"  slicedArray:  ",l),a.state.patients.push(e.data.deletePatientVitals),a.context.patients=a.state.patients;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchPatients()})).catch((function(e){console.log(e)}))},a.deletePatientExaminationItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedPatient._id,i=new Date(1e3*e.date.substr(0,10)).toISOString().slice(0,10);console.log("\n    delete patient Examination item:\n    props: ".concat(JSON.stringify(e),",\n    token: ").concat(t,",\n    userId: ").concat(n,",\n    patientId: ").concat(r,",\n    examination date: ").concat(i,",\n    "));var l={query:'\n       mutation {deletePatientExamination (userId:"'.concat(n,'", patientId:"').concat(r,'",examinationType:"').concat(e.type,'",examinationDate:"').concat(i,'")\n       {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n    ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(l),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatientExamination;console.log(t);var n=e.data.deletePatientExamination._id,r=a.state.patients.find((function(e){return e._id===n})),i=a.state.patients.indexOf(r),l=a.state.patients.splice(i,1);console.log("updatedPatient:  ",JSON.stringify(r),"  updatedPatientPos:  ",i,"  slicedArray:  ",l),a.state.patients.push(e.data.deletePatientExamination),a.context.patients=a.state.patients;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchPatients()})).catch((function(e){console.log(e)}))},a.deletePatientHistoryItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedPatient._id,i=new Date(1e3*e.date.substr(0,10)).toISOString().slice(0,10);console.log("\n    delete patient History item:\n    props: ".concat(JSON.stringify(e),",\n    token: ").concat(t,",\n    userId: ").concat(n,",\n    patientId: ").concat(r,",\n    history date: ").concat(i,",\n    "));var l={query:'\n       mutation {deletePatientHistory (userId:"'.concat(n,'", patientId:"').concat(r,'",historyTitle:"').concat(e.title,'",historyDate:"').concat(i,'")\n       {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n    ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(l),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatientHistory;console.log(t);var n=e.data.deletePatientHistory._id,r=a.state.patients.find((function(e){return e._id===n})),i=a.state.patients.indexOf(r),l=a.state.patients.splice(i,1);console.log("updatedPatient:  ",JSON.stringify(r),"  updatedPatientPos:  ",i,"  slicedArray:  ",l),a.state.patients.push(e.data.deletePatientHistory),a.context.patients=a.state.patients;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchPatients()})).catch((function(e){console.log(e)}))},a.deletePatientAllergiesItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedPatient._id;console.log("\n    delete patient Allergies item:\n    props: ".concat(JSON.stringify(e),",\n    token: ").concat(t,",\n    userId: ").concat(n,",\n    patientId: ").concat(r,",\n    "));var i={query:'\n       mutation {deletePatientAllergies (userId:"'.concat(n,'", patientId:"').concat(r,'",allergiesTitle:"').concat(e.title,'",allergiesType:"').concat(e.type,'")\n       {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n    ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(i),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatientAllergies;console.log(t);var n=e.data.deletePatientAllergies._id,r=a.state.patients.find((function(e){return e._id===n})),i=a.state.patients.indexOf(r),l=a.state.patients.splice(i,1);console.log("updatedPatient:  ",JSON.stringify(r),"  updatedPatientPos:  ",i,"  slicedArray:  ",l),a.state.patients.push(e.data.deletePatientAllergies),a.context.patients=a.state.patients;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchPatients()})).catch((function(e){console.log(e)}))},a.deletePatientMedicationItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedPatient._id;console.log("\n    delete patient Medication item:\n    props: ".concat(JSON.stringify(e),",\n    token: ").concat(t,",\n    userId: ").concat(n,",\n    patientId: ").concat(r,",\n    "));var i={query:'\n       mutation {deletePatientMedication (userId:"'.concat(n,'", patientId:"').concat(r,'",medicationTitle:"').concat(e.title,'",medicationType:"').concat(e.type,'")\n       {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n    ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(i),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatientMedication;console.log(t);var n=e.data.deletePatientMedication._id,r=a.state.patients.find((function(e){return e._id===n})),i=a.state.patients.indexOf(r),l=a.state.patients.splice(i,1);console.log("updatedPatient:  ",JSON.stringify(r),"  updatedPatientPos:  ",i,"  slicedArray:  ",l),a.state.patients.push(e.data.deletePatientMedication),a.context.patients=a.state.patients;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchPatients()})).catch((function(e){console.log(e)}))},a.deletePatientInvestigationItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedPatient._id,i=new Date(1e3*e.date.substr(0,10)).toISOString().slice(0,10);console.log("\n    delete patient Investigation item:\n    props: ".concat(JSON.stringify(e),",\n    token: ").concat(t,",\n    userId: ").concat(n,",\n    patientId: ").concat(r,",\n    investigation date: ").concat(i,",\n    "));var l={query:'\n       mutation {deletePatientInvestigation (userId:"'.concat(n,'", patientId:"').concat(r,'",investigationDate:"').concat(i,'",investigationTitle:"').concat(e.title,'")\n       {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n    ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(l),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatientInvestigation;console.log(t);var n=e.data.deletePatientInvestigation._id,r=a.state.patients.find((function(e){return e._id===n})),i=a.state.patients.indexOf(r),l=a.state.patients.splice(i,1);console.log("updatedPatient:  ",JSON.stringify(r),"  updatedPatientPos:  ",i,"  slicedArray:  ",l),a.state.patients.push(e.data.deletePatientInvestigation),a.context.patients=a.state.patients;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchPatients()})).catch((function(e){console.log(e)}))},a.deletePatientDiagnosisItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedPatient._id,i=new Date(1e3*e.date.substr(0,10)).toISOString().slice(0,10);console.log("\n    delete patient Diagnosis item:\n    props: ".concat(JSON.stringify(e),",\n    token: ").concat(t,",\n    userId: ").concat(n,",\n    patientId: ").concat(r,",\n    diagnosis date: ").concat(i,"\n    "));var l={query:'\n       mutation {deletePatientDiagnosis (userId:"'.concat(n,'",patientId:"').concat(r,'",diagnosisDate:"').concat(i,'",diagnosisTitle:"').concat(e.title,'")\n       {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n    ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(l),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatientDiagnosis;console.log(t);var n=e.data.deletePatientDiagnosis._id,r=a.state.patients.find((function(e){return e._id===n})),i=a.state.patients.indexOf(r),l=a.state.patients.splice(i,1);console.log("updatedPatient:  ",JSON.stringify(r),"  updatedPatientPos:  ",i,"  slicedArray:  ",l),a.state.patients.push(e.data.deletePatientDiagnosis),a.context.patients=a.state.patients;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchPatients()})).catch((function(e){console.log(e)}))},a.deletePatientTreatmentItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedPatient._id,i=new Date(1e3*e.date.substr(0,10)).toISOString().slice(0,10);console.log("\n    delete patient Treatment item:\n    props: ".concat(JSON.stringify(e),",\n    token: ").concat(t,",\n    userId: ").concat(n,",\n    patientId: ").concat(r,",\n    treatment date: ").concat(i,",\n    "));var l={query:'\n       mutation {deletePatientTreatment (userId:"'.concat(n,'", patientId:"').concat(r,'",treatmentDate:"').concat(i,'",treatmentTitle:"').concat(e.title,'")\n       {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n    ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(l),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatientTreatment;console.log(t);var n=e.data.deletePatientTreatment._id,r=a.state.patients.find((function(e){return e._id===n})),i=a.state.patients.indexOf(r),l=a.state.patients.splice(i,1);console.log("updatedPatient:  ",JSON.stringify(r),"  updatedPatientPos:  ",i,"  slicedArray:  ",l),a.state.patients.push(e.data.deletePatientTreatment),a.context.patients=a.state.patients;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchPatients()})).catch((function(e){console.log(e)}))},a.deletePatientBillingItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedPatient._id,i=new Date(1e3*e.date.substr(0,10)).toISOString().slice(0,10);console.log("\n    delete patient Billing item:\n    props: ".concat(JSON.stringify(e),",\n    token: ").concat(t,",\n    userId: ").concat(n,",\n    patientId: ").concat(r,",\n    billing date: ").concat(i,",\n    "));var l={query:'\n       mutation {deletePatientBilling (userId:"'.concat(n,'", patientId:"').concat(r,'",billingDate:"').concat(i,'",billingTitle:"').concat(e.title,'")\n       {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n    ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(l),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatientBilling;console.log(t);var n=e.data.deletePatientBilling._id,r=a.state.patients.find((function(e){return e._id===n})),i=a.state.patients.indexOf(r),l=a.state.patients.splice(i,1);console.log("updatedPatient:  ",JSON.stringify(r),"  updatedPatientPos:  ",i,"  slicedArray:  ",l),a.state.patients.push(e.data.deletePatientBilling),a.context.patients=a.state.patients;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchPatients()})).catch((function(e){console.log(e)}))},a.deletePatientAttachmentItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedPatient._id;console.log("\n    delete patient Attachment item:\n    props: ".concat(JSON.stringify(e),",\n    token: ").concat(t,",\n    userId: ").concat(n,",\n    patientId: ").concat(r,",\n    "));var i={query:'\n       mutation {deletePatientAttachment (userId:"'.concat(n,'", patientId:"').concat(r,'",attachmentName:"').concat(e.name,'")\n       {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{title,time,location},consultant{date,reference{name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n    ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(i),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatientAttachment;console.log(t);var n=e.data.deletePatientAttachment._id,r=a.state.patients.find((function(e){return e._id===n})),i=a.state.patients.indexOf(r),l=a.state.patients.splice(i,1);console.log("updatedPatient:  ",JSON.stringify(r),"  updatedPatientPos:  ",i,"  slicedArray:  ",l),a.state.patients.push(e.data.deletePatientAttachment),a.context.patients=a.state.patients;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchPatients()})).catch((function(e){console.log(e)}))},a.deletePatientNoteItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedPatient._id;console.log("\n    delete patient Note item:\n    props: ".concat(JSON.stringify(e),",\n    token: ").concat(t,",\n    userId: ").concat(n,",\n    patientId: ").concat(r,",\n    "));fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify({query:"\n\n    "}),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatientNote;console.log(t);var n=e.data.deletePatientNote._id,r=a.state.patients.find((function(e){return e._id===n})),i=a.state.patients.indexOf(r),l=a.state.patients.splice(i,1);console.log("updatedPatient:  ",JSON.stringify(r),"  updatedPatientPos:  ",i,"  slicedArray:  ",l),a.state.patients.push(e.data.deletePatientNote),a.context.patients=a.state.patients;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchPatients()})).catch((function(e){console.log(e)}))},a.deletePatientTagItem=function(e){var t=a.context.token,n=a.context.userId,r=a.state.selectedPatient._id;console.log("\n    delete patient Tag item:\n    props: ".concat(JSON.stringify(e),",\n    token: ").concat(t,",\n    userId: ").concat(n,",\n    patientId: ").concat(r,",\n    "));fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify({query:"\n\n    "}),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deletePatientTag;console.log(t);var n=e.data.deletePatientTag._id,r=a.state.patients.find((function(e){return e._id===n})),i=a.state.patients.indexOf(r),l=a.state.patients.splice(i,1);console.log("updatedPatient:  ",JSON.stringify(r),"  updatedPatientPos:  ",i,"  slicedArray:  ",l),a.state.patients.push(e.data.deletePatientTag),a.context.patients=a.state.patients;var o=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:o}),a.fetchPatients()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.onViewAttachment=function(e){console.log("\n      setting up attachment viewer...\n      attachment: ".concat(JSON.stringify(e),"\n      ")),a.setState({showAttachment:!0});var t="https://ent-emr-bucket.s3-us-east-2.amazonaws.com/"+e.path+"/"+e.name,n=e.format;a.setState({showThisAttachmentFile:t,showThisAttachmentType:n})},a.closeAttachmentView=function(){console.log("\n      closing attachment viewer...\n      "),a.setState({showAttachment:!1})},a.createPdf=function(e){console.log("\n        creating pdf...\n        user: ".concat(JSON.stringify(e),"\n      "));var t={title:e.name,body:e.dob};a.setState({createPdf:!0,pdfData:t})},a.closePdfCreator=function(){console.log("\n      closing pdf creator...\n      "),a.setState({createPdf:!1,pdfData:null})},a.showDetailHandler=function(e){a.setState((function(t){var n=t.patients.find((function(t){return t._id===e}));return a.context.selectedPatient=n,a.context.selectedPatientId=n._id,console.log("selectedPatient:  ",n),{selectedPatient:n}}))},a.nameElRef=r.a.createRef(),a}return Object(d.a)(t,e),Object(c.a)(t,[{key:"componentDidMount",value:function(){this.fetchPatients(),"Lord-of-the-Manor"===this.context.user.name&&this.setState({canDelete:!0})}},{key:"fetchPatients",value:function(){var e=this;console.log("fetch patients function:  ");var t=this.context.userId,a=this.context.token;this.setState({isLoading:!0});var n={query:'\n          query {patients(userId:"'.concat(t,'")\n          {_id,title,name,dob,age,gender,address{number,street,town,parish,postOffice},registrationDate,referralDate,expirationDate,attendingPhysician{name,email,phone},referringDoctor{name,email,phone},contact{phone,email},occupation{role,employer,contact{phone,email}},appointments{_id,title,time,location,date},consultant{date,reference{_id,name,role}},insurance{company,number,description,expiry,subscriber{company,description}},nextOfKin{name,contact{phone,email}},complaints{date,title,description,anamnesis,attachment{name,format,path}},surveys{date,title,description,attachment{name,format,path}},vitals{date,pr,bp1,bp2,rr,temp,ps02,height,weight,bmi,urine{type,value}},examination{date,general,area,type,measure,value,description,followUp,attachment{name,format,path}},history{type,date,title,description,attachment{name,format,path}},allergies{type,title,description,attachment{name,format,path}},medication{title,type,description,attachment{name,format,path}},investigation{date,type,title,description,attachment{name,format,path}},diagnosis{date,type,title,description,attachment{name,format,path}},treatment{date,type,title,description,dose,frequency,attachment{name,format,path}},billing{date,title,type,description,amount,paid,attachment{name,format,path},notes},attachments{name,format,path},notes,tags}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(n),headers:{"Content-Type":"application/json",Authorization:"Bearer "+a}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(t){console.log("resData",t);var a=t.data.patients;console.log(a);var n=JSON.stringify(t.data).slice(2,25);e.setState({userAlert:n}),e.context.patients=e.state.patients,e.isActive&&e.setState({patients:a,isLoading:!1})})).catch((function(t){console.log(t),e.setState({userAlert:t}),e.isActive&&e.setState({isLoading:!1})}))}},{key:"updatePatientSpecial",value:function(e){console.log("special field to update:  ",e.target.value);var t=e.target.value;this.setState({patientUpdateField:t})}},{key:"componentWillUnmount",value:function(){this.isActive=!1}},{key:"render",value:function(){return r.a.createElement(r.a.Fragment,null,!0===this.state.showAttachment&&r.a.createElement(ae,{onCloseAttachmentView:this.closeAttachmentView,attachmentFile:this.state.showThisAttachmentFile,attachmentType:this.state.showThisAttachmentType}),!0===this.state.createPdf&&r.a.createElement(ne,{pdfData:this.state.pdfData,onClosePdfCreator:this.closePdfCreator}),r.a.createElement(C.a,null,r.a.createElement(g.a,null,r.a.createElement(I.a,{md:3,className:"MasterCol1"},r.a.createElement(v,{authUserId:this.context.userId,alert:this.state.userAlert}),r.a.createElement($,null)),r.a.createElement(I.a,{md:9,className:"MasterCol2"},r.a.createElement(w.a,{className:"containerCombinedDetail"},r.a.createElement(U.a.Container,{id:"left-tabs-example",defaultActiveKey:"patientDetail"},r.a.createElement(g.a,null,r.a.createElement(I.a,{sm:2},r.a.createElement(G.a,{variant:"pills",className:"flex-column"},r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"MasterList"},"MASTER LIST")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientDetail"},"Selected")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientCreate"},"Create New")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"disabled",disabled:!0},"Edit:")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditDemographics"},"Demographics")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditField"},"Single Field")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"disabled",disabled:!0},"Add:")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditConsultant"},"Consultant")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditInsurance"},"Insurance")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditNextOfKin"},"Next of Kin")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditComplaint"},"Complaint")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditSurvey"},"Survey")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditVitals"},"Vitals")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditExamination"},"Examination")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditHistory"},"History")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditAllergies"},"Allergies")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditMedication"},"Medication")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditInvestigation"},"Investigation")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditDiagnosis"},"Diagnosis")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditTreatment"},"Treatment")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditBilling"},"Billing")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditAttachment"},"Attachment")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditNote"},"Note")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"patientEditTag"},"Tag")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"disabled",disabled:!0},"Search:")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"SearchInput"},"Input")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"SearchResult"},"Search")))),r.a.createElement(I.a,{sm:10},r.a.createElement(U.a.Content,null,r.a.createElement(U.a.Pane,{eventKey:"patientDetail"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select a Patient from the Master List"),!1===this.state.isLoading&&null!==this.state.selectedPatient&&r.a.createElement(It,{authUserId:this.context.userId,token:this.context.token,patient:this.state.selectedPatient,onEdit:this.startUpdatePatientHandler,canDelete:this.state.canDelete,onDelete:this.modalDeleteHandler,onGetVisit:this.getPatientVisit,visit:this.context.visit,fetchUsers:this.fetchUsers,appointmentDelete:this.deletePatientAppointmentItem,consultantDelete:this.deletePatientConsultantItem,insuranceDelete:this.deletePatientInsuranceItem,nextOfKinDelete:this.deletePatientNextOfKinItem,complaintDelete:this.deletePatientComplaintItem,surveyDelete:this.deletePatientSurveyItem,vitalsDelete:this.deletePatientVitalsItem,examinationDelete:this.deletePatientExaminationItem,historyDelete:this.deletePatientHistoryItem,allergiesDelete:this.deletePatientAllergiesItem,medicationDelete:this.deletePatientMedicationItem,investigationDelete:this.deletePatientInvestigationItem,diagnosisDelete:this.deletePatientDiagnosisItem,treatmentDelete:this.deletePatientTreatmentItem,billingDelete:this.deletePatientBillingItem,attachmentDelete:this.deletePatientAttachmentItem,noteDelete:this.deletePatientNoteItem,tagDelete:this.deletePatientTagItem,onViewAttachment:this.onViewAttachment,onCreatePdf:this.createPdf})),r.a.createElement(U.a.Pane,{eventKey:"patientCreate"},r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",onClick:this.startCreatePatientHandler},"Create NEW Patient Profile"),this.state.creating&&r.a.createElement(At,{canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmHandler,confirmText:"Confirm"})),r.a.createElement(U.a.Pane,{eventKey:"patientEditDemographics"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",onClick:this.startUpdatePatientHandler},"Edit Demographics"),this.state.updating&&null!==this.state.selectedPatient&&r.a.createElement(Tt,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmUpdateHandler,confirmText:"Confirm",patient:this.state.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"patientEditField"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",onClick:this.startUpdatePatientHandler},"Edit a Single Field"),this.state.updating&&null!==this.state.selectedPatient&&r.a.createElement(wt,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmUpdateFieldHandler,confirmText:"Confirm",patient:this.state.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"patientEditConsultant"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",value:"consultant",size:"lg",className:"confirmEditButton",onClick:this.updatePatientSpecial.bind(this)},"Add a Consultant"),"consultant"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(Ot,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updatePatientConsultantHandler,confirmText:"Confirm",consultant:this.context.selectedUser}),"consultant"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(g.a,null,r.a.createElement("p",null,"Add Consultant: ",this.context.selectedUser.name),r.a.createElement("p",null," To Paitient: ",this.state.selectedPatient.name," ??"),r.a.createElement("hr",null)),"consultant"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(g.a,null,r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select someone from the Staff page"))),r.a.createElement(U.a.Pane,{eventKey:"patientEditInsurance"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",value:"insurance",size:"lg",className:"confirmEditButton",onClick:this.updatePatientSpecial.bind(this)},"Add Insurance"),"insurance"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(Ut,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updatePatientInsuranceHandler,confirmText:"Confirm",patient:this.state.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"patientEditNextOfKin"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",value:"nextOfKin",size:"lg",className:"confirmEditButton",onClick:this.updatePatientSpecial.bind(this)},"Add NextOfKin"),"nextOfKin"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(Gt,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updatePatientNextOfKinHandler,confirmText:"Confirm",patient:this.state.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"patientEditComplaint"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",value:"complaint",size:"lg",className:"confirmEditButton",onClick:this.updatePatientSpecial.bind(this)},"Add Complaint"),"complaint"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(kt,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updatePatientComplaintHandler,confirmText:"Confirm",patient:this.state.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"patientEditSurvey"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",value:"survey",size:"lg",className:"confirmEditButton",onClick:this.updatePatientSpecial.bind(this)},"Add Survey"),"survey"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(Lt,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updatePatientSurveyHandler,confirmText:"Confirm",patient:this.state.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"patientEditVitals"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",value:"vitals",size:"lg",className:"confirmEditButton",onClick:this.updatePatientSpecial.bind(this)},"Add Vitals"),"vitals"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(_t,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updatePatientVitalsHandler,confirmText:"Confirm",patient:this.state.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"patientEditExamination"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",value:"examintion",size:"lg",className:"confirmEditButton",onClick:this.updatePatientSpecial.bind(this)},"Add Examination"),"examintion"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(Ft,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updatePatientExaminationHandler,confirmText:"Confirm",patient:this.state.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"patientEditHistory"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",value:"history",size:"lg",className:"confirmEditButton",onClick:this.updatePatientSpecial.bind(this)},"Add History"),"history"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(Ht,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updatePatientHistoryHandler,confirmText:"Confirm",patient:this.state.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"patientEditAllergies"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",value:"allergies",size:"lg",className:"confirmEditButton",onClick:this.updatePatientSpecial.bind(this)},"Add Allergies"),"allergies"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(Bt,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updatePatientAllergiesHandler,confirmText:"Confirm",patient:this.state.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"patientEditMedication"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",value:"medication",size:"lg",className:"confirmEditButton",onClick:this.updatePatientSpecial.bind(this)},"Add Medication"),"medication"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(Kt,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updatePatientMedicationHandler,confirmText:"Confirm",patient:this.state.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"patientEditInvestigation"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",value:"investigation",size:"lg",className:"confirmEditButton",onClick:this.updatePatientSpecial.bind(this)},"Add Investigation"),"investigation"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(Vt,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updatePatientInvestigationHandler,confirmText:"Confirm",patient:this.state.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"patientEditDiagnosis"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",value:"diagnosis",size:"lg",className:"confirmEditButton",onClick:this.updatePatientSpecial.bind(this)},"Add Diagnosis"),"diagnosis"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(Jt,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updatePatientDiagnosisHandler,confirmText:"Confirm",patient:this.state.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"patientEditTreatment"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",value:"treatment",size:"lg",className:"confirmEditButton",onClick:this.updatePatientSpecial.bind(this)},"Add Treatment"),"treatment"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(jt,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updatePatientTreatmentHandler,confirmText:"Confirm",patient:this.state.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"patientEditBilling"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",value:"billing",size:"lg",className:"confirmEditButton",onClick:this.updatePatientSpecial.bind(this)},"Add Billing"),"billing"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(zt,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updatePatientBillingHandler,confirmText:"Confirm",patient:this.state.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"patientEditAttachment"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",value:"attachment",size:"lg",className:"confirmEditButton",onClick:this.updatePatientSpecial.bind(this)},"Add Attachment"),"attachment"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(qt,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updatePatientAttachmentHandler,confirmText:"Confirm",patient:this.state.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"patientEditNote"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",value:"notes",size:"lg",className:"confirmEditButton",onClick:this.updatePatientSpecial.bind(this)},"Add Note"),"notes"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(Rt,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updatePatientNoteHandler,confirmText:"Confirm",patient:this.state.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"patientEditTag"},null===this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select a Patient from the Master List"),null!==this.state.selectedPatient&&r.a.createElement(h.a,{variant:"outline-primary",value:"tags",size:"lg",className:"confirmEditButton",onClick:this.updatePatientSpecial.bind(this)},"Add Tag"),"tags"===this.state.patientUpdateField&&null!==this.state.selectedPatient&&r.a.createElement(Mt,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updatePatientTagHandler,confirmText:"Confirm",patient:this.state.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"MasterList"},r.a.createElement(w.a,{className:"containerUserMasterList"},r.a.createElement(g.a,{className:"searchListRow"},r.a.createElement(h.a,{variant:"primary",size:"sm",onClick:this.fetchPatientsAsc},"Sort Asc"),r.a.createElement(h.a,{variant:"info",size:"sm",onClick:this.fetchPatientsDesc},"Sort Desc"),this.state.isLoading?r.a.createElement(M,null):r.a.createElement(Ee,{patients:this.state.patients,authUserId:this.context.userId,onViewDetail:this.showDetailHandler})))),r.a.createElement(U.a.Pane,{eventKey:"SearchInput"},r.a.createElement(w.a,{className:"containerSearchUserInput"},this.context.token&&r.a.createElement(g.a,{className:"searchUserRowAdd"},r.a.createElement(h.a,{variant:"primary",onClick:this.startSearchPatientHandler},"Search")),r.a.createElement(g.a,{className:"searchUserRowForm"},r.a.createElement(I.a,{md:10,className:"searchUserColForm"},r.a.createElement(O.a,{defaultActiveKey:"Field",id:"uncontrolled-tab-example"},r.a.createElement(U.a,{eventKey:"Search",title:"Search:",disabled:!0}),r.a.createElement(U.a,{eventKey:"Field",title:"Search by Field:"},!0!==this.state.searching&&r.a.createElement(h.a,{variant:"outline-warning",className:"confirmEditButton",size:"lg"},"Click the 'Search' Button start"),!0===this.state.searching&&r.a.createElement(Dt,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchHandler,confirmText:"Search",patient:this.context.selectedPatient})),r.a.createElement(U.a,{eventKey:"Id",title:"Search by ID:"},!0!==this.state.searching&&r.a.createElement(h.a,{variant:"outline-warning",className:"confirmEditButton",size:"lg"},"Click the 'Search' Button start"),!0===this.state.searching&&r.a.createElement(St,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchIdHandler,confirmText:"Search",patient:this.context.selectedPatient})),r.a.createElement(U.a,{eventKey:"Name",title:"Search by Name:"},!0!==this.state.searching&&r.a.createElement(h.a,{variant:"outline-warning",className:"confirmEditButton",size:"lg"},"Click the 'Search' Button start"),!0===this.state.searching&&r.a.createElement(Pt,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchNameHandler,confirmText:"Search",patient:this.context.selectedPatient}))))))),r.a.createElement(U.a.Pane,{eventKey:"SearchResult"},r.a.createElement(w.a,{className:"containerSearchUserResults"},r.a.createElement(g.a,null,r.a.createElement(k.a,{className:"searchCard"},r.a.createElement(k.a.Body,{className:"searchCardBody"},r.a.createElement(k.a.Title,null,"Your Search"),r.a.createElement(k.a.Text,null,"Field: ",this.state.patientSearchField),r.a.createElement(k.a.Text,null,"Query: ",this.state.patientSearchQuery)))),r.a.createElement(g.a,{className:"searchListRow"},this.state.searchPatients!==[]&&r.a.createElement(Ct,{searchPatients:this.state.searchPatients,authUserId:this.context.userId,onCancel:this.modalCancelHandler,onViewDetail:this.showDetailHandler})))))))))),r.a.createElement(I.a,{md:3,className:"MasterCol3"}))))}}]),t}(n.Component);Qt.contextType=E;var Yt=Qt,Wt=function(e){return r.a.createElement("li",{key:e.appointmentId,className:"users__list-item_master"},r.a.createElement("div",null,r.a.createElement("h5",{className:"userItemHeading"},"Title:"),r.a.createElement("p",{className:"userItemText"},e.title),r.a.createElement("h5",{className:"userItemHeading"},"Patient:"),r.a.createElement("p",{className:"userItemText"},e.patient),r.a.createElement("h5",{className:"userItemHeading"},"Date:"),r.a.createElement("p",{className:"userItemText"},e.date),r.a.createElement("h5",{className:"userItemHeading"},"Time:"),r.a.createElement("p",{className:"userItemText"},e.time)),r.a.createElement("div",null,r.a.createElement(h.a,{variant:"primary",onClick:e.onDetail.bind(void 0,e._id)},"Details")))},Xt=function(e){var t=e.appointments.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10),n=t.patient;return r.a.createElement(Wt,{key:t.title,userId:t.authUserId,_id:t._id,title:t.title,patient:n.name,date:a,time:t.time,onDetail:e.onViewDetail})}));return r.a.createElement("ul",{className:"user__list1_master"},t)},Zt=function(e){return r.a.createElement("li",{key:e.userId,className:"users__list-item_master"},r.a.createElement("div",null,r.a.createElement("p",null,r.a.createElement("span",{className:"bold"},"Note :")," ",e.note)))},$t=function(e){console.log("appointment notes list props",e.appointmentNote);var t=e.appointmentNote.map((function(t){return r.a.createElement(Zt,{key:t,userId:e.authUserId,note:t})}));return r.a.createElement("ul",{className:"user__list1_master"},t)},ea=(a(529),function(e){var t=Object(B.a)({},e.appointment),a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10),n=t.notes,i=t.patient.contact;return console.log("appointmentPatientContact:  ",i.phone),console.log("AppointmentDetail.props.appointment:  ",Object(x.a)({},t),n),r.a.createElement("div",{className:"PatientDetailBox"},r.a.createElement(k.a,{className:"PatientDetailCard"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,r.a.createElement("span",{className:"ul"},"Appointment Details")),r.a.createElement(g.a,{className:"detailCardRow"},r.a.createElement(I.a,{md:6,className:"detailCardCol"},r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"ID :")," ",t._id),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Date :")," ",a),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Time :")," ",t.time),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Seen Time :")," ",t.seenTime),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Check-in Time :")," ",t.checkinTime),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Title :")," ",t.title),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Type :")," ",t.type)),r.a.createElement(I.a,{md:6,className:"detailCardCol"},r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Patient Name :")," ",t.patient.name),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Patient Phone :")," ",i.phone),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Patient Email :")," ",i.email),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Description :")," ",t.description),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Location :")," ",t.location),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"In-Progress ?")," ",t.inProgress),!0===t.inProgress&&r.a.createElement("p",null,"Yes"),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Attended ?")," ",t.attended),!0===t.attended&&r.a.createElement("p",null,"Yes"),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Important ?")),!0===t.important&&r.a.createElement("p",null,"Yes"))),r.a.createElement(g.a,{className:"detailCardRow"},r.a.createElement(I.a,{className:"detailCardCol"},r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Notes :")))),r.a.createElement(g.a,{className:"detailCardRow"},r.a.createElement(I.a,{md:6,className:"detailCardCol"},!0===e.canDelete&&r.a.createElement(h.a,{variant:"danger",onClick:e.onDelete},"Delete Appointment !!??")),r.a.createElement(I.a,{md:6,className:"detailCardCol"},r.a.createElement(h.a,{variant:"warning",onClick:e.onCreatePdf.bind(void 0,t)},"Create Pdf"))),r.a.createElement($t,{appointmentNote:n,authUserId:e.authUserId}))))}),ta=function(e){return r.a.createElement("li",{key:e.appointmentId,className:"users__list-item_master"},r.a.createElement("div",null,r.a.createElement("p",null,r.a.createElement("span",{className:"bold"},"Title :")," ",e.title),r.a.createElement("p",null,r.a.createElement("span",{className:"bold"},"Date :")," ",e.resultDate),r.a.createElement("p",null,r.a.createElement("span",{className:"bold"},"Time :")," ",e.time)),r.a.createElement("div",null,r.a.createElement("button",{className:"btn",onClick:e.onDetail.bind(void 0,e._id)},"View Details")))},aa=function(e){var t=e.searchAppointments.map((function(t){var a=new Date(1e3*t.date.substr(0,10)).toISOString().slice(0,10);return r.a.createElement(r.a.Fragment,null,r.a.createElement(ta,{key:t.title,userId:e.authUserId,_id:t._id,title:t.title,resultDate:a,time:t.time,type:t.type,onDetail:e.onViewDetail}))}));return r.a.createElement("ul",{className:"user__list1_master"},t)},na=function(e){return r.a.createElement("div",{className:"SearchFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Group,{controlId:"formBasicFieldSelect"},r.a.createElement(f.a.Label,null,"Field Options"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"select"),r.a.createElement("option",null,"title"),r.a.createElement("option",null,"type"),r.a.createElement("option",null,"date"),r.a.createElement("option",null,"checkinTime"),r.a.createElement("option",null,"seenTime"),r.a.createElement("option",null,"location"),r.a.createElement("option",null,"description"),r.a.createElement("option",null,"patient.name"),r.a.createElement("option",null,"inProgress"),r.a.createElement("option",null,"attended"),r.a.createElement("option",null,"important"))),r.a.createElement(f.a.Group,{controlId:"formBasicField"},r.a.createElement(f.a.Label,null,"Field"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Field"})),r.a.createElement(f.a.Group,{controlId:"formBasicQuery"},r.a.createElement(f.a.Label,null,"Query"),r.a.createElement(f.a.Control,{type:"textarea",rows:"5",placeholder:"Query"})),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"success",type:"submit"},"Search")))},ra=function(e){return r.a.createElement("div",{className:"SearchFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Group,{controlId:"formBasicId"},r.a.createElement(f.a.Label,null,"Appointment Id"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Id"})),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"success",type:"submit"},"Search")))},ia=function(e){return r.a.createElement("div",{className:"SearchFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Group,{controlId:"formBasicPatientId"},r.a.createElement(f.a.Label,null,"Patient Id"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Patient Id"})),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"success",type:"submit"},"Search")))},la=function(e){return r.a.createElement("div",{className:"SearchFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Group,{controlId:"formBasicDate"},r.a.createElement(f.a.Label,null,"Appointment Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"Appointment Date"})),r.a.createElement(f.a.Group,{controlId:"formBasicDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"success",type:"submit"},"Search")))},oa=function(e){return r.a.createElement("div",{className:"SearchFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Group,{controlId:"formBasicStartDate"},r.a.createElement(f.a.Label,null,"Appointment Start Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"Appointment Date Range"})),r.a.createElement(f.a.Group,{controlId:"formBasicEndDate"},r.a.createElement(f.a.Label,null,"Appointment End Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"Appointment Date Range"})),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"success",type:"submit"},"Search")))},ca=function(e){return console.log("CreateAppointmentForm:  ",E.token),r.a.createElement("div",{className:"CreateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(y.a,{variant:"primary"},"Create an appointment for: ",e.selectedPatient.name)),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTitle"},r.a.createElement(f.a.Label,null,"Title"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Title"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridType"},r.a.createElement(f.a.Label,null,"Type"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Type"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridLocation"},r.a.createElement(f.a.Label,null,"Location"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Location"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridDate"},r.a.createElement(f.a.Label,null,"Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:"Date"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTime"},r.a.createElement(f.a.Label,null,"Scheduled Time"),r.a.createElement(f.a.Control,{type:"time",placeholder:"Time"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridCheckinTime"},r.a.createElement(f.a.Label,null,"Check-in Time"),r.a.createElement(f.a.Control,{type:"time",placeholder:"CheckinTime"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridSeenTime"},r.a.createElement(f.a.Label,null,"Seen Time"),r.a.createElement(f.a.Control,{type:"time",placeholder:"SeenTime"}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridDescription"},r.a.createElement(f.a.Label,null,"Description"),r.a.createElement(f.a.Control,{as:"textarea",rows:"2",placeholder:"Description"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridInProgress"},r.a.createElement(f.a.Label,null,"In Progress ?"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"false"),r.a.createElement("option",null,"true"))),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAttended"},r.a.createElement(f.a.Label,null,"Attended ?"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"false"),r.a.createElement("option",null,"true"))),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridImportant"},r.a.createElement(f.a.Label,null,"Important ?"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"false"),r.a.createElement("option",null,"true")))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"4",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"success",type:"submit"},"Create New")))},sa=function(e){console.log("UpdateAppointmentForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.appointment);return console.log("UpdateAppointmentForm.props.appointment:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTitle"},r.a.createElement(f.a.Label,null,"Title"),r.a.createElement(f.a.Control,{type:"text",placeholder:t.title})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridType"},r.a.createElement(f.a.Label,null,"Type"),r.a.createElement(f.a.Control,{type:"text",placeholder:t.type})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridLocation"},r.a.createElement(f.a.Label,null,"Location"),r.a.createElement(f.a.Control,{type:"text",placeholder:t.location}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridDate"},r.a.createElement(f.a.Label,null,"Date"),r.a.createElement(f.a.Control,{type:"date",placeholder:t.date})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridDateTodayCheckbox"},r.a.createElement(f.a.Label,null,"Today's Date?"),r.a.createElement(f.a.Control,{type:"checkbox",onChange:function(e){console.log(e.target.checked)}})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridTime"},r.a.createElement(f.a.Label,null,"Scheduled Time"),r.a.createElement(f.a.Control,{type:"time",placeholder:t.time})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridCheckinTime"},r.a.createElement(f.a.Label,null,"Check-in Time"),r.a.createElement(f.a.Control,{type:"time",placeholder:t.checkinTime})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridSeenTime"},r.a.createElement(f.a.Label,null,"Seen Time"),r.a.createElement(f.a.Control,{type:"time",placeholder:t.seenTime}))),r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridDescription"},r.a.createElement(f.a.Label,null,"Description"),r.a.createElement(f.a.Control,{as:"textarea",rows:"2",placeholder:t.description})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridInProgress"},r.a.createElement(f.a.Label,null,"In Progress ?"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"false"),r.a.createElement("option",null,"true"))),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridAttended"},r.a.createElement(f.a.Label,null,"Attended ?"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"false"),r.a.createElement("option",null,"true"))),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridImportant"},r.a.createElement(f.a.Label,null,"Important ?"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"false"),r.a.createElement("option",null,"true")))),e.canCancel&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"danger",eventKey:"2",className:"btn",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(C.a.Toggle,{as:h.a,variant:"success",eventKey:"2",className:"btn",type:"submit"},"Submit")))},ma=function(e){console.log("UpdateAppointmentFieldForm.props:  ",Object(x.a)({},e));var t=Object(B.a)({},e.appointment);return console.log("UpdateAppointmentFieldForm.props.user:  ",Object(x.a)({},t)),r.a.createElement("div",{className:"UpdateFormContainer"},r.a.createElement(f.a,{onSubmit:e.onConfirm},r.a.createElement(f.a.Row,null,r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridFieldSelect"},r.a.createElement(f.a.Label,null,"Field Options"),r.a.createElement(f.a.Control,{as:"select"},r.a.createElement("option",null,"select"),r.a.createElement("option",null,"title"),r.a.createElement("option",null,"type"),r.a.createElement("option",null,"date"),r.a.createElement("option",null,"checkinTime"),r.a.createElement("option",null,"seenTime"),r.a.createElement("option",null,"location"),r.a.createElement("option",null,"description"),r.a.createElement("option",null,"patient.name"),r.a.createElement("option",null,"inProgress"),r.a.createElement("option",null,"attended"),r.a.createElement("option",null,"important"))),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridField"},r.a.createElement(f.a.Label,null,"Field"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Field"})),r.a.createElement(f.a.Group,{as:I.a,controlId:"formGridQuery"},r.a.createElement(f.a.Label,null,"Query"),r.a.createElement(f.a.Label,null,"Time Format 24Hr ex 16:15"),r.a.createElement(f.a.Label,null,"Date Format YYYY-MM-DD"),r.a.createElement(f.a.Control,{type:"text",placeholder:"Query"}))),e.canCancel&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canCancelProfile&&r.a.createElement(h.a,{variant:"danger",onClick:e.onCancel},"Cancel"),e.canConfirm&&r.a.createElement(h.a,{variant:"success",type:"submit"},"Submit")))},da=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(a=Object(s.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(r)))).state={creating:!1,updating:!1,deleting:!1,searching:!1,searchAppointments:[],appointments:[],isLoading:!1,selectedAppointment:null,selectedPatient:null,appointmentUpdateField:null,appointmentSearchField:null,appointmentSearchQuery:null,canDelete:null,userAlert:null,createPdf:!1,pdfData:null},a.isActive=!0,a.startCreateAppointmentHandler=function(){a.setState({creating:!0}),console.log("CreateAppointmentForm...",a.context.selectedPatient)},a.startUpdateAppointmentHandler=function(){a.setState({updating:!0}),console.log("UpdateAppointmentForm...")},a.startSearchAppointmentHandler=function(){a.setState({searching:!0}),console.log("SearchAppointmentForm...")},a.modalConfirmHandler=function(e){console.log("CreateAppointmentFormData:  ",e.target.formGridTitle.value),a.setState({creating:!1});var t=a.context.userId,n=a.context.selectedPatient._id;if(console.log("\n        userId: ".concat(t,"\n        patientId: ").concat(n,"\n      ")),void 0===n)return console.log("\n          select a Patient before creating an Appointment!!\n          "),void a.setState({userAlert:"select a Patient before creating an Appointment!!..."});var r=e.target.formGridTitle.value,i=e.target.formGridType.value,l=e.target.formGridDate.value;!0===e.target.formGridDateTodayCheckbox.checked&&(l=(new Date).toISOString().slice(0,10));var o=e.target.formGridTime.value,c=e.target.formGridSeenTime.value,s=e.target.formGridCheckinTime.value,m=e.target.formGridLocation.value,d=e.target.formGridDescription.value,p=e.target.formGridInProgress.value,u=e.target.formGridAttended.value,h=e.target.formGridImportant.value;if(0===r.trim().length||0===i.trim().length||0===l.trim().length||0===o.trim().length||0===m.trim().length||0===d.trim().length||0===p.trim().length||0===u.trim().length||0===h.trim().length)return console.log("blank fields detected!!!...Please try again..."),void a.setState({userAlert:"blank fields detected!!!...Please try again..."});console.log("\n        creating appointment...\n        title: ".concat(r,",\n        type: ").concat(i,",\n        date: ").concat(l,",\n        time: ").concat(o,",\n        seenTime: ").concat(c,",\n        checkinTime: ").concat(s,",\n        location: ").concat(m,",\n        description: ").concat(d,",\n        inProgress: ").concat(p,",\n        attended: ").concat(u,",\n        important: ").concat(h,",\n      ")),a.setState({userAlert:"creating appointment..."});var f={query:'\n          mutation {createAppointment(userId:"'.concat(t,'",patientId:"').concat(n,'",appointmentInput:{title:"').concat(r,'",type:"').concat(i,'",date:"').concat(l,'",time:"').concat(o,'",seenTime:"').concat(c,'",checkinTime:"').concat(s,'",location:"').concat(m,'",description:"').concat(d,'",inProgress:').concat(p,",attended:").concat(u,",important:").concat(h,",})\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important}}\n        ")},g=a.context.token;fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(f),headers:{"Content-Type":"application/json",Authorization:"Bearer "+g}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data.createAppointment));var t=JSON.stringify(e.data).slice(2,15);a.setState({userAlert:t}),a.state.appointments.push(e.data.createAppointment),a.context.appointments=a.state.appointments,a.fetchAppointments()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalCancelHandler=function(){a.setState({creating:!1,updating:!1,searching:!1,selectedAppointment:null})},a.modalConfirmUpdateHandler=function(e){"admin"!==a.context.user.role&&(console.log("Not the Admin! No edit permission!!"),a.setState({userAlert:"Not the Admin! No edit permission!!"}));var t=a.context.userId,n=a.context.selectedAppointment._id;console.log("\n        userId: ".concat(t,"\n        appointmentd: ").concat(n,",\n      ")),console.log("UpdateAppointmentFormData:  ",e.target.formGridTitle.value),a.setState({updating:!1});var r=e.target.formGridTitle.value,i=e.target.formGridType.value,l=e.target.formGridDate.value;!0===e.target.formGridDateTodayCheckbox.checked&&(l=(new Date).toISOString().slice(0,10));var o=e.target.formGridTime.value,c=e.target.formGridSeenTime.value,s=e.target.formGridCheckinTime.value,m=e.target.formGridLocation.value,d=e.target.formGridDescription.value,p=e.target.formGridInProgress.value,u=e.target.formGridAttended.value,h=e.target.formGridImportant.value;0===r.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),r=a.context.selectedAppointment.title),0===i.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),i=a.context.selectedAppointment.type),0===l.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),l=a.context.selectedAppointment.date),0===o.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),o=a.context.selectedAppointment.time),0===c.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),c=a.context.selectedAppointment.seenTime),0===s.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),s=a.context.selectedAppointment.checkinTime),0===m.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),m=a.context.selectedAppointment.location),0===d.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),d=a.context.selectedAppointment.description),0===p.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),p=a.context.selectedAppointment.inProgress),0===u.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),u=a.context.selectedAppointment.attended),0===h.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),h=a.context.selectedAppointment.important),console.log("\n        updating appointment...\n        title: ".concat(r,",\n        type: ").concat(i,",\n        date: ").concat(l,",\n        time: ").concat(o,",\n        seenTime: ").concat(c,",\n        checkinTime: ").concat(s,",\n        location: ").concat(m,",\n        description: ").concat(d,",\n        inProgress: ").concat(p,",\n        attended: ").concat(u,",\n        important: ").concat(h,",\n      ")),a.setState({userAlert:"updating appointment..."});var f={query:'\n      mutation {updateAppointment(userId:"'.concat(t,'",appointmentId:"').concat(n,'",appointmentInput:{title:"').concat(r,'",type:"').concat(i,'",date:"').concat(l,'",time:"').concat(o,'",seenTime:"').concat(c,'",checkinTime:"').concat(s,'",location:"').concat(m,'",description:"').concat(d,'",inProgress:').concat(p,",attended:").concat(u,",important:").concat(h,",})\n      {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important,notes}}\n        ")},g=a.context.token;fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(f),headers:{"Content-Type":"application/json",Authorization:"Bearer "+g}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e));var t=e.data.updateAppointment._id,n=a.state.appointments.find((function(e){return e._id===t})),r=a.state.appointments.indexOf(n),i=a.state.appointments.splice(r,1);console.log("updatedAppointment:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.appointments.push(e.data.updateAppointment);var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l}),a.fetchAppointments()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updateAppointmentPatientHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedAppointment._id,i=a.context.selectedPatient._id;if("admin"!==a.context.user.role)return console.log("No edit permission!!"),void a.setState({userAlert:"No edit permission!!"});if(void 0===i)return console.log("\n        select a Patient before creating an Appointment!!\n        "),void a.setState({userAlert:"select a Patient before creating an Appointment!!..."});a.setState({updating:!1,patientUpdateField:null}),console.log("\n      updating appointment patient...\n      userId: ".concat(n,",\n      appointmentId: ").concat(r,",\n      patientId: ").concat(i,",\n      ")),a.setState({userAlert:"updating appointment patient..."});var l={query:'\n        mutation {updateAppointmentPatient(userId:"'.concat(n,'",appointmentId:"').concat(r,'",patientId:"').concat(i,'")\n        {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title},consultant{reference{_id,name,role}}},inProgress,attended,important}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(l),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e));var t=e.data.updateAppointmentPatient._id,n=a.state.appointments.find((function(e){return e._id===t})),r=a.state.appointments.indexOf(n),i=a.state.appointments.splice(r,1);console.log("updatedAppointment:  ",JSON.stringify(n),"  updatedPatientPos:  ",r,"  slicedArray:  ",i),a.state.appointments.push(e.data.updateAppointmentPatient);var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l}),a.fetchAppointments()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalConfirmUpdateFieldHandler=function(e){e.preventDefault();var t=a.context.token,n=a.context.userId,r=a.context.selectedAppointment._id;"admin"!==a.context.user.role&&(console.log("Not the creator or Admin! No edit permission!!"),r=null),console.log("UpdateAppointmentFieldFormData:  ",e.target.formGridField.value),a.setState({updating:!1});var i=null,l=e.target.formGridQuery.value;i="select"===e.target.formGridFieldSelect.value?e.target.formGridField.value:e.target.formGridFieldSelect.value;var o={query:'\n        mutation {updateAppointmentField(userId:"'.concat(n,'",appointmentId:"').concat(r,'",field:"').concat(i,'",query:"').concat(l,'")\n        {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important,notes}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(o),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data.updateAppointmentField));var t=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:t});var n=e.data.updateAppointmentField._id,r=a.state.appointments.find((function(e){return e._id===n})),i=a.state.appointments.indexOf(r),l=a.state.appointments.splice(i,1);console.log("updatedAppointment:  ",JSON.stringify(r),"  updatedAppointmentPos:  ",i,"  slicedArray:  ",l),a.state.appointments.push(e.data.updateAppointmentField),a.context.appointments=a.state.appointments,a.fetchAppointments()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalConfirmSearchHandler=function(e){console.log("SearchAppointmentForm:  ");var t=a.context.userId;console.log("SearchAppointmentFormData:  ",e.target.formBasicField.value),a.setState({searching:!1});var n=null,r=e.target.formBasicQuery.value;if(0===(n="select"===e.target.formBasicFieldSelect.value?e.target.formBasicField.value:e.target.formBasicFieldSelect.value).trim().length||0===r.trim().length)return console.log("blank fields detected!!!...Please try again..."),void a.setState({userAlert:"blank fields detected!!!...Please try again..."});var i={field:n,query:r};console.log("Searching for Appointment:  ",JSON.stringify(i));var l={query:'\n          query {getAppointmentField(userId:"'.concat(t,'", field:"').concat(n,'", query:"').concat(r,'")\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title},consultant{reference{_id,name,role}}},inProgress,attended,important}}\n        ')},o=a.context.token;fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(l),headers:{"Content-Type":"application/json",Authorization:"Bearer "+o}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e));var t=JSON.stringify(e.data).slice(2,15);a.setState({userAlert:t});var n=e.data.getAppointmentField;a.setState({searchAppointments:n}),console.log("state.searchAppointments:  ",a.state.searchAppointments)})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalConfirmSearchIdHandler=function(e){console.log("\n      SearchAppointmentIdFormData\n      ");var t=a.context.userId;a.setState({searching:!1});var n=e.target.formBasicId.value,r={query:'\n          query {getAppointmentId(userId:"'.concat(t,'", appointmentId:"').concat(n,'")\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        ')},i=a.context.token;fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(r),headers:{"Content-Type":"application/json",Authorization:"Bearer "+i}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e));var t=JSON.stringify(e.data).slice(2,15);a.setState({userAlert:t});var n=e.data.getAppointmentId;a.setState({searchAppointments:[n]}),console.log("state.searchAppointments:  ",a.state.searchAppointments)})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalConfirmSearchPatientHandler=function(e){console.log("\n      SearchAppointmentPatientFormData\n      ");var t=a.context.userId;a.setState({searching:!1});var n=e.target.formBasicPatientId.value,r={query:'\n          query {getAppointmentPatient(userId:"'.concat(t,'", patientId:"').concat(n,'")\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        ')},i=a.context.token;fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(r),headers:{"Content-Type":"application/json",Authorization:"Bearer "+i}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e));var t=JSON.stringify(e.data).slice(2,15);a.setState({userAlert:t});var n=e.data.getAppointmentPatient;a.setState({searchAppointments:n}),console.log("state.searchApointments:  ",a.state.searchApointments)})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalConfirmSearchDateHandler=function(e){console.log("\n      SearchAppointmentDateFormData\n      ");var t=a.context.userId;a.setState({searching:!1});var n=e.target.formBasicDate.value;!0===e.target.formBasicDateTodayCheckbox.checked&&(n=(new Date).toISOString().slice(0,10));var r={query:'\n          query {getAppointmentDate(userId:"'.concat(t,'",date:"').concat(n,'")\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        ')},i=a.context.token;fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(r),headers:{"Content-Type":"application/json",Authorization:"Bearer "+i}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e));var t=JSON.stringify(e.data).slice(2,15);a.setState({userAlert:t});var n=e.data.getAppointmentDate;a.setState({searchAppointments:n}),console.log("state.searchAppointments:  ",a.state.searchAppointments)})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalConfirmSearchDateRangeHandler=function(e){console.log("\n      SearchAppointmentDateRangeFormData\n      ");var t=a.context.userId;a.setState({searching:!1});var n=e.target.formBasicStartDate.value,r=e.target.formBasicEndDate.value,i={query:'\n          query {getAppointmentDateRange(userId:"'.concat(t,'",startDate:"').concat(n,'",endDate:"').concat(r,'")\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        ')},l=a.context.token;fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(i),headers:{"Content-Type":"application/json",Authorization:"Bearer "+l}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e));var t=JSON.stringify(e.data).slice(2,15);a.setState({userAlert:t});var n=e.data.getAppointmentDateRange;a.setState({searchAppointments:n}),console.log("state.searchApointments:  ",a.state.searchAppointments)})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalCancelHandler=function(){a.setState({creating:!1,updating:!1,searching:!1,selectedAppointment:null})},a.fetchAppointmentsAsc=function(){console.log("'fetch appointments function' context object... "+JSON.stringify(a.context));var e=a.context.userId,t={query:'\n            query {appointmentsDateAsc(userId:"'.concat(e,'")\n            {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,contact{email,phone},consultant{reference{_id,name,role}}},inProgress,attended,important,notes}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json",Authorization:"Bearer "+a.context.token}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.appointmentsDateAsc;console.log(t);var n=JSON.stringify(e.data).slice(2,15);a.setState({userAlert:n}),a.context.appointments=t,a.setState({appointments:t})})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.fetchAppointmentsDesc=function(){console.log("'fetch appointments function' context object... "+JSON.stringify(a.context));var e=a.context.userId,t={query:'\n            query {appointmentsDateDesc(userId:"'.concat(e,'")\n            {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,contact{email,phone},consultant{reference{_id,name,role}}},inProgress,attended,important,notes}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json",Authorization:"Bearer "+a.context.token}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.appointmentsDateDesc;console.log(t);var n=JSON.stringify(e.data).slice(2,15);a.setState({userAlert:n}),a.context.appointments=t,a.setState({appointments:t})})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalDeleteHandler=function(){console.log("deleting appointment...selectedAppointment:  ",a.context.selectedAppointment);var e=a.context.userId,t=a.context.selectedAppointment._id;"admin"!==a.context.user.role&&(console.log("Not the Admin! No edit permission!!"),a.setState({userAlert:"Not the Admin! No edit permission!!"})),a.setState({deleting:!0});var n={query:'\n          mutation {deleteAppointment(userId:"'.concat(e,'",appointmentId:"').concat(t,'")\n          {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,appointments{_id,date,title}},inProgress,attended,important,notes}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(n),headers:{"Content-Type":"application/json",Authorization:"Bearer "+a.context.token}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("resData:  ",e);var t=e.data.deleteAppointment;console.log(t);var n=JSON.stringify(e.data).slice(2,15);a.setState({userAlert:n});var r=t._id;t=a.state.appointments.find((function(e){return e._id===r}));var i=a.state.appointments.indexOf(t),l=a.state.appointments.splice(i,1);console.log("deletedAppointment:  ",JSON.stringify(t),"  deletedUserPos:  ",i,"  slicedArray:  ",l),a.setState({deleting:!1}),a.fetchAppointments()})).catch((function(e){console.log(e),a.setState({userAlert:e}),a.isActive&&a.setState({deleting:!1})}))},a.showDetailHandler=function(e){a.setState((function(t){var n=t.appointments.find((function(t){return t._id===e}));return a.setState({selectedAppointment:n}),a.context.selectedAppointment=n,console.log("selectedAppointment:  ",n),{selecteAppointment:n}}))},a.createPdf=function(e){console.log("\n        creating pdf...\n        user: ".concat(JSON.stringify(e),"\n      "));var t={title:e.title,body:e.date};a.setState({createPdf:!0,pdfData:t})},a.closePdfCreator=function(){console.log("\n      closing pdf creator...\n      "),a.setState({createPdf:!1,pdfData:null})},a}return Object(d.a)(t,e),Object(c.a)(t,[{key:"componentDidMount",value:function(){this.fetchAppointments(),this.fetchAppointmentToday(),this.fetchAppointmentInProgress(),"Lord-of-the-Manor"===this.context.user.name&&this.setState({canDelete:!0})}},{key:"fetchAppointments",value:function(){var e=this;console.log("'fetch appointments function' context object... "+JSON.stringify(this.context));var t=this.context.userId;this.setState({isLoading:!0});var a={query:'\n            query {appointments(userId:"'.concat(t,'")\n            {_id,title,type,date,time,seenTime,checkinTime,location,description,patient{_id,name,contact{email,phone},consultant{reference{_id,name,role}}},inProgress,attended,important,notes}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(a),headers:{"Content-Type":"application/json",Authorization:"Bearer "+this.context.token}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(t){var a=t.data.appointments;console.log(a);var n=JSON.stringify(t.data).slice(2,15);e.setState({userAlert:n}),e.context.appointments=e.state.appointments,e.isActive&&e.setState({appointments:a,isLoading:!1})})).catch((function(t){console.log(t),e.setState({userAlert:t}),e.isActive&&e.setState({isLoading:!1})}))}},{key:"updateAppointmentSpecial",value:function(e){console.log("special field to update:  ",e.target.value);var t=e.target.value;this.setState({appointmentUpdateField:t})}},{key:"fetchAppointmentToday",value:function(){var e=this;console.log("fetching todays appts function:  ");var t=this.context.token,a=this.context.userId,n={query:'\n          query {getAppointmentToday(userId:"'.concat(a,'")\n          {_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(n),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(t){e.context.appointmentsToday=t.data.getAppointmentToday,console.log("context today's appts:  ",JSON.stringify(e.context.appointmentsToday));var a=JSON.stringify(t.data).slice(2,15);e.setState({userAlert:a})})).catch((function(t){console.log(t),e.setState({userAlert:t})}))}},{key:"fetchAppointmentInProgress",value:function(){var e=this;console.log("fetching inProgress appts function:  ");var t=this.context.token,a=this.context.userId,n={query:'\n          query {getAppointmentField(userId:"'.concat(a,'",field:"inProgress",query:"true"){_id,title,type,date,time,patient{_id,name},location,description,inProgress,important,attended}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(n),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(t){e.context.appointmentsInProgress=t.data.getAppointmentField,console.log("context in progress appts:  ",JSON.stringify(e.context.appointmentsInProgress));var a=JSON.stringify(t.data).slice(2,15);e.setState({userAlert:a}),e.state.selectedPatient!=={}&&null!==e.context.selectedstate||e.setState({userAlert:"No Patient Selected"}),console.log("\n          context.selectedPatient: ".concat(JSON.stringify(e.context.selectedPatient),",\n          state.selectedPatient: ").concat(JSON.stringify(e.state.selectedPatient),",\n          "))})).catch((function(t){console.log(t),e.setState({userAlert:t})}))}},{key:"componentWillUnmount",value:function(){this.isActive=!1}},{key:"render",value:function(){return r.a.createElement(r.a.Fragment,null,!0===this.state.createPdf&&r.a.createElement(ne,{pdfData:this.state.pdfData,onClosePdfCreator:this.closePdfCreator}),r.a.createElement(C.a,null,r.a.createElement(g.a,null,r.a.createElement(I.a,{md:3,className:"MasterCol1"},r.a.createElement(v,{authUserId:this.context.userId,alert:this.state.userAlert}),r.a.createElement($,null)),r.a.createElement(I.a,{md:9,className:"MasterCol2"},r.a.createElement(w.a,{className:"containerCombinedDetail"},r.a.createElement(U.a.Container,{id:"left-tabs-example",defaultActiveKey:"appointmentDetail"},r.a.createElement(g.a,null,r.a.createElement(I.a,{sm:2},r.a.createElement(G.a,{variant:"pills",className:"flex-column"},r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"MasterList"},"MASTER LIST")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"appointmentDetail"},"Selected")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"appointmentCreate"},"Create New")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"disabled",disabled:!0},"Edit:")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"appointmentEditBasic"},"Basic Info")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"appointmentEditField"},"Single Field")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"appointmentEditPatient"},"Patient")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"disabled",disabled:!0},"Search:")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"SearchInput"},"Input")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"SearchResult"},"Results")))),r.a.createElement(I.a,{sm:10},r.a.createElement(U.a.Content,null,r.a.createElement(U.a.Pane,{eventKey:"appointmentDetail"},null===this.state.selectedAppointment&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select an Appointment from the Master List"),!1===this.state.isLoading&&null!==this.state.selectedAppointment&&r.a.createElement(ea,{authUserId:this.context.userId,appointment:this.state.selectedAppointment,onEdit:this.startUpdateAppointmentHandler,canDelete:this.state.canDelete,onDelete:this.modalDeleteHandler,onCreatePdf:this.createPdf})),r.a.createElement(U.a.Pane,{eventKey:"appointmentCreate"},r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",onClick:this.startCreateAppointmentHandler},"Create New"),this.state.creating&&null!==this.context.selectedPatient._id&&r.a.createElement(ca,{canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmHandler,onSubmit:this.modalConfirmHandler,confirmText:"Confirm",selectedPatient:this.context.selectedPatient})),r.a.createElement(U.a.Pane,{eventKey:"appointmentEditBasic"},null===this.state.selectedAppointment&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select an Appointment from the Master List"),null!==this.state.selectedAppointment&&r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",onClick:this.startUpdateAppointmentHandler},"Edit Basic Data"),this.state.updating&&null!==this.state.selectedAppointment&&r.a.createElement(sa,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmUpdateHandler,confirmText:"Confirm",appointment:this.state.selectedAppointment})),r.a.createElement(U.a.Pane,{eventKey:"appointmentEditField"},null===this.state.selectedAppointment&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select an Appointment from the Master List"),null!==this.state.selectedAppointment&&r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",onClick:this.startUpdateAppointmentHandler},"Edit a Single Field"),this.state.updating&&null!==this.state.selectedAppointment&&r.a.createElement(ma,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmUpdateFieldHandler,confirmText:"Confirm",appointment:this.state.selectedAppointment})),r.a.createElement(U.a.Pane,{eventKey:"appointmentEditPatient"},null===this.state.selectedAppointment&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select an Appointment from the Master List"),null!==this.state.selectedAppointment&&r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",value:"patient",onClick:this.updateAppointmentSpecial.bind(this)},"Change Patient:"),null!==this.state.selecteAppointment&&null===this.context.selectedPatient&&"patient"===this.state.appointmentUpdateField&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select someone from the Patients page"),null!==this.state.selectedAppointment&&null!==this.context.selectedPatient&&"patient"===this.state.appointmentUpdateField&&r.a.createElement(g.a,null,r.a.createElement(I.a,{md:8,className:"updateUserColAdd"},r.a.createElement("p",null,r.a.createElement("span",{className:"bold"},"Add Patient :")," ",this.context.selectedPatient.name),r.a.createElement("p",null,r.a.createElement("span",{className:"bold"},"To Appointment :")," ",this.state.selectedAppointment.title,"  ",r.a.createElement("span",{className:"bold"},"On :")," ",new Date(1e3*this.state.selecteAppointment.date.substr(0,10)).toISOString().slice(0,10)," ",r.a.createElement("span",{className:"bold"},"At :")," ",this.state.selecteAppointment.time," ??"),r.a.createElement(h.a,{variant:"success",onClick:this.updateAppointmentPatientHandler},"Yes")))),r.a.createElement(U.a.Pane,{eventKey:"MasterList"},r.a.createElement(w.a,{className:"containerUserMasterList"},r.a.createElement(g.a,{className:"searchListRow"},r.a.createElement(h.a,{variant:"primary",size:"sm",onClick:this.fetchAppointmentsAsc},"Sort Asc"),r.a.createElement(h.a,{variant:"info",size:"sm",onClick:this.fetchAppointmentsDesc},"Sort Desc"),this.state.isLoading?r.a.createElement(M,null):r.a.createElement(Xt,{appointments:this.state.appointments,authUserId:this.context.userId,onViewDetail:this.showDetailHandler})))),r.a.createElement(U.a.Pane,{eventKey:"SearchInput"},r.a.createElement(w.a,{className:"containerSearchUserInput"},r.a.createElement(g.a,{className:"searchUserRowAdd"},r.a.createElement(h.a,{variant:"primary",onClick:this.startSearchAppointmentHandler},"Search")),r.a.createElement(g.a,{className:"searchUserRowForm"},r.a.createElement(I.a,{md:10,className:"searchUserColForm"},r.a.createElement(O.a,{defaultActiveKey:"Field",id:"uncontrolled-tab-example"},r.a.createElement(U.a,{eventKey:"Search",title:"Search:",disabled:!0}),r.a.createElement(U.a,{eventKey:"Field",title:"Search by Field:"},!0!==this.state.searching&&r.a.createElement(h.a,{variant:"outline-warning",className:"confirmEditButton",size:"lg"},"Click the 'Search' Button start"),!0===this.state.searching&&r.a.createElement(na,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchHandler,confirmText:"Search",appointment:this.context.selectedAppointment})),r.a.createElement(U.a,{eventKey:"Id",title:"Search by Id:"},!0!==this.state.searching&&r.a.createElement(h.a,{variant:"outline-warning",className:"confirmEditButton",size:"lg"},"Click the 'Search' Button start"),!0===this.state.searching&&r.a.createElement(ra,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchIdHandler,confirmText:"Search",appointment:this.context.selectedAppointment})),r.a.createElement(U.a,{eventKey:"Patient",title:"Search by Patient:"},!0!==this.state.searching&&r.a.createElement(h.a,{variant:"outline-warning",className:"confirmEditButton",size:"lg"},"Click the 'Search' Button start"),!0===this.state.searching&&r.a.createElement(ia,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchPatientHandler,confirmText:"Search",appointment:this.context.selectedAppointment})),r.a.createElement(U.a,{eventKey:"Date",title:"Search by Date:"},!0!==this.state.searching&&r.a.createElement(h.a,{variant:"outline-warning",className:"confirmEditButton",size:"lg"},"Click the 'Search' Button start"),!0===this.state.searching&&r.a.createElement(la,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchDateHandler,confirmText:"Search",appointment:this.context.selectedAppointment})),r.a.createElement(U.a,{eventKey:"Date Range",title:"Search by Date Range:"},!0!==this.state.searching&&r.a.createElement(h.a,{variant:"outline-warning",className:"confirmEditButton",size:"lg"},"Click the 'Search' Button start"),!0===this.state.searching&&r.a.createElement(oa,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmSearchDateRangeHandler,confirmText:"Search",appointment:this.context.selectedAppointment})))),r.a.createElement(I.a,{md:10})))),r.a.createElement(U.a.Pane,{eventKey:"SearchResult"},r.a.createElement(w.a,{className:"containerSearchUserResults"},r.a.createElement(g.a,null,r.a.createElement(k.a,{className:"searchCard"},r.a.createElement(k.a.Body,{className:"searchCardBody"},r.a.createElement(k.a.Title,null,"Your Search"),r.a.createElement(k.a.Text,null,"Field: ",this.state.appointmentSearchField),r.a.createElement(k.a.Text,null,"Query: ",this.state.appointmentSearchQuery)))),r.a.createElement(g.a,{className:"searchListRow"},this.state.searchAppointments!==[]&&r.a.createElement(aa,{searchAppointments:this.state.searchAppointments,authUserId:this.context.userId,onCancel:this.modalCancelHandler,onViewDetail:this.showDetailHandler})))))))))))))}}]),t}(n.Component);da.contextType=E;var pa=da,ua=(a(530),function(e){var t=Object(B.a)({},e.user);console.log("thisUserProfile.props.user:  "+Object(x.a)({},t));var a=e.authUserId,n=t.address,i=t.attendance;console.log("Profile: userAttendance",i);var l=t.leave;console.log("Profile: userLeave",l);var o=t.attachments;console.log("Profile: userAttachment",o);var c=new Date(1e3*t.employmentDate.substr(0,10)).toISOString().slice(0,10),s=t.terminationDate;return null!==t.terminationDate&&(s=new Date(1e3*t.terminationDate.substr(0,10)).toISOString().slice(0,10)),r.a.createElement(O.a,{defaultActiveKey:"Demographics",id:"uncontrolled-tab-example"},r.a.createElement(U.a,{eventKey:"",title:"Details:",disabled:!0}),r.a.createElement(U.a,{eventKey:"Demographics",title:"Demographics"},r.a.createElement(k.a,{className:"UserDetailCard"},r.a.createElement(k.a.Body,null,r.a.createElement(k.a.Title,null,r.a.createElement("span",{className:"ul"},"Your Profile Details")),r.a.createElement(g.a,{className:"detailCardRow"},r.a.createElement(I.a,{className:"detailCardCol"},r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"ID:")," ",t._id),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Name:")," ",t.name),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Phone:")," ",t.phone),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Email:")," ",t.email),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Role:")," ",t.role)),r.a.createElement(I.a,{className:"detailCardCol"},r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Start Date:")," ",c),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"End Date:")," ",s),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Address:")),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Street & Number :")," ",n.number,", ",n.street),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Town :")," ",n.town),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Parish :")," ",n.parish),r.a.createElement(k.a.Text,null,r.a.createElement("span",{className:"bold"},"Post Office :")," ",n.postOffice))),r.a.createElement(g.a,{className:"detailCardRow"},r.a.createElement(I.a,{className:"detailCardCol"},r.a.createElement(h.a,{variant:"warning",onClick:e.onCreatePdf.bind(void 0,t)},"Create Pdf")))))),r.a.createElement(U.a,{eventKey:"Attendance",title:"Attendance"},r.a.createElement(k.a.Text,null,"Attendance:"),r.a.createElement(V,{userAttendance:i,authUserId:a,canDelete:e.canDelete,onDelete:e.attendanceDelete})),r.a.createElement(U.a,{eventKey:"Leave",title:"Leave"},r.a.createElement(k.a.Text,null,"Leave:"),r.a.createElement(j,{userLeave:l,authUserId:a,canDelete:e.canDelete,onDelete:e.leaveDelete})),r.a.createElement(U.a,{eventKey:"Attachments",title:"Attachments"},r.a.createElement(k.a.Text,null,"Attachments:"),r.a.createElement(q,{userAttachment:o,authUserId:a,canDelete:e.canDelete,onDelete:e.attachmentDelete,onViewAttachment:e.onViewAttachment})))}),ha=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(a=Object(s.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(r)))).state={user:null,users:[],updating:!1,isLoading:!1,userUpdateField:null,userAlert:null,canDelete:null,showAttachment:!1,createPdf:!1,pdfData:null,showThisAttachmentFile:null,showThisAttachmentType:null},a.isActive=!0,a.startUpdateUserHandler=function(){a.setState({updating:!0}),console.log("UpdateUserForm...")},a.modalConfirmUpdateHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedUser._id;n!==r&&"admin"!==a.context.user.role&&(console.log("Not the creator or Admin! No edit permission!!"),a.setState({userAlert:"Not the creator or Admin! No edit permission!!"}),r=null),console.log("UpdateUserFormData:  ",e.target.formGridEmail.value),a.setState({updating:!1});var i=e.target.formGridEmail.value,l=e.target.formGridPassword.value,o=e.target.formGridName.value,c=a.context.user.role,s=e.target.formGridDob.value,m=e.target.formGridPhone.value,d=e.target.formGridAddressNumber.value,p=e.target.formGridAddressStreet.value,u=e.target.formGridAddressTown.value,h=e.target.formGridAddressParish.value,f=e.target.formGridAddressPostOffice.value,g=e.target.formGridEmploymentDate.value;!0===e.target.formGridEmploymentDateTodayCheckbox.checked&&(g=(new Date).toISOString().slice(0,10));var E=e.target.formGridTerminationDate.value;!0===e.target.formGridTerminationDateTodayCheckbox.checked&&(E=(new Date).toISOString().slice(0,10)),0===i.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),i=a.context.user.email),0===l.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),l=a.context.user.password),0===o.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),o=a.context.user.name),0===s.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),s=a.context.user.dob),0===m.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),m=a.context.user.phone),0===d.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),d=a.context.user.address.number),0===p.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),p=a.context.user.address.street),0===u.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),u=a.context.user.address.town),0===h.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),h=a.context.user.address.parish),0===f.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),f=a.context.user.address.postOffice),0===g.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),g=a.context.user.employmentDate),0===E.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),E=a.context.user.terminationDate),console.log("\n      updating user profile...\n      userId: ".concat(n,"\n      email: ").concat(i,",\n      password: ").concat(l,",\n      name: ").concat(o,",\n      role: ").concat(c,",\n      dob: ").concat(s,",\n      phone: ").concat(m,",\n      addressNumber: ").concat(d,",\n      addressStreet: ").concat(p,",\n      addressTown: ").concat(u,",\n      addressParish: ").concat(h,",\n      addressPostOffice: ").concat(f,",\n      employmentDate: ").concat(g,",\n      terminationDate: ").concat(E,",\n      "));var y={query:'\n        mutation {updateUser(userId:"'.concat(n,'",selectedUserId:"').concat(n,'",userInput: {email:"').concat(i,'",password:"').concat(l,'",name:"').concat(o,'",dob:"').concat(s,'",addressNumber:').concat(d,',addressStreet:"').concat(p,'",addressTown:"').concat(u,'",addressParish:"').concat(h,'", addressPostOffice:"').concat(f,'",phone:"').concat(m,'",role:"').concat(c,'",employmentDate:"').concat(g,'",terminationDate:"').concat(E,'"})\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(y),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e));var t=e.data.updateUser;console.log("updatedUser:  ",JSON.stringify(t)),a.state.users.push(t),a.context.users=a.state.users;var n=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:n,user:t}),a.getThisUser()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.modalConfirmUpdateFieldHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedUser._id;n!==r&&"admin"!==a.context.user.role&&(console.log("Not the creator or Admin! No edit permission!!"),a.setState({userAlert:"Not the creator or Admin! No edit permission!!"}),r=null),console.log("UpdateUserFieldFormData:  ",e.target.formGridField.value),a.setState({updating:!1});var i=e.target.formGridField.value,l=e.target.formGridQuery.value,o={query:'\n            mutation{updateUserField(userId:"'.concat(n,'",selectedUserId:"').concat(n,'",field:"').concat(i,'",query:"').concat(l,'")\n            {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n          ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(o),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data.updateUserField));var t=e.data.updateUserField._id,n=a.state.users.find((function(e){return e._id===t})),r=a.state.users.indexOf(n),i=a.state.users.splice(r,1);console.log("updatedUser:  ",JSON.stringify(n),"  updatedUserPos:  ",r,"  slicedArray:  ",i),a.state.users.push(e.data.updateUserField),a.context.users=a.state.users;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l}),a.getThisUser()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updateUserAttendanceHandler=function(e){var t=a.context.token,n=a.state.user._id;console.log("UpdateUserAttendanceFormData:  ",e.target.formGridAttendanceStatus.value),a.setState({updating:!1,userUpdateField:null});var r=e.target.formGridAttendanceDate.value;!0===e.target.formGridAttendanceDateTodayCheckbox.checked&&(r=(new Date).toISOString().slice(0,10));var i=e.target.formGridAttendanceStatus.value,l=e.target.formGridAttendanceDescription.value;0===r.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),r=a.context.selectedUser.attendanceDate),0===i.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),i=a.context.selectedUser.attendanceStatus),0===l.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),l=a.context.selectedUser.attendanceDescription),console.log("\n      adding user attendance item...\n      userId: ".concat(n,",\n      attendanceDate: ").concat(r,",\n      attendanceStatus: ").concat(i,",\n      attendanceDescription: ").concat(l,"\n      "));var o={query:'\n          mutation {updateUserAttendance(userId:"'.concat(n,'", selectedUserId:"').concat(n,'",userInput:{attendanceDate:"').concat(r,'",attendanceStatus:"').concat(i,'",attendanceDescription:"').concat(l,'"})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(o),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data.updateUserAttendance));var t=e.data.updateUserAttendance._id,n=a.state.users.find((function(e){return e._id===t})),r=a.state.users.indexOf(n),i=a.state.users.splice(r,1);console.log("updatedUser:  ",JSON.stringify(n),"  updatedUserPos:  ",r,"  slicedArray:  ",i),a.state.users.push(e.data.updateUserAttendance),a.context.users=a.state.users;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l}),a.getThisUser()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updateUserLeaveHandler=function(e){var t=a.context.token,n=a.context.userId,r=a.context.selectedUser._id;n!==r&&"admin"!==a.context.user.role&&(console.log("Not the creator or Admin! No edit permission!!"),a.setState({userAlert:"Not the creator or Admin! No edit permission!!"}),r=null),console.log("UpdateUserLeaveFormData:  ",e.target.formGridLeaveType.value),a.setState({updating:!1,userUpdateField:null});var i=e.target.formGridLeaveType.value,l=e.target.formGridLeaveTitle.value,o=e.target.formGridLeaveStartDate.value;!0===e.target.formGridLeaveStartDateTodayCheckbox.checked&&(o=(new Date).toISOString().slice(0,10));var c=e.target.formGridLeaveEndDate.value;!0===e.target.formGridLeaveEndDateTodayCheckbox.checked&&(c=(new Date).toISOString().slice(0,10)),0===i.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),i=a.context.selectedUser.leaveType),0===l.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),l=a.context.selectedUser.leaveTitle),0===o.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),o=a.context.selectedUser.leaveStartDate),0===c.trim().length&&(console.log("blank fields detected!!!...filling w/ previous data..."),c=a.context.selectedUser.leaveEndDate),console.log("\n      adding user attendance item...\n      userId: ".concat(n,",\n      selectedUserId: ").concat(r,"\n      leave: {\n        type: ").concat(i,",\n        title: ").concat(l,",\n        startDate: ").concat(o,",\n        endDate: ").concat(c,"\n      }\n      "));var s={query:'\n          mutation {updateUserLeave(userId:"'.concat(n,'", selectedUserId:"').concat(n,'",userInput:{leaveType:"').concat(i,'",leaveTitle:"').concat(l,'",leaveStartDate:"').concat(o,'",leaveEndDate:"').concat(c,'"})\n          {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(s),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data));var t=e.data.updateUserLeave._id,n=a.state.users.find((function(e){return e._id===t})),r=a.state.users.indexOf(n),i=a.state.users.splice(r,1);console.log("updatedUser:  ",JSON.stringify(n),"  updatedUserPos:  ",r,"  slicedArray:  ",i),a.state.users.push(e.data.updateUserLeave),a.context.users=a.state.users;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l}),a.getThisUser()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.updateUserAttachmentHandler=function(e){var t=a.context.token,n=a.context.userId;console.log("UpdateUserAttachmentFormData:  "),a.setState({updating:!1,userUpdateField:null});var r=e.target.formGridAttachmentFormat.value,i="uploads/staff/"+n+"/attachments",l=E._currentValue.file;console.log("\n    uploading to s3...\n    file.name: ".concat(l.name,",\n    AuthContext._currentValue.file: ").concat(E._currentValue.file,",\n    "));var o={bucketName:a.context.creds.s3.bucketName,dirName:i,region:a.context.creds.s3.region,accessKeyId:a.context.creds.s3.accessKeyId,secretAccessKey:a.context.creds.s3.secretAccessKey},c=new T.a(o),s=l.name,m=s;if(c.uploadFile(l,s).then((function(e){console.log(e),a.setState({userAlert:"attachment upload success!"})})).catch((function(e){console.error(e),a.setState({userAlert:"upload error:  "+e})})),0!==m.trim().length&&0!==r.trim().length&&0!==i.trim().length){console.log("\n    adding user attendance item...\n    userId: ".concat(n,",\n    selectedUserId: ").concat(n,"\n    attachmentName: ").concat(m,",\n    attachmentFormat: ").concat(r,",\n    attachmentPath: ").concat(i,"\n    ")),a.setState({userAlert:"adding user attachment item..."});var d={query:'\n        mutation{updateUserAttachment(userId:"'.concat(n,'",selectedUserId:"').concat(n,'",userInput:{attachmentName:"').concat(m,'",attachmentFormat:"').concat(r,'",attachmentPath:"').concat(i,'"})\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(d),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("response data... "+JSON.stringify(e.data.updateUserAttachment));var t=e.data.updateUserAttachment._id,n=a.state.users.find((function(e){return e._id===t})),r=a.state.users.indexOf(n),i=a.state.users.splice(r,1);console.log("updatedUser:  ",JSON.stringify(n),"  updatedUserPos:  ",r,"  slicedArray:  ",i),a.state.users.push(e.data.updateUserAttachment),a.context.users=a.state.users;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l}),a.getThisUser()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))}else console.log("blank fields detected!!! try again")},a.modalCancelHandler=function(){a.setState({updating:!1})},a.deleteUserAttendanceItem=function(e){var t=a.context.token,n=a.context.userId,r=new Date(1e3*e.date.substr(0,10)).toISOString().slice(0,10);console.log("\n      delete user Attendance item:\n      props: ".concat(JSON.stringify(e),",\n      token: ").concat(t,",\n      userId: ").concat(n,",\n      selectedUserId: ").concat(n,",\n      attandance date: ").concat(r,",\n      "));var i={query:'\n         mutation{deleteUserAttendance(userId:"'.concat(n,'",selectedUserId:"').concat(n,'",attendanceDate:"').concat(r,'")\n         {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}\n        }\n       ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(i),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){console.log("resData.data:  ",e.data.deleteUserAttendance);var t=e.data.deleteUserAttendance._id,n=a.state.users.find((function(e){return e._id===t})),r=a.state.users.indexOf(n),i=a.state.users.splice(r,1);console.log("updatedUser:  ",JSON.stringify(n),"  updatedUserPos:  ",r,"  slicedArray:  ",i),a.state.users.push(e.data.deleteUserAttendance),a.context.users=a.state.users;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l}),a.getThisUser()})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.deleteUserLeaveItem=function(e){var t=a.context.token,n=a.context.userId;console.log("\n      delete user Leave item:\n      props: ".concat(JSON.stringify(e),",\n      token: ").concat(t,",\n      userId: ").concat(n,",\n      selectedUserId: ").concat(n,",\n      "));var r={query:'\n         mutation{deleteUserLeave(userId:"'.concat(n,'",selectedUserId:"').concat(n,'",leaveTitle:"').concat(e.title,'")\n         {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(r),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deleteUserLeave._id,n=a.state.users.find((function(e){return e._id===t})),r=a.state.users.indexOf(n),i=a.state.users.splice(r,1);console.log("updatedUser:  ",JSON.stringify(n),"  updatedUserPos:  ",r,"  slicedArray:  ",i),a.state.users.push(e.data.deleteUserLeave),a.context.users=a.state.users;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l})})).catch((function(e){console.log(e),a.setState({userAlert:e})}))},a.deleteUserAttachmentItem=function(e){var t=a.context.token,n=a.context.userId;console.log("\n      delete user Attachment item:\n      props: ".concat(JSON.stringify(e),",\n      token: ").concat(t,",\n      userId: ").concat(n,",\n      selectedUserId: ").concat(n,",\n      "));var r={query:'\n         mutation{deleteUserAttachment(userId:"'.concat(n,'",selectedUserId:"').concat(n,'",attachmentName:"').concat(e.name,'")\n         {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n      ')};fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify(r),headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(e){var t=e.data.deleteUserAttachment._id,n=a.state.users.find((function(e){return e._id===t})),r=a.state.users.indexOf(n),i=a.state.users.splice(r,1);console.log("updatedUser:  ",JSON.stringify(n),"  updatedUserPos:  ",r,"  slicedArray:  ",i),a.state.users.push(e.data.deleteUserAttachment),a.context.users=a.state.users;var l=JSON.stringify(e.data).slice(2,25);a.setState({userAlert:l}),a.getThisUser()})).catch((function(e){console.log(e)}))},a.onViewAttachment=function(e){console.log("\n      setting up attachment viewer...\n      attachment: ".concat(JSON.stringify(e),"\n      ")),a.setState({showAttachment:!0});var t="https://ent-emr-bucket.s3-us-east-2.amazonaws.com/"+e.path+"/"+e.name+"."+e.format,n=e.format;a.setState({showThisAttachmentFile:t,showThisAttachmentType:n})},a.closeAttachmentView=function(){console.log("\n      closing attachment viewer...\n      "),a.setState({showAttachment:!1})},a.createPdf=function(e){console.log("\n        creating pdf...\n        user: ".concat(JSON.stringify(e),"\n      "));var t={title:e.name,body:e.dob};a.setState({createPdf:!0,pdfData:t})},a.closePdfCreator=function(){console.log("\n      closing pdf creator...\n      "),a.setState({createPdf:!1,pdfData:null})},a}return Object(d.a)(t,e),Object(c.a)(t,[{key:"componentDidMount",value:function(){this.getThisUser(),this.getCreds(),"Lord-of-the-Manor"===this.context.user.name&&this.setState({canDelete:!0})}},{key:"getThisUser",value:function(){var e=this;this.setState({isLoading:!0});fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify({query:"\n      query {getThisUser\n        {_id,email,password,name,dob,address{number,street,town,parish,postOffice},phone,role,employmentDate,terminationDate,attachments{name,format,path},attendance{date,status,description},leave{type,title,startDate,endDate}}}\n        "}),headers:{"Content-Type":"application/json",Authorization:"Bearer "+this.context.token}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(t){console.log("resdata..."+JSON.stringify(t));var a=t.data.getThisUser;e.isActive&&(e.setState({user:a,isLoading:!1}),e.context.user=a,console.log("this.context.user:  "+e.context.user.name),sessionStorage.setItem("thisUser",JSON.stringify(a)))})).catch((function(t){console.log(t),e.setState({userAlert:t}),e.isActive&&e.setState({isLoading:!1})}))}},{key:"getCreds",value:function(){var e=this;this.setState({isLoading:!0});fetch("http://ec2-3-19-32-237.us-east-2.compute.amazonaws.com/graphql",{method:"POST",body:JSON.stringify({query:"\n      query {getCreds\n        {atlas{user,pw,db},s3{bucketName,region,accessKeyId,secretAccessKey},jwt{encode}}}\n        "}),headers:{"Content-Type":"application/json",Authorization:"Bearer "+this.context.token}}).then((function(e){if(200!==e.status&&201!==e.status)throw new Error("Failed!");return e.json()})).then((function(t){var a=t.data.getCreds;e.isActive&&(e.setState({isLoading:!1}),e.context.creds=a)})).catch((function(t){console.log(t),e.setState({userAlert:t}),e.isActive&&e.setState({isLoading:!1})}))}},{key:"updateUserSpecialProfile",value:function(e){console.log("special field to update:  ",e.target.value);var t=e.target.value;this.setState({userUpdateField:t})}},{key:"componentWillUnmount",value:function(){this.isActive=!1}},{key:"render",value:function(){return r.a.createElement(r.a.Fragment,null,!0===this.state.showAttachment&&r.a.createElement(ae,{onCloseAttachmentView:this.closeAttachmentView,attachmentFile:this.state.showThisAttachmentFile,attachmentType:this.state.showThisAttachmentType}),!0===this.state.createPdf&&r.a.createElement(ne,{pdfData:this.state.pdfData,onClosePdfCreator:this.closePdfCreator}),r.a.createElement(g.a,null,r.a.createElement(I.a,{md:3,className:"MasterCol1"},r.a.createElement(v,{authUserId:this.context.userId,alert:this.state.userAlert}),r.a.createElement($,{you:this.state.user})),r.a.createElement(I.a,{md:9,className:"MasterCol2"},r.a.createElement(w.a,{className:"containerProfile"},r.a.createElement(U.a.Container,{id:"left-tabs-example",defaultActiveKey:"Detail"},r.a.createElement(g.a,null,r.a.createElement(I.a,{sm:2},r.a.createElement(G.a,{variant:"pills",className:"flex-column"},r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"Detail"},"You")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"disabled",disabled:!0},"Edit:")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"Demographics"},"Demographics")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"userEditField"},"Single Field")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"disabled",disabled:!0},"Add:")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"Attandance"},"Attendance")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"Attachment"},"Attachment")),r.a.createElement(G.a.Item,null,r.a.createElement(G.a.Link,{eventKey:"Leave"},"Leave")))),r.a.createElement(I.a,{sm:10},r.a.createElement(U.a.Content,null,r.a.createElement(U.a.Pane,{eventKey:"Detail"},null!==this.state.user&&r.a.createElement(ua,{user:this.state.user,authUserId:this.context.userId,canDelete:this.state.canDelete,attendanceDelete:this.deleteUserAttendanceItem,leaveDelete:this.deleteUserLeaveItem,attachmentDelete:this.deleteUserAttachmentItem,onViewAttachment:this.onViewAttachment,onCreatePdf:this.createPdf})),r.a.createElement(U.a.Pane,{eventKey:"Demographics"},r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",onClick:this.startUpdateUserHandler},"Edit Demographics"),!0===this.state.updating&&r.a.createElement(re,{canCancelProfile:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmUpdateHandler,confirmText:"Confirm",user:this.state.user,authUserId:this.context.userId})),r.a.createElement(U.a.Pane,{eventKey:"userEditField"},null===this.state.selectedUser&&r.a.createElement(h.a,{variant:"outline-warning",size:"lg",className:"confirmEditButton"},"Select a Staff member from the Master List"),null!==this.state.selectedUser&&r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",onClick:this.startUpdateUserHandler},"Edit a Single Field"),this.state.updating&&null!==this.state.selectedUser&&r.a.createElement(ie,{authUserId:this.context.userId,canCancel:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.modalConfirmUpdateFieldHandler,confirmText:"Confirm",user:this.state.selectedUser})),r.a.createElement(U.a.Pane,{eventKey:"Attandance"},r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",value:"attendance",onClick:this.updateUserSpecialProfile.bind(this)},"Add Attendance"),"attendance"===this.state.userUpdateField&&r.a.createElement(le,{authUserId:this.context.userId,canCancelProfile:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updateUserAttendanceHandler,confirmText:"Confirm",user:this.state.selectedUser})),r.a.createElement(U.a.Pane,{eventKey:"Attachment"},r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",value:"attachments",onClick:this.updateUserSpecialProfile.bind(this)},"Add Attachment"),"attachments"===this.state.userUpdateField&&r.a.createElement(oe,{authUserId:this.context.userId,canCancelProfile:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updateUserAttachmentHandler,confirmText:"Confirm",user:this.state.selectedUser})),r.a.createElement(U.a.Pane,{eventKey:"Leave"},r.a.createElement(h.a,{variant:"outline-primary",size:"lg",className:"confirmEditButton",value:"leave",onClick:this.updateUserSpecialProfile.bind(this)},"Add Leave"),"leave"===this.state.userUpdateField&&r.a.createElement(ce,{authUserId:this.context.userId,canCancelProfile:!0,canConfirm:!0,onCancel:this.modalCancelHandler,onConfirm:this.updateUserLeaveHandler,confirmText:"Confirm",user:this.state.selectedUser}))))))))))}}]),t}(n.Component);ha.contextType=E;var fa=ha,ga=(a(531),function(e){return r.a.createElement(E.Consumer,null,(function(e){return r.a.createElement("header",{className:"main-navigation"},r.a.createElement("div",{className:"main-navigation__logo"},r.a.createElement("h1",null,"ENT EMR 0.1.2")),r.a.createElement("nav",{className:"main-navigation__items"},r.a.createElement("ul",null,!e.token&&r.a.createElement("li",null,r.a.createElement(p.b,{to:"/auth"},"Login")),!e.token&&r.a.createElement("li",null,r.a.createElement(p.b,{to:"/signup"},"Signup")),e.token&&r.a.createElement(r.a.Fragment,null,r.a.createElement("li",null,r.a.createElement(p.b,{to:"/profile"},"My Profile")),r.a.createElement("li",null,r.a.createElement(p.b,{to:"/users"},"Staff")),r.a.createElement("li",null,r.a.createElement(p.b,{to:"/patients"},"Patients")),r.a.createElement("li",null,r.a.createElement(p.b,{to:"/appointments"},"Appointments")),r.a.createElement("li",null,r.a.createElement("button",{onClick:e.logout},"Logout"))))))}))}),Ea=(a(532),function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(s.a)(this,Object(m.a)(t).call(this,e))).state={token:null,userId:null,context:a.context},a.login=function(e,t,n){a.setState({token:e,userId:t})},a.logout=function(){a.setState({token:null,userId:null}),sessionStorage.clear(),a.context={token:null,userId:null,user:{},users:[],selectedUser:{},selectedPatient:{},selectedAppointment:{},patient:{},appointment:{},appointmentPatientId:null,userUpdateField:null,patientUpdateField:null,appointmentUpdateField:null,appointmentsToday:null,appointmentsWeekImportant:null,appointmentsInProgress:null,userAlert:"",visit:null,file:null,fancyDate:null,login:a.login,logout:a.logout,creds:null}},a.sessionStorageAuth=null,a}return Object(d.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){return r.a.createElement(p.a,null,r.a.createElement(r.a.Fragment,null,r.a.createElement(E.Provider,{value:{token:this.state.token,userId:this.state.userId,user:{},users:[],selectedUser:{},selectedPatient:{},selectedAppointment:{},patient:{},appointment:{},appointmentPatientId:null,userUpdateField:null,patientUpdateField:null,appointmentUpdateField:null,appointmentsToday:null,appointmentsWeekImportant:null,appointmentsInProgress:null,userAlert:"",visit:null,file:null,fancyDate:null,login:this.login,logout:this.logout,creds:null}},r.a.createElement(ga,null),r.a.createElement("main",{className:"main-content"},r.a.createElement(u.d,null,this.state.token&&r.a.createElement(u.a,{from:"/",to:"/users",exact:!0}),this.state.token&&r.a.createElement(u.b,{path:"/users",component:fe}),this.state.token&&r.a.createElement(u.b,{path:"/patients",component:Yt}),this.state.token&&r.a.createElement(u.b,{path:"/appointments",component:pa}),this.state.token&&r.a.createElement(u.b,{path:"/profile",component:fa}),this.state.token&&r.a.createElement(u.a,{from:"/auth",to:"/profile",exact:!0}),!this.state.token&&r.a.createElement(u.b,{path:"/auth",component:b}),!this.state.token&&r.a.createElement(u.b,{path:"/signup",component:S}),!this.state.token&&r.a.createElement(u.a,{to:"/auth",exact:!0}))))))}}]),t}(n.Component));Ea.contextType=E;var ya=Ea;l.a.render(r.a.createElement(ya,null),document.getElementById("root"))}},[[300,1,2]]]);
//# sourceMappingURL=main.2562417d.chunk.js.map